openapi: 3.0.1
info:
  title: LXD
  version: 1.0.0
  description: The services listed below are referred as .....
  contact:
    name: Support Team
    url: 'https://www.relxd.org/'
    email: support@relxd.org
  license:
    name: Relxd General Licence
    url: 'https://www.relxd.org/terms-of-service/'
servers:
  -
    url: 'http://localhost:2375/'
    description: LXD
paths:
  /:
    get:
      tags:
        - supported-apis
      parameters:
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: List of supported APIs
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getApiList
      description: List of supported APIs
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0:
    get:
      tags:
        - server-config
      parameters:
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: Server configuration and environment information
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getServerState
      description: Server configuration and environment information
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        description: Replaces any existing config with the provided one
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerStateRequest'
      tags:
        - server-config
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putServerState
      description: Replaces the server configuration or other properties
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    patch:
      requestBody:
        description: 'Updates only the listed keys, rest remains intact'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerStateRequest'
      tags:
        - server-config
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: patchServerState
      description: Updates the server configuration or other properties
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /1.0/certificates:
    get:
      tags:
        - certificates
      parameters:
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: List of trusted certificates
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getCertificates
      description: Return a list of trusted certificates
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        description: Add a new trusted certificate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCertificatesRequest'
      tags:
        - certificates
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postCertificates
      description: Add a new trusted certificate
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/certificates/{fingerprint}':
    get:
      tags:
        - certificates
      parameters:
        -
          style: simple
          explode: false
          name: fingerprint
          description: Unique fingerprint
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Trusted certificate information
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getCertificatesByFingerPrint
      description: Return a trusted certificate information
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        description: Replaces the certificate properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFingerprintRequest'
      tags:
        - certificates
      parameters:
        -
          style: simple
          explode: false
          name: fingerprint
          description: Unique fingerprint
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putFingerprint
      description: Replaces the certificate properties
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    delete:
      tags:
        - certificates
      parameters:
        -
          style: simple
          explode: false
          name: fingerprint
          description: Unique fingerprint
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteFingerprint
      description: Remove a trusted certificate
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      requestBody:
        description: Updates the certificate properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFingerprintRequest'
      tags:
        - certificates
      parameters:
        -
          style: simple
          explode: false
          name: fingerprint
          description: Unique fingerprint
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: patchFingerprint
      description: Updates the certificate properties
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /1.0/instances:
    get:
      tags:
        - instances
      parameters:
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: List of instances
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getInstances
      description: Return a list of URLs for instances this server hosts
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        $ref: '#/components/requestBodies/CreateInstancesRequest'
      tags:
        - instances
      parameters:
        -
          style: form
          explode: true
          name: target
          description: '?target=<member>'
          schema:
            type: string
          in: query
          required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postInstances
      description: Create a new instance
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/instances/{name}':
    get:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Instance information
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getInstancesByName
      description: Get Instance information
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstancesByNameRequest'
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putInstancesByName
      description: Replaces instance configuration or restore snapshot
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    post:
      requestBody:
        $ref: '#/components/requestBodies/CreateInstancesByNameRequest'
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: target
          description: '?target=<member>'
          schema:
            type: string
          in: query
          required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example_1:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: Background return value responses
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postInstancesByName
      description: Used to rename/migrate the instance
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    delete:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteInstancesByName
      description: Remove the instance
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      requestBody:
        description: Update instance configuration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchInstancesByNameRequest'
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: patchInstancesByName
      description: Update instance configuration
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/instances/{name}/console':
    get:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Instance information
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getInstancesByNameConsole
      description: Returns the contents of the instance's console log
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        $ref: '#/components/requestBodies/CreateInstancesByNameConsoleRequest'
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postInstancesByNameConsole
      description: Attach to an instance's console devices
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    delete:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          description: empty response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteInstancesByNameConsole
      description: Empty the instance's console log
      x-codegen-request-body-name: body
      x-accepts: application/json
  '/1.0/instances/{name}/exec':
    post:
      requestBody:
        $ref: '#/components/requestBodies/CreateInstancesByNameExecRequest'
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: Background operation + optional websocket information
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postInstancesByNameExec
      description: Run a remote command
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/instances/{name}/files':
    get:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
        -
          style: form
          explode: true
          example: /path/inside/the/instance
          name: path
          description: directory listing from the instance
          schema:
            type: string
          in: query
          required: false
        -
          style: simple
          explode: false
          example: 0
          name: X-LXD-uid
          schema:
            format: uuid
            type: integer
          in: header
          required: false
        -
          style: simple
          explode: false
          example: 0
          name: X-LXD-gid
          schema:
            format: uuid
            type: integer
          in: header
          required: false
        -
          style: simple
          explode: false
          example: 700
          name: X-LXD-mode
          schema:
            format: uuid
            type: integer
          in: header
          required: false
        -
          style: simple
          explode: false
          name: X-LXD-type
          description: one of directory or file
          schema:
            format: uuid
            type: string
          in: header
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawFile'
          description: Download a file or directory listing from the instance
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getInstancesByNameFiles
      description: Download a file or directory listing from the instance
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        description: Upload a file to the instance
        content:
          image/*:
            schema:
              format: binary
              type: string
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          example: /path/inside/the/instance
          name: path
          description: directory listing from the instance
          schema:
            type: string
          in: query
          required: false
        -
          style: simple
          explode: false
          example: 0
          name: X-LXD-uid
          schema:
            format: uuid
            type: integer
          in: header
          required: false
        -
          style: simple
          explode: false
          example: 0
          name: X-LXD-gid
          schema:
            format: uuid
            type: integer
          in: header
          required: false
        -
          style: simple
          explode: false
          example: 700
          name: X-LXD-mode
          schema:
            format: uuid
            type: integer
          in: header
          required: false
        -
          style: simple
          explode: false
          name: X-LXD-write
          description: overwrite (or append)
          schema:
            format: uuid
            type: string
          in: header
          required: false
        -
          style: simple
          explode: false
          name: X-LXD-type
          description: one of directory or file or symlink
          schema:
            type: string
          in: header
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postInstancesByNameFiles
      description: Upload a file to the instance
      x-codegen-request-body-name: body
      x-contentType: image/*
      x-accepts: application/json
    delete:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          example: /path/inside/the/instance
          name: path
          description: directory listing from the instance
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteInstancesByNameFiles
      description: Delete a file in the instance
      x-codegen-request-body-name: body
      x-accepts: application/json
  '/1.0/instances/{name}/snapshots':
    get:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: snapshots response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getInstancesByNameSnapshots
      description: List of snapshots
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        description: Create a new snapshot
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstancesByNameSnapshotRequest'
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postInstancesByNameSnapshot
      description: Create a new snapshot
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/instances/{name}/snapshots/{snapshotName}':
    get:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: snapshotName
          description: Snapshot name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Snapshot information
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getInstancesByNameSnapshotsInformation
      description: Snapshot information
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        description: Update the snapshot
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstancesByNameSnapshotsInformationRequest'
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: snapshotName
          description: Snapshot name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putInstancesByNameSnapshotsInformation
      description: Update the snapshot
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    post:
      requestBody:
        $ref: '#/components/requestBodies/CreateInstancesByNameSnapshotsInformationRequest'
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: snapshotName
          description: Snapshot name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example_1:
                  $ref: '#/components/examples/BackgroundOperationResponse'
                Example_2:
                  $ref: >-
                    #/components/examples/CreateInstancesByNameSnapshotsInformationResponse
          description: Create Instances By Name Snapshots Information Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postInstancesByNameSnapshotsInformation
      description: Used to rename/migrate the snapshot
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    delete:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: snapshotName
          description: Snapshot name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteInstancesByNameSnapshotsInformation
      description: Remove the snapshot
      x-codegen-request-body-name: body
      x-accepts: application/json
  '/1.0/instances/{name}/state':
    get:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Current state
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getInstancesByNameState
      description: Current state
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        description: Change the instance state
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstancesByNameStateRequest'
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putInstancesByNameState
      description: Change the instance state
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/instances/{name}/logs':
    get:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: Instances logs response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getInstancesByNameLogs
      description: >-
        Returns a list of the log files available for this instance. Note that this works on instances
        that have been deleted (or were never created) to enable people to get logs for failed
        creations.
      x-codegen-request-body-name: body
      x-accepts: application/json
  '/1.0/instances/{name}/logs/{logFile}':
    get:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: logFile
          description: Instance log file
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: Instances logs response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getInstancesByNameLogsFile
      description: Returns the contents of a particular log file.
      x-codegen-request-body-name: body
      x-accepts: application/json
    delete:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: logFile
          description: Instance log file
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteInstancesByNameLogsFile
      description: Delete a particular log file.
      x-codegen-request-body-name: body
      x-accepts: application/json
  '/1.0/instances/{name}/metadata':
    get:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Instance metadata
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getInstancesByNameMetadata
      description: Instance metadata
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        description: Replaces instance metadata
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstancesByNameMetadataResponse'
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putInstancesByNameMetadata
      description: Replaces instance metadata
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/instances/{name}/metadata/templates':
    get:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
        -
          style: form
          explode: true
          name: path
          description: Template
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: Instances metadata templates response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getInstancesByNameMetadataTemplates
      description: List instance templates
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        description: Replace content of a template
        content:
          file:
            schema:
              format: binary
              type: string
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: path
          description: Template
          schema:
            type: string
          in: query
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putInstancesByNameMetadataTemplates
      description: Replace content of a template
      x-codegen-request-body-name: body
      x-contentType: file
      x-accepts: application/json
    post:
      requestBody:
        description: Add a container template
        content:
          file:
            schema:
              format: binary
              type: string
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: path
          description: Template
          schema:
            type: string
          in: query
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postInstancesByNameMetadataTemplates
      description: Add a container template
      x-codegen-request-body-name: body
      x-contentType: file
      x-accepts: application/json
    delete:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: path
          description: Template
          schema:
            type: string
          in: query
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteInstancesByNameMetadataTemplates
      description: Delete an instance template
      x-codegen-request-body-name: body
      x-accepts: application/json
  '/1.0/instances/{name}/backups':
    get:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: List of backups for the instance
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getInstancesByNameBackups
      description: List of backups for the instance
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        description: Create a new backup
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstancesByNameBackupsRequest'
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postInstancesByNameBackups
      description: Create a new backup
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/instances/{name}/backups/{backupsName}':
    get:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: backupsName
          description: Backups name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Backup information
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getInstancesByNameBackupsByName
      description: Backup information
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        description: Used to rename the backup
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstancesByNameBackupsByNameRequest'
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: backupsName
          description: Backups name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postInstancesByNameBackupsByName
      description: Used to rename the backup
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    delete:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: backupsName
          description: Backups name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteInstancesByNameBackupsByName
      description: Remove the backup
      x-codegen-request-body-name: body
      x-accepts: application/json
  '/1.0/instances/{name}/backups/{backupsName}/export':
    get:
      tags:
        - instances
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Instance name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: backupsName
          description: Backups name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Fetch the backup tarball
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getInstancesByNameBackupsByNameExport
      description: Fetch the backup tarball
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/events:
    get:
      tags:
        - events
      parameters:
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
        -
          style: form
          explode: false
          name: type
          description: Type
          schema:
            enum:
              - operation
              - logging
              - lifecycle
            type: string
          in: query
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: websocket upgrade
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getEvents
      description: Websocket upgrade
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/images:
    get:
      tags:
        - images
      parameters:
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: List of images (public or private)
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getImages
      description: List of images (public or private)
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        $ref: '#/components/requestBodies/CreateImagesRequest'
      tags:
        - images
      parameters:
        -
          style: form
          explode: true
          example: SHA-256
          name: X-LXD-fingerprint
          description: 'if set, uploaded file must match'
          schema:
            type: string
          in: query
          required: false
        -
          style: simple
          explode: false
          example: FILENAME
          name: X-LXD-filename
          description: used for export
          schema:
            type: string
          in: header
          required: false
        -
          style: simple
          explode: false
          example: true
          name: X-LXD-public
          description: defaults to false
          schema:
            type: boolean
          in: header
          required: false
        -
          style: simple
          explode: false
          example: URL-encoded key value pairs without duplicate keys
          name: X-LXD-properties
          schema:
            type: string
          in: header
          required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postImages
      description: Create and publish a new image
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/images/{fingerprint}':
    get:
      tags:
        - images
      parameters:
        -
          style: simple
          explode: false
          name: fingerprint
          description: Unique fingerprint
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
        -
          style: form
          explode: true
          name: secret
          description: secret
          schema:
            type: string
            example: SECRET
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Download the image tarball
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getImagesFingerprint
      description: Image description and metadata
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        description: 'Replaces the image properties, update information and visibility'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImagesFingerprintRequest'
      tags:
        - images
      parameters:
        -
          style: simple
          explode: false
          name: fingerprint
          description: Unique fingerprint
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putImagesFingerprint
      description: 'Replaces the image properties, update information and visibility'
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    delete:
      tags:
        - images
      parameters:
        -
          style: simple
          explode: false
          name: fingerprint
          description: Unique fingerprint
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteImagesFingerprint
      description: Remove an image
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      requestBody:
        description: 'Updates the image properties, update information and visibility'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchImagesFingerprintRequest'
      tags:
        - images
      parameters:
        -
          style: simple
          explode: false
          name: fingerprint
          description: Unique fingerprint
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: patchImagesFingerprint
      description: 'Updates the image properties, update information and visibility'
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/images/{fingerprint}/export':
    get:
      tags:
        - images
      parameters:
        -
          style: simple
          explode: false
          name: fingerprint
          description: Unique fingerprint
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
        -
          style: form
          explode: true
          name: secret
          description: secret
          schema:
            type: string
            example: SECRET
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Download the image tarball
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getImagesByFingerprintExport
      description: Download the image tarball
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        description: Upload the image tarball
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImagesFingerprintExportRequest'
      tags:
        - images
      parameters:
        -
          style: simple
          explode: false
          name: fingerprint
          description: Unique fingerprint
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postImagesFingerprintExport
      description: Upload the image tarball
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/images/{fingerprint}/refresh':
    get:
      tags:
        - images
      parameters:
        -
          style: simple
          explode: false
          name: fingerprint
          description: Unique fingerprint
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getImagesFingerprintRefresh
      description: Refresh an image from its origin
      x-codegen-request-body-name: body
      x-accepts: application/json
  '/1.0/images/{fingerprint}/secret':
    post:
      requestBody:
        description: Generate a random token and tell LXD to expect it be used by a guest
        content:
          application/json:
            schema:
              type: object
      tags:
        - images
      parameters:
        -
          style: simple
          explode: false
          name: fingerprint
          description: Unique fingerprint
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postImagesFingerprintSecret
      description: Generate a random token and tell LXD to expect it be used by a guest
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /1.0/images/aliases:
    get:
      tags:
        - images
      parameters:
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: List of aliases (public or private based on image visibility)
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getImagesAliases
      description: List of aliases (public or private based on image visibility)
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        description: Create a new alias
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImagesAliasesRequest'
      tags:
        - images
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postImagesAliases
      description: Create a new alias
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/images/aliases/{name}':
    get:
      tags:
        - images
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Name of the alias
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Snapshot information
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getImagesAliasesByName
      description: Alias description and target
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        description: Replaces the alias target or description
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImagesAliasesByNameRequest'
      tags:
        - images
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Name of the alias
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putImagesAliasesByName
      description: Replaces the alias target or description
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    post:
      requestBody:
        description: Rename an alias
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImagesAliasesByNameRequest'
      tags:
        - images
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Name of the alias
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postImagesAliasesByName
      description: Rename an alias
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    delete:
      tags:
        - images
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Name of the alias
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteImagesAliasesByName
      description: Remove an alias
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      requestBody:
        description: Updates the alias target or description
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImagesAliasesByNameRequest'
      tags:
        - images
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Name of the alias
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: patchImagesAliasesByName
      description: Updates the alias target or description
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /1.0/networks:
    get:
      tags:
        - networks
      parameters:
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: List of networks
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getNetworks
      description: List of networks
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        description: Define a new network
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworksRequest'
      tags:
        - networks
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postNetworks
      description: Define a new network
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/networks/{name}':
    get:
      tags:
        - networks
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Name of the network
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Information about a network
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getNetworksByName
      description: Information about a network
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        description: Replace the network information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNetworksByNameRequest'
      tags:
        - networks
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Name of the network
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putNetworksByName
      description: Replace the network information
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    post:
      requestBody:
        description: Rename a network
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworksByNameRequest'
      tags:
        - networks
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Name of the network
          schema:
            type: string
          in: path
          required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/Response'
          description: A standard value return response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postNetworksByName
      description: Rename a network
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    delete:
      tags:
        - networks
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Name of the network
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteNetworksByName
      description: Remove a network
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      requestBody:
        description: Update the network information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchNetworksByNameRequest'
      tags:
        - networks
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Name of the network
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: patchNetworksByName
      description: Update the network information
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/networks/{name}/state':
    get:
      tags:
        - networks
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Name of the network
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Network state
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getNetworksByNameState
      description: Network state
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/operations:
    get:
      tags:
        - operations
      parameters:
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: List of operations
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getOperations
      description: List of operations
      x-codegen-request-body-name: body
      x-accepts: application/json
  '/1.0/operations/{uuid}':
    get:
      tags:
        - operations
      parameters:
        -
          style: simple
          explode: false
          name: uuid
          description: UUID
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Background operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getOperationsUUID
      description: Background operation
      x-codegen-request-body-name: body
      x-accepts: application/json
    delete:
      tags:
        - operations
      parameters:
        -
          style: simple
          explode: false
          name: uuid
          description: UUID
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteOperationsUUID
      description: >-
        Cancel an operation. Calling this will change the state to "cancelling" rather than actually
        removing the entry.
      x-codegen-request-body-name: body
      x-accepts: application/json
  '/1.0/operations/{uuid}/wait':
    get:
      tags:
        - operations
      parameters:
        -
          style: simple
          explode: false
          name: uuid
          description: UUID
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
        -
          style: form
          explode: true
          name: timeout
          description: timeout
          schema:
            type: number
            example: 30
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Background operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getOperationsUUIDWait
      description: Wait for an operation to finish
      x-codegen-request-body-name: body
      x-accepts: application/json
  '/1.0/operations/{uuid}/websocket':
    get:
      tags:
        - operations
      parameters:
        -
          style: simple
          explode: false
          name: uuid
          description: UUID
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
        -
          style: form
          explode: true
          name: secret
          description: secret
          schema:
            type: string
            example: SECRET
          in: query
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Background operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getOperationsUUIDWebsocket
      description: >-
        -< This connection is upgraded into a websocket connection speaking the protocol defined by
        the operation type. For example, in the case of an exec operation, the websocket is the
        bidirectional pipe for stdin/stdout/stderr to flow to and from the process inside the
        instance. In the case of migration, it will be the primary interface over which the migration
        information is communicated. The secret here is the one that was provided when the operation
        was created. Guests are allowed to connect provided they have the right secret.
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/profiles:
    get:
      tags:
        - profiles
      parameters:
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: List of configuration profiles
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getProfiles
      description: List of configuration profiles
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        description: Define a new profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfilesRequest'
      tags:
        - profiles
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postProfiles
      description: Define a new profile
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/profiles/{name}':
    get:
      tags:
        - profiles
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Profiles name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Profile configuration
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getProfilesByName
      description: Profile configuration
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        description: Replace the profile information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfilesByNameRequest'
      tags:
        - profiles
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Profiles name
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putProfilesByName
      description: Replace the profile information
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    post:
      requestBody:
        description: Rename a profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfilesByNameRequest'
      tags:
        - profiles
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Profiles name
          schema:
            type: string
          in: path
          required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/Response'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postProfilesByName
      description: Rename a profile
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    delete:
      tags:
        - profiles
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Profiles name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteProfilesByName
      description: Remove a profile
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      requestBody:
        description: Update the profile information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfilesByNameRequest'
      tags:
        - profiles
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Profiles name
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: patchProfilesByName
      description: Update the profile information
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /1.0/projects:
    get:
      tags:
        - projects
      parameters:
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/GetProjectsResponse'
          description: List of projects
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getProjects
      description: List of projects
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        description: Define a new project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectsRequest'
      tags:
        - projects
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postProjects
      description: Define a new project
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/projects/{name}':
    get:
      tags:
        - projects
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Projects name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Project configuration
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getProjectsByName
      description: Project configuration
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        description: Replace the project information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectsByNameRequest'
      tags:
        - projects
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Projects name
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putProjectsByName
      description: Replace the project information
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    post:
      requestBody:
        description: Rename a project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectsByNameRequest'
      tags:
        - projects
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Projects name
          schema:
            type: string
          in: path
          required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/Response'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postProjectsByName
      description: Rename a project
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    delete:
      tags:
        - projects
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Projects name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteProjectsByName
      description: Remove a project
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      requestBody:
        description: Update the project information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectsByNameRequest'
      tags:
        - projects
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Projects name
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: patchProjectsByName
      description: Update the project information
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /1.0/storage-pools:
    get:
      tags:
        - storage-pools
      parameters:
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/GetStoragePoolsResponse'
          description: List of storage pools
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getStoragePools
      description: List of storage pools
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        description: Define a new storage pool
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStoragePoolsRequest'
      tags:
        - storage-pools
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postStoragePools
      description: Define a new storage pool
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/storage-pools/{pool}':
    get:
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Information about a storage pool
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getStoragePoolsByName
      description: Information about a storage pool
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        description: Replace the storage pool information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStoragePoolsByNameRequest'
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putStoragePoolsByName
      description: Replace the storage pool information
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    delete:
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteStoragePoolsByName
      description: Remove a storage pool
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      requestBody:
        description: Update the storage pool information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchStoragePoolsByNameRequest'
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: patchStoragePoolsByName
      description: Update the storage pool information
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/storage-pools/{pool}/resources':
    get:
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Profiles name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Information about the resources available to the storage pool
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getStoragePoolsByNameResources
      description: Information about the resources available to the storage pool
      x-codegen-request-body-name: body
      x-accepts: application/json
  '/1.0/storage-pools/{pool}/volumes':
    get:
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: list of storage volumes
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getStoragePoolsByNameVolumes
      description: List of storage volumes
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        $ref: '#/components/requestBodies/CreateStoragePoolsByNameVolumesRequest'
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postStoragePoolsByNameVolumes
      description: Create a new storage volume on a given storage pool
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/storage-pools/{pool}/volumes/{type}':
    post:
      requestBody:
        $ref: '#/components/requestBodies/CreateStoragePoolsByNameVolumesByTypeRequest'
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: type
          description: Type of the volume
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postStoragePoolsByNameVolumesByType
      description: Create a new storage volume of a particular type on a given storage pool
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/storage-pools/{pool}/volumes/{type}/{name}':
    get:
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: type
          description: Type of the volume
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: name
          description: name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Information about a storage volume of a given type on a storage pool
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getStoragePoolsByNameVolumesByTypeName
      description: Information about a storage volume of a given type on a storage pool
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        $ref: '#/components/requestBodies/UpdateStoragePoolsByNameVolumesByTypeNameRequest'
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: type
          description: Type of the volume
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: name
          description: name
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putStoragePoolsByNameVolumesByTypeName
      description: Replace the storage volume information or restore from snapshot
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    post:
      requestBody:
        $ref: '#/components/requestBodies/CreateStoragePoolsByNameVolumesByTypeNameRequest'
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: type
          description: Type of the volume
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: name
          description: name
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example_1:
                  $ref: '#/components/examples/BackgroundOperationResponse'
                Example_2:
                  $ref: >-
                    #/components/examples/CreateStoragePoolsByNameVolumesByTypeNameResponse
          description: Create Instances By Name Exec Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postStoragePoolsByNameVolumesByTypeName
      description: Rename a storage volume on a given storage pool
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    delete:
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: type
          description: Type of the volume
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: name
          description: name
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteStoragePoolsByNameVolumesByTypeName
      description: Delete a storage volume of a given type on a given storage pool
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      requestBody:
        description: Update the storage volume information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStoragePoolsByNameVolumesByTypeNameRequest2'
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: type
          description: Type of the volume
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: name
          description: name
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: patchStoragePoolsByNameVolumesByTypeName
      description: Update the storage volume information
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/storage-pools/{pool}/volumes/{type}/{name}/snapshots':
    get:
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: type
          description: Type of the volume
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: name
          description: name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: List of volume snapshots
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getStoragePoolsByNameVolumesByTypeNameSnapshots
      description: List of volume snapshots
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        description: Create a new volume snapshot
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStoragePoolsByNameVolumesByTypeNameSnapshotsRequest'
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: type
          description: Type of the volume
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: name
          description: name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postStoragePoolsByNameVolumesByTypeNameSnapshots
      description: Create a new volume snapshot
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  '/1.0/storage-pools/{pool}/volumes/{type}/{name}/snapshots/name':
    get:
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: type
          description: Type of the volume
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: name
          description: name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Snapshot information
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getStoragePoolsByNameVolumesByTypeNameSnapshotsName
      description: Snapshot information
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        description: Volume snapshot information
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UpdateStoragePoolsByNameVolumesByTypeNameSnapshotsNameRequest
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: type
          description: Type of the volume
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: name
          description: name
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Snapshot information
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putStoragePoolsByNameVolumesByTypeNameSnapshotsName
      description: Volume snapshot information
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    post:
      requestBody:
        description: Used to rename the volume snapshot
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CreateStoragePoolsByNameVolumesByTypeNameSnapshotsNameRequest
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: type
          description: Type of the volume
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: name
          description: name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postStoragePoolsByNameVolumesByTypeNameSnapshotsName
      description: Used to rename the volume snapshot
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    delete:
      tags:
        - storage-pools
      parameters:
        -
          style: simple
          explode: false
          name: pool
          description: Storage pool name
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: type
          description: Type of the volume
          schema:
            type: string
          in: path
          required: true
        -
          style: simple
          explode: false
          name: name
          description: name
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteStoragePoolsByNameVolumesByTypeNameSnapshotsName
      description: Remove the volume snapshot
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/resources:
    get:
      tags:
        - resources
      parameters:
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Information about the resources available to the LXD server
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getResources
      description: Information about the resources available to the LXD server
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/cluster:
    get:
      tags:
        - cluster
      parameters:
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Information about a cluster (such as networks and storage pools)
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getCluster
      description: Information about a cluster (such as networks and storage pools)
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      requestBody:
        $ref: '#/components/requestBodies/UpdateClusterRequest'
      tags:
        - cluster
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: putCluster
      description: 'Bootstrap or join a cluster, or disable clustering on this node'
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /1.0/cluster/members:
    get:
      tags:
        - cluster
      parameters:
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: List of LXD members in the cluster
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getClusterMembers
      description: List of LXD members in the cluster
      x-codegen-request-body-name: body
      x-accepts: application/json
  '/1.0/cluster/members/{name}':
    get:
      tags:
        - cluster
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Members name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: recursion
          description: >-
            To optimize queries of large lists, recursion is implemented for collections. The
            default value is 0 which means that collection member URLs are returned. Setting it to
            1 will have those URLs be replaced by the object they point to (typically a dict).
          schema:
            type: integer
          in: query
          required: false
        -
          style: pipeDelimited
          explode: true
          name: filter
          description: >-
            There is no default value for filter which means that all results found will be
            returned. The language follows the OData conventions for structuring REST API
            filtering logic. Logical operators are also supported for filtering: not(not),
            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left
            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is
            also supported.
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Retrieve the member's information and status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: getClusterMembersByName
      description: Retrieve the member's information and status
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      requestBody:
        description: Rename a cluster member
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterMembersByNameRequest'
      tags:
        - cluster
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Members name
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A standard return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: postClusterMembersByName
      description: Rename a cluster member
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    delete:
      tags:
        - cluster
      parameters:
        -
          style: simple
          explode: false
          name: name
          description: Members name
          schema:
            type: string
          in: path
          required: true
        -
          style: form
          explode: true
          name: force
          description: force
          schema:
            type: number
          in: query
          required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
          description: A basic background return value response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
          description: A standard error response
      operationId: deleteClusterMembersByName
      description: Remove a member of the cluster
      x-codegen-request-body-name: body
      x-accepts: application/json
components:
  schemas:
    StandardReturnValueResponse:
      required:
        - status
        - statusCode
        - type
        - metadata
      type: object
      properties:
        type:
          type: string
          example: sync
        status:
          description: String version of the operation's status
          type: string
          example: Success
        status_code:
          description: Integer version of the operation's status (use this rather than status)
          type: integer
          example: 200
        error:
          type: string
          example: Failure
        error_code:
          type: integer
          example: 400
        metadata:
          type: object
      example:
        metadata: '{}'
        status_code: 200
        type: sync
        status: Success
        error: Failure
        error_code: 400
    BackgroundOperationResponse:
      required:
        - operation
        - status
        - statusCode
        - type
        - metadata
      type: object
      properties:
        type:
          type: string
          example: async
        status:
          description: String version of the operation's status
          type: string
          example: OK
        status_code:
          description: Integer version of the operation's status (use this rather than status)
          type: integer
          example: 100
        operation:
          description: URL to the background operation
          type: string
          example: /1.0/instances/<id>
        error:
          type: string
          example: Failure
        error_code:
          type: integer
          example: 400
        metadata:
          type: object
      example:
        metadata: '{}'
        status_code: 100
        type: async
        operation: /1.0/instances/<id>
        status: OK
        error_code: 0
    ErrorResponse:
      type: object
      properties:
        type:
          type: string
          example: error
        error:
          type: string
          example: Failure
        error_code:
          type: integer
          example: 400
        metadata:
          description: More details about the error
          type: object
    BasicBackgroundOperationResponse:
      required:
        - operation
        - status
        - statusCode
        - type
      type: object
      properties:
        type:
          type: string
          example: async
        status:
          description: String version of the operation's status
          type: string
          example: OK
        status_code:
          description: Integer version of the operation's status (use this rather than status)
          type: integer
          example: 100
        operation:
          description: URL to the background operation
          type: string
          example: /1.0/instances/<id>
        metadata:
          type: object
      example:
        metadata: '{}'
        status_code: 100
        type: async
        operation: /1.0/instances/<id>
        status: OK
    GetServerStateResponse:
      description: Return value (if trusted)
      required:
        - api_extensions
        - api_status
        - api_version
        - auth
        - public
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/GetServerStateResponse_metadata'
      example:
        metadata:
          environment:
            architectures:
              - x86_64
              - i686
            server_pid: 10224
            storage_version: '3.19'
            server: lxc
            addresses: '[1.2.3.4:8443,[1234::1234]:8443]'
            kernel: Linux
            certificate: PEM certificate
            storage: btrfs
            server_version: 0.8.1
            kernel_architecture: x86_64
            driver: lxc
            kernel_version: '3.16'
            driver_version: 1.0.6
          api_extensions:
            - api_extensions
            - api_extensions
          public: false
          auth: '["guest","untrusted","trusted"]'
          api_status: stable
          api_version: '1.0'
          config:
            core.https_address: '[::]:8443'
            core.trust_password: true
    ServerConfig:
      type: object
      properties:
        core.trust_password:
          type: string
          example: my-password
        core.https_address:
          type: string
          example: '[::]:8443'
      example:
        core.https_address: '[::]:8443'
        core.trust_password: my-password
    Environment:
      type: object
      properties:
        addresses:
          type: array
          items:
            type: string
          example: '[1.2.3.4:8443,[1234::1234]:8443]'
        architectures:
          type: array
          items:
            type: string
          example:
            - x86_64
            - i686
        certificate:
          type: string
          example: PEM certificate
        driver:
          type: string
          example: lxc
        driver_version:
          type: string
          example: 1.0.6
        kernel:
          type: string
          example: Linux
        kernel_architecture:
          type: string
          example: x86_64
        kernel_version:
          type: string
          example: '3.16'
        server:
          type: string
          example: lxc
        server_pid:
          type: integer
          example: 10224
        server_version:
          type: string
          example: 0.8.1
        storage:
          type: string
          example: btrfs
        storage_version:
          type: string
          example: '3.19'
      example:
        architectures:
          - x86_64
          - i686
        server_pid: 10224
        storage_version: '3.19'
        server: lxc
        addresses: '[1.2.3.4:8443,[1234::1234]:8443]'
        kernel: Linux
        certificate: PEM certificate
        storage: btrfs
        server_version: 0.8.1
        kernel_architecture: x86_64
        driver: lxc
        kernel_version: '3.16'
        driver_version: 1.0.6
    UpdateServerStateRequest:
      $ref: '#/components/schemas/ServerConfig'
    CreateCertificatesRequest:
      type: object
      properties:
        type:
          description: 'Certificate type (keyring), currently only client'
          type: string
          example: client
        certificate:
          description: >-
            If provided, a valid x509 certificate. If not, the client certificate of the
            connection will be used
          type: string
          example: PEM certificate
        name:
          description: >-
            An optional name for the certificate. If nothing is provided, the host in the TLS
            header for the request is used.
          type: string
          example: foo
        password:
          description: The trust password for that server (only required if untrusted)
          type: string
          example: server-trust-password
      example:
        password: server-trust-password
        certificate: PEM certificate
        name: foo
        type: client
    GetFingerprintResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/GetFingerprintResponse_metadata'
      example:
        metadata:
          certificate: PEM certificate
          name: foo
          fingerprint: SHA256 Hash of the raw certificate
          type: client
    UpdateFingerprintRequest:
      type: object
      properties:
        type:
          description: 'Certificate type (keyring), currently only client'
          type: string
          example: client
        name:
          description: >-
            An optional name for the certificate. If nothing is provided, the host in the TLS
            header for the request is used.
          type: string
          example: foo
      example:
        name: foo
        type: client
    Source:
      required:
        - type
      type: object
      properties:
        type:
          description: 'Can be "image", "migration", "copy" or "none".'
          type: string
          example: image
        alias:
          description: Name of the alias.
          type: string
          example: ubuntu/devel
        fingerprint:
          description: Fingerprint
          type: string
          example: SHA-256
        properties:
          $ref: '#/components/schemas/Properties'
        mode:
          description: One of "local" (default) or "pull"
          type: string
          example: pull
        server:
          description: Remote server (pull mode only)
          type: string
          example: 'https://10.0.2.3:8443'
        protocol:
          description: 'Protocol (one of lxd or simplestreams, defaults to lxd)'
          type: string
          example: lxd
        certificate:
          description: 'Optional PEM certificate. If not mentioned, system CA is used.'
          type: string
          example: PEM certificate
        secret:
          description: Secret to use to retrieve the image (pull mode only).
          type: string
          example: my-secret-string
        operation:
          description: Full URL to the remote operation (pull mode only).
          type: string
          example: 'https://10.0.2.3:8443/1.0/operations/<UUID>'
        base-image:
          description: 'Optional, the base image the instance was created from'
          type: string
          example: <fingerprint>
        instance_only:
          description: Whether to migrate only the instance without snapshots. Can be "true" or "false".
          type: boolean
          example: true
        secrets:
          $ref: '#/components/schemas/Secrets'
        source:
          description: Name of the source instance
          type: string
          example: my-old-instance
        live:
          description: Whether migration is performed live
          type: boolean
          example: true
      example:
        instance_only: true
        server: 'https://10.0.2.3:8443'
        certificate: PEM certificate
        secret: my-secret-string
        source: my-old-instance
        type: image
        secrets:
          criu: my-other-secret
          control: my-secret-string
          fs: my third secret
        mode: pull
        protocol: lxd
        base-image: <fingerprint>
        fingerprint: SHA-256
        alias: ubuntu/devel
        operation: 'https://10.0.2.3:8443/1.0/operations/<UUID>'
        properties:
          os: ubuntu
          release: '18.04'
          architecture: x86_64
        live: true
    DevicesKvm:
      type: object
      properties:
        kvm:
          $ref: '#/components/schemas/Kvm'
      example:
        kvm:
          path: /dev/kvm
          type: unix-char
    Kvm:
      type: object
      properties:
        path:
          type: string
          example: /dev/kvm
        type:
          type: string
          example: unix-char
      example:
        path: /dev/kvm
        type: unix-char
    Secrets:
      type: object
      properties:
        control:
          type: string
          example: my-secret-string
        criu:
          type: string
          example: my-other-secret
        fs:
          type: string
          example: my third secret
      example:
        criu: my-other-secret
        control: my-secret-string
        fs: my third secret
    Properties:
      type: object
      properties:
        os:
          type: string
          example: ubuntu
        release:
          type: string
          example: '18.04'
        architecture:
          type: string
          example: x86_64
      example:
        os: ubuntu
        release: '18.04'
        architecture: x86_64
    GetInstancesByNameResponse:
      type: object
      properties:
        architecture:
          type: string
          example: x86_64
        config:
          $ref: '#/components/schemas/HardwareSpecsConfig'
        created_at:
          type: string
          example: '2016-02-16T01:05:05.000Z'
        devices:
          $ref: '#/components/schemas/DevicesRoot'
        ephemeral:
          type: boolean
          example: false
        expanded_config:
          $ref: '#/components/schemas/ExpandedConfig'
        expanded_devices:
          $ref: '#/components/schemas/ExpandedDevices'
        last_used_at:
          type: string
          example: '2016-02-16T01:05:05.000Z'
        name:
          type: string
          example: my-instance
        profiles:
          type: array
          items:
            type: string
        stateful:
          description: >-
            If true, indicates that the instance has some stored state that can be restored on
            startup
          type: boolean
          example: false
        status:
          type: string
          example: Running
        status_code:
          type: integer
          example: 103
      example:
        status_code: 103
        devices:
          root:
            path: /
            type: disk
        profiles:
          - profiles
          - profiles
        created_at: '2016-02-16T01:05:05.000Z'
        ephemeral: false
        expanded_config:
          limits.cpu: '3'
          volatile.eth0.hwaddr: '00:16:3e:1c:94:38'
          volatile.base_image: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc
        expanded_devices:
          root:
            path: /
            type: disk
          eth0:
            nictype: bridged
            parent: lxdbr0
            name: eth0
            type: nic
        last_used_at: '2016-02-16T01:05:05.000Z'
        name: my-instance
        config:
          limits.cpu: '3'
          volatile.eth0.hwaddr: '00:16:3e:1c:94:38'
          volatile.base_image: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc
        stateful: false
        architecture: x86_64
        status: Running
    ExpandedConfig:
      type: object
      properties:
        limits.cpu:
          type: string
          example: '3'
        volatile.base_image:
          type: string
          example: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc
        volatile.eth0.hwaddr:
          type: string
          example: '00:16:3e:1c:94:38'
      example:
        limits.cpu: '3'
        volatile.eth0.hwaddr: '00:16:3e:1c:94:38'
        volatile.base_image: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc
    ExpandedDevices:
      type: object
      properties:
        eth0:
          $ref: '#/components/schemas/Eth0'
        root:
          $ref: '#/components/schemas/Root'
      example:
        root:
          path: /
          type: disk
        eth0:
          nictype: bridged
          parent: lxdbr0
          name: eth0
          type: nic
    Eth0:
      type: object
      properties:
        name:
          type: string
          example: eth0
        nictype:
          type: string
          example: bridged
        parent:
          type: string
          example: lxdbr0
        type:
          type: string
          example: nic
      example:
        nictype: bridged
        parent: lxdbr0
        name: eth0
        type: nic
    DevicesRoot:
      type: object
      properties:
        root:
          $ref: '#/components/schemas/Root'
      example:
        root:
          path: /
          type: disk
    Root:
      type: object
      properties:
        path:
          type: string
          example: /
        type:
          type: string
          example: disk
      example:
        path: /
        type: disk
    HardwareSpecsConfig:
      type: object
      properties:
        limits.cpu:
          type: string
          example: '3'
        volatile.base_image:
          type: string
          example: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc
        volatile.eth0.hwaddr:
          type: string
          example: '00:16:3e:1c:94:38'
      example:
        limits.cpu: '3'
        volatile.eth0.hwaddr: '00:16:3e:1c:94:38'
        volatile.base_image: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc
    UpdateInstancesByNameRequest:
      oneOf:
        -
          $ref: '#/components/schemas/UpdateInstancesByNameRequest2'
        -
          $ref: '#/components/schemas/UpdateInstancesByNameRequest_oneOf'
    UpdateInstancesByNameRequest2:
      description: Input (restore snapshot)
      type: object
      properties:
        restore:
          type: string
          example: snapshot-name
    PatchInstancesByNameRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/CpuConfig'
        devices:
          $ref: '#/components/schemas/Devices3'
        ephemeral:
          type: boolean
          example: true
      example:
        devices:
          root:
            path: /
            size: 5GB
            pool: default
        ephemeral: true
        config:
          limits.cpu: '3'
    CpuConfig:
      type: object
      properties:
        limits.cpu:
          type: string
          example: '3'
      example:
        limits.cpu: '3'
    Devices3:
      type: object
      properties:
        root:
          $ref: '#/components/schemas/Root2'
      example:
        root:
          path: /
          size: 5GB
          pool: default
    Root2:
      type: object
      properties:
        path:
          type: string
          example: /
        pool:
          type: string
          example: default
        size:
          type: string
          example: 5GB
      example:
        path: /
        size: 5GB
        pool: default
    CreateInstancesByNameRequest:
      oneOf:
        -
          $ref: '#/components/schemas/MigrateInstancesByNameRequest'
        -
          $ref: '#/components/schemas/CreateInstancesByNameRequest_oneOf'
    MigrateInstancesByNameRequest:
      type: object
      properties:
        control:
          type: string
          example: secret1
        criu:
          type: string
          example: secret2
        fs:
          type: string
          example: secret3
    CreateInstancesByNameConsoleRequest:
      oneOf:
        -
          $ref: '#/components/schemas/WindowSizeChangeRequest'
        -
          $ref: '#/components/schemas/CreateInstancesByNameConsoleRequest_oneOf'
    WindowSizeChangeRequest:
      description: Control (window size change)
      type: object
      properties:
        command:
          type: string
          example: window-resize
        args:
          $ref: '#/components/schemas/Args'
    Args:
      type: object
      properties:
        width:
          type: string
          example: '80'
        height:
          type: string
          example: '50'
    CreateInstancesByNameExecRequest:
      oneOf:
        -
          $ref: '#/components/schemas/Sigusr1SignalRequest'
        -
          $ref: '#/components/schemas/WindowSizeChangeRequest'
        -
          $ref: '#/components/schemas/CreateInstancesByNameExecRequest_oneOf'
    Sigusr1SignalRequest:
      type: object
      properties:
        command:
          type: string
          example: signal
        signal:
          type: integer
          example: 10
    CreateInstancesByNameExecResponse1:
      description: Return (with wait-for-websocket=true and interactive=false)
      type: object
      properties:
        fds:
          $ref: '#/components/schemas/Fds1'
    Fds1:
      type: object
      properties:
        '0':
          type: string
          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21
        '1':
          type: string
          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21
        '2':
          type: string
          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21
        control:
          type: string
          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21
    CreateInstancesByNameExecResponse2:
      description: Return (with wait-for-websocket=true and interactive=true)
      type: object
      properties:
        fds:
          $ref: '#/components/schemas/Fds1'
    Fds2:
      type: object
      properties:
        '0':
          type: string
          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c2
        control:
          type: string
          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21
    CreateInstancesByNameExecResponse3:
      description: Return (with interactive=false and record-output=true)
      type: object
      properties:
        fds:
          $ref: '#/components/schemas/Output'
        return:
          type: integer
          example: 0
    Output:
      type: object
      properties:
        '1':
          type: string
          example: /1.0/instances/example/logs/exec_b0f737b4-2c8a-4edf-a7c1-4cc7e4e9e155.stdout
        '2':
          type: string
          example: /1.0/instances/example/logs/exec_b0f737b4-2c8a-4edf-a7c1-4cc7e4e9e155.stderr
    RawFile:
      oneOf:
        -
          $ref: '#/components/schemas/StandardReturnValueResponse'
        -
          type: object
    CreateInstancesByNameSnapshotRequest:
      type: object
      properties:
        name:
          description: Name of the snapshot
          type: string
          example: my-snapshot
        stateful:
          description: Whether to include state too
          type: boolean
          example: true
      example:
        name: my-snapshot
        stateful: true
    GetSnapshotInformationResponse:
      type: object
      properties:
        architecture:
          type: string
          example: x86_64
        config:
          $ref: '#/components/schemas/SecurityNestingConfig'
        created_at:
          type: string
          example: '2016-03-08T23:55:08.000Z'
        devices:
          $ref: '#/components/schemas/ExpandedDevices'
        ephemeral:
          type: boolean
          example: false
        expanded_config:
          $ref: '#/components/schemas/SecurityNestingConfig'
        expanded_devices:
          $ref: '#/components/schemas/ExpandedDevices'
        name:
          type: string
          example: blah
        profiles:
          type: array
          items:
            type: string
          example: default
        size:
          type: number
          example: 738476032
        stateful:
          type: boolean
          example: false
      example:
        size: 738476032
        devices:
          root:
            path: /
            type: disk
          eth0:
            nictype: bridged
            parent: lxdbr0
            name: eth0
            type: nic
        name: blah
        profiles: default
        created_at: '2016-03-08T23:55:08.000Z'
        ephemeral: false
        expanded_config:
          volatile.last_state.idmap: >-
            [{"Isuid":true,"Isgid":false,"Hostid":100000,"Nsid":0,"Maprange":65536},{"Isuid":false,"Isgid":true,"Hostid":100000,"Nsid":0,"Maprange":65536}]
          security.nesting: 'true'
          volatile.eth0.hwaddr: '00:16:3e:ec:65:a8'
          volatile.base_image: a49d26ce5808075f5175bf31f5cb90561f5023dcd408da8ac5e834096d46b2d8
        expanded_devices:
          root:
            path: /
            type: disk
          eth0:
            nictype: bridged
            parent: lxdbr0
            name: eth0
            type: nic
        config:
          volatile.last_state.idmap: >-
            [{"Isuid":true,"Isgid":false,"Hostid":100000,"Nsid":0,"Maprange":65536},{"Isuid":false,"Isgid":true,"Hostid":100000,"Nsid":0,"Maprange":65536}]
          security.nesting: 'true'
          volatile.eth0.hwaddr: '00:16:3e:ec:65:a8'
          volatile.base_image: a49d26ce5808075f5175bf31f5cb90561f5023dcd408da8ac5e834096d46b2d8
        stateful: false
        architecture: x86_64
    SecurityNestingConfig:
      type: object
      properties:
        security.nesting:
          type: string
          example: 'true'
        volatile.base_image:
          type: string
          example: a49d26ce5808075f5175bf31f5cb90561f5023dcd408da8ac5e834096d46b2d8
        volatile.eth0.hwaddr:
          type: string
          example: '00:16:3e:ec:65:a8'
        volatile.last_state.idmap:
          type: string
          example: >-
            [{"Isuid":true,"Isgid":false,"Hostid":100000,"Nsid":0,"Maprange":65536},{"Isuid":false,"Isgid":true,"Hostid":100000,"Nsid":0,"Maprange":65536}]
      example:
        volatile.last_state.idmap: >-
          [{"Isuid":true,"Isgid":false,"Hostid":100000,"Nsid":0,"Maprange":65536},{"Isuid":false,"Isgid":true,"Hostid":100000,"Nsid":0,"Maprange":65536}]
        security.nesting: 'true'
        volatile.eth0.hwaddr: '00:16:3e:ec:65:a8'
        volatile.base_image: a49d26ce5808075f5175bf31f5cb90561f5023dcd408da8ac5e834096d46b2d8
    CreateInstancesByNameSnapshotsInformationRequest:
      description: setup the migration source
      type: object
      properties:
        name:
          type: string
          example: new-name
        migration:
          type: boolean
          example: true
        live:
          type: string
          example: 'true'
      example:
        name: new-name
        migration: true
        live: 'true'
    UpdateInstancesByNameSnapshotsInformationRequest:
      type: object
      properties:
        expires_at:
          type: string
          example: '2019-01-16T10:34:56.000Z'
      example:
        expires_at: '2019-01-16T10:34:56.000Z'
    GetInstancesByNameStateResponse:
      allOf:
        -
          $ref: '#/components/schemas/StandardReturnValueResponse'
        -
          $ref: '#/components/schemas/GetInstancesByNameStateResponse_allOf'
    GetInstancesByNameStateMetadataResponse:
      type: object
      properties:
        status:
          type: string
          example: Running
        status_code:
          type: number
          example: 200
        cpu:
          $ref: '#/components/schemas/Cpu'
        disk:
          $ref: '#/components/schemas/Disk'
        memory:
          $ref: '#/components/schemas/Memory'
        network:
          $ref: '#/components/schemas/Network'
        pid:
          type: number
          example: 13663
        processes:
          type: number
          example: 32
    Cpu:
      type: object
      properties:
        usage:
          type: number
          example: 4986019722
    Disk:
      type: object
      properties:
        root:
          $ref: '#/components/schemas/Root3'
    Root3:
      type: object
      properties:
        usage:
          type: number
          example: 4986019722
    Memory:
      type: object
      properties:
        usage:
          type: number
          example: 51126272
        usage_peak:
          type: number
          example: 70246400
        swap_usage:
          type: number
          example: 0
        swap_usage_peak:
          type: number
          example: 0
    Network:
      type: object
      properties:
        eth0:
          $ref: '#/components/schemas/Eth02'
        lo:
          $ref: '#/components/schemas/Eth02'
        lxdbr0:
          $ref: '#/components/schemas/Eth02'
        zt0:
          $ref: '#/components/schemas/Eth02'
    Eth02:
      type: object
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Addresses'
        counters:
          $ref: '#/components/schemas/Counters'
        hwaddr:
          type: string
          example: '00:16:3e:ec:65:a8'
        host_name:
          type: string
          example: vethBWTSU5
        mtu:
          type: number
          example: 1500
        state:
          type: string
          example: up
        type:
          type: string
          example: broadcast
    Addresses:
      type: object
      properties:
        family:
          type: string
          example: init
        address:
          type: string
          example: 10.0.3.27
        netmask:
          type: string
          example: '24'
        scope:
          type: string
          example: '24'
      example:
        address: 10.0.3.27
        netmask: '24'
        scope: '24'
        family: init
    Counters:
      type: object
      properties:
        bytes_received:
          type: number
          example: 33942
        bytes_sent:
          type: number
          example: 30810
        packets_received:
          type: number
          example: 402
        packets_sent:
          type: number
          example: 178
      example:
        packets_sent: 178
        packets_received: 402
        bytes_received: 33942
        bytes_sent: 30810
    UpdateInstancesByNameStateRequest:
      type: object
      properties:
        action:
          description: 'State change action (stop, start, restart, freeze or unfreeze)'
          type: string
          example: stop
        timeout:
          description: A timeout after which the state change is considered as failed
          type: number
          example: 30
        force:
          description: >-
            Force the state change (currently only valid for stop and restart where it means
            killing the instance)
          type: boolean
          example: true
        stateful:
          description: >-
            Whether to store or restore runtime state before stopping or startiong (only valid for
            stop and start, defaults to false)
          type: boolean
          example: true
      example:
        action: stop
        force: true
        timeout: 30
        stateful: true
    GetInstancesByNameMetadataResponse:
      type: object
      properties:
        architecture:
          type: string
          example: x86_64
        creation_date:
          type: number
          example: 1477146654
        expiry_date:
          type: number
          example: 0
        properties:
          $ref: '#/components/schemas/Properties2'
        templates:
          $ref: '#/components/schemas/Templates'
      example:
        expiry_date: 0
        templates:
          /template:
            template: template.tpl
            when:
              - when
              - when
            create_only: false
            properties: '{}'
        creation_date: 1477146654
        properties:
          os: BusyBox
          name: busybox-x86_64
          description: BusyBox x86_64
          architecture: x86_64
        architecture: x86_64
    Properties2:
      type: object
      properties:
        architecture:
          type: string
          example: x86_64
        description:
          type: string
          example: BusyBox x86_64
        name:
          type: string
          example: busybox-x86_64
        os:
          type: string
          example: BusyBox
      example:
        os: BusyBox
        name: busybox-x86_64
        description: BusyBox x86_64
        architecture: x86_64
    Templates:
      type: object
      properties:
        /template:
          $ref: '#/components/schemas/Template'
      example:
        /template:
          template: template.tpl
          when:
            - when
            - when
          create_only: false
          properties: '{}'
    Template:
      type: object
      properties:
        when:
          type: array
          items:
            type: string
        create_only:
          type: boolean
          example: false
        template:
          type: string
          example: template.tpl
        properties:
          type: object
      example:
        template: template.tpl
        when:
          - when
          - when
        create_only: false
        properties: '{}'
    CreateInstancesByNameBackupsRequest:
      type: object
      properties:
        name:
          description: Unique identifier for the backup
          type: string
          example: backupName
        expiry:
          description: When to delete the backup automatically
          type: number
          example: 3600
        instance_only:
          description: 'If True, snapshots aren''t included'
          type: boolean
          example: true
        optimized_storage:
          description: 'If True, btrfs send or zfs send is used for instance and snapshots'
          type: boolean
          example: true
      example:
        instance_only: true
        optimized_storage: true
        name: backupName
        expiry: 3600
    GetInstancesByNameBackupsByNameResponse:
      type: object
      properties:
        name:
          type: string
          example: backupName
        creation_date:
          type: string
          example: '2018-04-23T10:16:09.000Z'
        expiry_date:
          type: string
          example: '2018-04-23T10:16:09.000Z'
        instance_only:
          type: boolean
          example: false
        optimized_storage:
          type: boolean
          example: false
      example:
        instance_only: false
        expiry_date: '2018-04-23T10:16:09.000Z'
        optimized_storage: false
        name: backupName
        creation_date: '2018-04-23T10:16:09.000Z'
    CreateInstancesByNameBackupsByNameRequest:
      type: object
      properties:
        name:
          type: string
          example: new-name
      example:
        name: new-name
    GetInstancesByNameBackupsByNameExportResponse:
      type: object
      properties:
        data:
          type: string
          example: <byte-stream>
      example:
        data: <byte-stream>
    GetEventsResponse:
      type: object
      properties:
        timestamp:
          description: Current timestamp
          type: string
          example: '2015-06-10T01:07:24.379Z'
        type:
          description: Notification type
          enum:
            - operation
            - logging
            - lifecycle
          type: string
          example: operation
        metadata:
          $ref: '#/components/schemas/Metadata2'
      example:
        metadata:
          level: info
          context:
            method: GET
            ip: '@'
            url: /1.0/instances/xen/snapshots
          message: handling
        type: operation
        timestamp: '2015-06-10T01:07:24.379Z'
    Metadata2:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        level:
          type: string
          example: info
        message:
          type: string
          example: handling
      example:
        level: info
        context:
          method: GET
          ip: '@'
          url: /1.0/instances/xen/snapshots
        message: handling
    Context:
      type: object
      properties:
        ip:
          type: string
          example: '@'
        method:
          type: string
          example: GET
        url:
          type: string
          example: /1.0/instances/xen/snapshots
      example:
        method: GET
        ip: '@'
        url: /1.0/instances/xen/snapshots
    CreateImagesRequest:
      description: Source image dictionary (transfers a remote image)
      required:
        - aliases
        - source
      type: object
      properties:
        filename:
          description: Used for export (optional)
          type: string
          example: filename
        public:
          description: Whether the image can be downloaded by untrusted users (defaults to false)
          type: boolean
          example: true
        auto_update:
          description: Whether the image should be auto-updated (optional; defaults to false)
          type: boolean
          example: true
        properties:
          $ref: '#/components/schemas/Properties3'
        aliases:
          description: Set initial aliases ("image_create_aliases" API extension)
          type: array
          items:
            $ref: '#/components/schemas/Aliases'
        source:
          $ref: '#/components/schemas/Source10'
        compression_algorithm:
          description: Override the compression algorithm for the image (optional)
          type: string
          example: xz
      example:
        filename: filename
        aliases:
          -
            name: my-alias
            description: A description
          -
            name: my-alias
            description: A description
        public: true
        auto_update: true
        compression_algorithm: xz
        source:
          mode: pull
          server: 'https://10.0.2.3:8443'
          protocol: lxd
          certificate: PEM certificate
          fingerprint: SHA256
          name: abc
          alias: ubuntu/devel
          secret: my-secret-string
          type: image
          url: 'https://www.some-server.com/image'
        properties:
          os: Ubuntu
    Properties3:
      type: object
      properties:
        os:
          type: string
          example: Ubuntu
      example:
        os: Ubuntu
    Aliases:
      type: object
      properties:
        name:
          type: string
          example: my-alias
        description:
          type: string
          example: A description
      example:
        name: my-alias
        description: A description
    Source10:
      required:
        - alias
        - fingerprint
        - mode
        - protocol
        - secret
        - server
        - type
      type: object
      properties:
        type:
          type: string
          example: image
        mode:
          description: Only pull is supported for now
          type: string
          example: pull
        server:
          description: Remote server (pull mode only)
          type: string
          example: 'https://10.0.2.3:8443'
        protocol:
          description: 'Protocol (one of lxd or simplestreams, defaults to lxd)'
          type: string
          example: lxd
        secret:
          description: 'Secret (pull mode only, private images only)'
          type: string
          example: my-secret-string
        certificate:
          description: 'Optional PEM certificate. If not mentioned, system CA is used.'
          type: string
          example: PEM certificate
        fingerprint:
          description: Fingerprint of the image (must be set if alias isn't)
          type: string
          example: SHA256
        alias:
          description: Name of the alias (must be set if fingerprint isn't)
          type: string
          example: ubuntu/devel
        name:
          type: string
          example: abc
        url:
          description: URL for the image
          type: string
          example: 'https://www.some-server.com/image'
      example:
        mode: pull
        server: 'https://10.0.2.3:8443'
        protocol: lxd
        certificate: PEM certificate
        fingerprint: SHA256
        name: abc
        alias: ubuntu/devel
        secret: my-secret-string
        type: image
        url: 'https://www.some-server.com/image'
    GetImagesFingerprintResponse:
      type: object
      properties:
        aliases:
          type: array
          items:
            $ref: '#/components/schemas/Aliases'
        architecture:
          type: string
          example: x86_64
        auto_update:
          type: boolean
          example: true
        cached:
          type: boolean
          example: false
        fingerprint:
          type: string
          example: 54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
        filename:
          type: string
          example: ubuntu-bionic-18.04-amd64-server-20180201.tar.xz
        properties:
          $ref: '#/components/schemas/Properties'
        update_source:
          $ref: '#/components/schemas/UpdateSource'
        public:
          type: boolean
          example: false
        size:
          type: number
          example: 123792592
        created_at:
          type: string
          example: '2016-02-01T21:07:41.000Z'
        expires_at:
          type: string
          example: '1970-01-01T00:00:00.000Z'
        last_used_at:
          type: string
          example: '1970-01-01T00:00:00.000Z'
        uploaded_at:
          type: string
          example: '2016-02-16T00:44:47.000Z'
      example:
        aliases:
          -
            name: my-alias
            description: A description
          -
            name: my-alias
            description: A description
        created_at: '2016-02-01T21:07:41.000Z'
        update_source:
          server: 'https://10.1.2.4:8443'
          protocol: lxd
          certificate: PEM certificate
          alias: ubuntu/bionic/amd64
        last_used_at: '1970-01-01T00:00:00.000Z'
        filename: ubuntu-bionic-18.04-amd64-server-20180201.tar.xz
        expires_at: '1970-01-01T00:00:00.000Z'
        auto_update: true
        public: false
        size: 123792592
        uploaded_at: '2016-02-16T00:44:47.000Z'
        cached: false
        fingerprint: 54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
        properties:
          os: ubuntu
          release: '18.04'
          architecture: x86_64
        architecture: x86_64
    Properties4:
      type: object
      properties:
        architecture:
          type: string
          example: x86_64
        description:
          type: string
          example: Ubuntu 18.04 LTS server (20180601)
        release:
          type: string
          example: bionic
        os:
          type: string
          example: ubuntu
      example:
        os: ubuntu
        release: bionic
        description: Ubuntu 18.04 LTS server (20180601)
        architecture: x86_64
    UpdateSource:
      type: object
      properties:
        server:
          type: string
          example: 'https://10.1.2.4:8443'
        protocol:
          type: string
          example: lxd
        certificate:
          type: string
          example: PEM certificate
        alias:
          type: string
          example: ubuntu/bionic/amd64
      example:
        server: 'https://10.1.2.4:8443'
        protocol: lxd
        certificate: PEM certificate
        alias: ubuntu/bionic/amd64
    UpdateImagesFingerprintRequest:
      type: object
      properties:
        auto_update:
          type: boolean
          example: true
        properties:
          $ref: '#/components/schemas/Properties4'
        public:
          type: boolean
          example: true
      example:
        auto_update: true
        public: true
        properties:
          os: ubuntu
          release: bionic
          description: Ubuntu 18.04 LTS server (20180601)
          architecture: x86_64
    PatchImagesFingerprintRequest:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/Properties5'
        public:
          type: boolean
          example: true
      example:
        public: true
        properties:
          os: ubuntu
          release: bionic
    Properties5:
      type: object
      properties:
        os:
          type: string
          example: ubuntu
        release:
          type: string
          example: bionic
      example:
        os: ubuntu
        release: bionic
    CreateImagesFingerprintExportRequest:
      type: object
      properties:
        target:
          type: string
          example: target URL
        secret:
          type: string
          example: secret
        certificate:
          type: string
          example: target certificate
        aliases:
          type: array
          items:
            type: string
          example:
            - alias
      example:
        aliases:
          - alias
        certificate: target certificate
        secret: secret
        target: target URL
    CreateImagesFingerprintSecretResponse:
      required:
        - status
        - statusCode
        - type
      type: object
      properties:
        type:
          type: string
          example: sync
        status:
          description: String version of the operation's status
          type: string
          example: Success
        status_code:
          description: Integer version of the operation's status (use this rather than status)
          type: integer
          example: 200
        metadata:
          $ref: '#/components/schemas/Metadata3'
      example:
        metadata:
          secret: 52e9ec5885562aa24d05d7b4846ebb8b5f1f7bf5cd6e285639b569d9eaf54c9b
        status_code: 200
        type: sync
        status: Success
    Metadata3:
      type: object
      properties:
        secret:
          type: string
          example: 52e9ec5885562aa24d05d7b4846ebb8b5f1f7bf5cd6e285639b569d9eaf54c9b
      example:
        secret: 52e9ec5885562aa24d05d7b4846ebb8b5f1f7bf5cd6e285639b569d9eaf54c9b
    CreateImagesAliasesRequest:
      type: object
      properties:
        description:
          type: string
          example: The alias description
        target:
          type: string
          example: SHA-256
        name:
          type: string
          example: alias-name
      example:
        name: alias-name
        description: The alias description
        target: SHA-256
    GetImagesAliasesByNameResponse:
      type: object
      properties:
        name:
          type: string
          example: test
        description:
          type: string
          example: my description
        target:
          type: string
          example: c9b6e738fae75286d52f497415463a8ecc61bbcb046536f220d797b0e500a41f
        type:
          type: string
          example: container
      example:
        name: test
        description: my description
        target: c9b6e738fae75286d52f497415463a8ecc61bbcb046536f220d797b0e500a41f
    UpdateImagesAliasesByNameRequest:
      type: object
      properties:
        description:
          type: string
          example: New description
        target:
          type: string
          example: 54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
      example:
        description: New description
        target: 54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
    CreateImagesAliasesByNameRequest:
      type: object
      properties:
        name:
          type: string
          example: new-name
      example:
        name: new-name
    CreateNetworksRequest:
      type: object
      properties:
        name:
          type: string
          example: my-network
        description:
          type: string
          example: My network
        config:
          $ref: '#/components/schemas/NetworkIPConfig'
      example:
        name: my-network
        description: My network
        config:
          ipv4.address: none
          ipv6.nat: 'true'
          ipv6.address: '2001:470:b368:4242::1/64'
    NetworkIPConfig:
      type: object
      properties:
        ipv4.address:
          type: string
          example: none
        ipv6.address:
          type: string
          example: '2001:470:b368:4242::1/64'
        ipv6.nat:
          type: string
          example: 'true'
      example:
        ipv4.address: none
        ipv6.nat: 'true'
        ipv6.address: '2001:470:b368:4242::1/64'
    GetNetworksByNameResponse:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/NetworkIPConfig'
        name:
          type: string
          example: lxdbr0
        managed:
          type: boolean
          example: false
        type:
          type: string
          example: bridge
        used_by:
          type: array
          items:
            type: string
          example:
            - /1.0/instances/blah
      example:
        managed: false
        name: lxdbr0
        type: bridge
        config:
          ipv4.address: none
          ipv6.nat: 'true'
          ipv6.address: '2001:470:b368:4242::1/64'
        used_by:
          - /1.0/instances/blah
    UpdateNetworksByNameRequest:
      type: object
      properties:
        bridge.driver:
          type: string
          example: openvswitch
        ipv4.address:
          type: string
          example: 10.0.3.1/24
        ipv6.address:
          type: string
          example: 'fd1:6997:4939:495d::1/64'
      example:
        bridge.driver: openvswitch
        ipv4.address: 10.0.3.1/24
        ipv6.address: 'fd1:6997:4939:495d::1/64'
    PatchNetworksByNameRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/DNSModeConfig'
      example:
        config:
          dns.mode: dynamic
    DNSModeConfig:
      type: object
      properties:
        dns.mode:
          type: string
          example: dynamic
      example:
        dns.mode: dynamic
    CreateNetworksByNameRequest:
      type: object
      properties:
        name:
          type: string
          example: new-name
      example:
        name: new-name
    GetNetworksByNameStateResponse:
      type: object
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Addresses'
        counters:
          $ref: '#/components/schemas/Counters'
        hwaddr:
          type: string
          example: '36:19:09:9b:f9:aa'
        mtu:
          type: number
          example: 1500
        state:
          type: string
          example: up
        type:
          type: string
          example: broadcast
      example:
        addresses:
          -
            address: 10.0.3.27
            netmask: '24'
            scope: '24'
            family: init
          -
            address: 10.0.3.27
            netmask: '24'
            scope: '24'
            family: init
        hwaddr: '36:19:09:9b:f9:aa'
        counters:
          packets_sent: 178
          packets_received: 402
          bytes_received: 33942
          bytes_sent: 30810
        state: up
        type: broadcast
        mtu: 1500
    GetOperationsResponse:
      type: object
      properties:
        success:
          type: array
          items:
            type: string
          example:
            - /1.0/operations/c0fc0d0d-a997-462b-842b-f8bd0df82507
        running:
          type: array
          items:
            type: string
          example:
            - /1.0/operations/092a8755-fd90-4ce4-bf91-9f87d03fd5bc
      example:
        running:
          - /1.0/operations/092a8755-fd90-4ce4-bf91-9f87d03fd5bc
        success:
          - /1.0/operations/c0fc0d0d-a997-462b-842b-f8bd0df82507
    GetNetworksUUIDResponse:
      type: object
      properties:
        id:
          type: string
          example: b8d84888-1dc2-44fd-b386-7f679e171ba5
        class:
          type: string
          example: token
        created_at:
          type: string
          example: '2016-02-17T21:59:27.237Z'
        updated_at:
          type: string
          example: '2016-02-17T21:59:27.237Z'
        status:
          type: string
          example: Running
        status_code:
          type: number
          example: 103
        resources:
          $ref: '#/components/schemas/Resources'
        metadata:
          $ref: '#/components/schemas/Metadata'
        may_cancel:
          type: boolean
          example: true
        err:
          type: string
      example:
        metadata:
          secret: c9209bee6df99315be1660dd215acde4aec89b8e5336039712fc11008d918b0d
        status_code: 103
        updated_at: '2016-02-17T21:59:27.237Z'
        err: err
        created_at: '2016-02-17T21:59:27.237Z'
        resources:
          images:
            - /1.0/images/54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
        id: b8d84888-1dc2-44fd-b386-7f679e171ba5
        class: token
        status: Running
        may_cancel: true
    Resources:
      type: object
      properties:
        images:
          type: array
          items:
            type: string
          example:
            - /1.0/images/54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
      example:
        images:
          - /1.0/images/54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
    Metadata:
      type: object
      properties:
        secret:
          type: string
          example: c9209bee6df99315be1660dd215acde4aec89b8e5336039712fc11008d918b0d
      example:
        secret: c9209bee6df99315be1660dd215acde4aec89b8e5336039712fc11008d918b0d
    Containers:
      type: object
      properties:
        containers:
          type: array
          items:
            type: string
          example:
            - /1.0/instances/test
    CreateProfilesRequest:
      type: object
      properties:
        name:
          type: string
          example: my-profilename
        description:
          type: string
          example: Some description string
        config:
          $ref: '#/components/schemas/MemoryLimitsConfig'
        devices:
          $ref: '#/components/schemas/DevicesKvm'
      example:
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        name: my-profilename
        description: Some description string
        config:
          limits.memory: 2GB
    MemoryLimitsConfig:
      type: object
      properties:
        limits.memory:
          type: string
          example: 2GB
      example:
        limits.memory: 2GB
    GetProfilesByNameResponse:
      type: object
      properties:
        name:
          type: string
          example: test
        description:
          type: string
          example: Some description string
        config:
          $ref: '#/components/schemas/MemoryLimitsConfig'
        devices:
          $ref: '#/components/schemas/DevicesKvm'
        used_by:
          type: array
          items:
            type: string
          example:
            - /1.0/instances/blah
      example:
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        name: test
        description: Some description string
        config:
          limits.memory: 2GB
        used_by:
          - /1.0/instances/blah
    UpdateProfilesByNameRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MemoryLimitsConfig'
        description:
          type: string
          example: Some description string
        devices:
          $ref: '#/components/schemas/DevicesKvm'
      example:
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        description: Some description string
        config:
          limits.memory: 2GB
    CreateProfilesByNameRequest:
      type: object
      properties:
        name:
          type: string
          example: new-name
      example:
        name: new-name
    CreateProjectsRequest:
      type: object
      properties:
        name:
          type: string
          example: test
        config:
          $ref: '#/components/schemas/FeaturesConfig'
        description:
          type: string
          example: Some description string
      example:
        name: test
        description: Some description string
        config:
          features.images: 'true'
          features.profiles: 'true'
    FeaturesConfig:
      type: object
      properties:
        features.images:
          type: string
          example: 'true'
        features.profiles:
          type: string
          example: 'true'
      example:
        features.images: 'true'
        features.profiles: 'true'
    GetProjectsByNameResponse:
      type: object
      properties:
        name:
          type: string
          example: test
        config:
          $ref: '#/components/schemas/FeaturesConfig'
        description:
          type: string
          example: Some description string
        used_by:
          type: array
          items:
            type: string
          example:
            - /1.0/instances/blah
      example:
        name: test
        description: Some description string
        config:
          features.images: 'true'
          features.profiles: 'true'
        used_by:
          - /1.0/instances/blah
    UpdateProjectsByNameRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/FeaturesConfig'
        description:
          type: string
          example: Some description string
      example:
        description: Some description string
        config:
          features.images: 'true'
          features.profiles: 'true'
    CreateProjectsByNameRequest:
      type: object
      properties:
        name:
          type: string
          example: new-name
      example:
        name: new-name
    CreateStoragePoolsRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/SizeConfig'
        driver:
          type: string
          example: zfs
        name:
          type: string
          example: pool1
      example:
        driver: zfs
        name: pool1
        config:
          size: 10GB
    SizeConfig:
      type: object
      properties:
        size:
          type: string
          example: 10GB
      example:
        size: 10GB
    GetStoragePoolsByNameResponse:
      allOf:
        -
          $ref: '#/components/schemas/BackgroundOperationResponse'
        -
          $ref: '#/components/schemas/GetStoragePoolsByNameResponse_allOf'
    GetStoragePoolsByNameResponseMetadata:
      type: object
      properties:
        name:
          type: string
          example: default
        driver:
          type: string
          example: zfs
        used_by:
          type: array
          items:
            type: string
          example:
            - /1.0/instances/alp1
            - /1.0/instances/alp10
            - /1.0/instances/alp11
            - /1.0/instances/alp12
            - /1.0/instances/alp13
            - /1.0/instances/alp14
            - /1.0/instances/alp15
            - /1.0/instances/alp16
            - /1.0/instances/alp17
            - /1.0/instances/alp18
            - /1.0/instances/alp19
            - /1.0/instances/alp2
            - /1.0/instances/alp20
            - /1.0/instances/alp3
            - /1.0/instances/alp4
            - /1.0/instances/alp5
            - /1.0/instances/alp6
            - /1.0/instances/alp7
            - /1.0/instances/alp8
            - /1.0/instances/alp9
            - /1.0/images/62e850a334bb9d99cac00b2e618e0291e5e7bb7db56c4246ecaf8e46fa0631a6
        config:
          $ref: '#/components/schemas/DiskConfig'
    DiskConfig:
      type: object
      properties:
        size:
          type: string
          example: '61203283968'
        source:
          type: string
          example: /home/chb/mnt/l2/disks/default.img
        volume.size:
          type: string
          example: '0'
        zfs.pool_name:
          type: string
          example: default
    UpdateStoragePoolsByNameRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/DiskAndLvmConfig'
      example:
        config:
          lvm.vg_name: pool1
          volume.block.filesystem: xfs
          volume.block.mount_options: discard
          size: '15032385536'
          lvm.thinpool_name: LXDThinPool
          source: pool1
          volume.size: '10737418240'
    DiskAndLvmConfig:
      type: object
      properties:
        size:
          type: string
          example: '15032385536'
        source:
          type: string
          example: pool1
        volume.block.filesystem:
          type: string
          example: xfs
        volume.block.mount_options:
          type: string
          example: discard
        lvm.thinpool_name:
          type: string
          example: LXDThinPool
        lvm.vg_name:
          type: string
          example: pool1
        volume.size:
          type: string
          example: '10737418240'
      example:
        lvm.vg_name: pool1
        volume.block.filesystem: xfs
        volume.block.mount_options: discard
        size: '15032385536'
        lvm.thinpool_name: LXDThinPool
        source: pool1
        volume.size: '10737418240'
    PatchStoragePoolsByNameRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/VolumeBlockFileSystemConfig'
      example:
        config:
          volume.block.filesystem: xfs
    VolumeBlockFileSystemConfig:
      type: object
      properties:
        volume.block.filesystem:
          type: string
          example: xfs
      example:
        volume.block.filesystem: xfs
    GetStoragePoolsByNameResourcesResponse:
      allOf:
        -
          $ref: '#/components/schemas/BackgroundOperationResponse'
        -
          $ref: '#/components/schemas/GetStoragePoolsByNameResourcesResponse_allOf'
    GetStoragePoolsByNameResourcesResponseMetadata:
      type: object
      properties:
        space:
          $ref: '#/components/schemas/SpaceInodes'
        inodes:
          $ref: '#/components/schemas/SpaceInodes'
    SpaceInodes:
      type: object
      properties:
        used:
          type: number
          example: 3275333
        total:
          type: number
          example: 18989056
    CreateStoragePoolsByNameVolumesRequest:
      description: Input (when migrating a volume)
      type: object
      properties:
        config:
          type: object
          example: {}
        name:
          type: string
          example: vol1
        type:
          type: string
          example: custom
        source:
          $ref: '#/components/schemas/Source13'
      example:
        name: vol1
        source:
          mode: pull
          pool: pool2
          name: vol2
          type: migration
        type: custom
        config: {}
    Source13:
      type: object
      properties:
        pool:
          type: string
          example: pool2
        name:
          type: string
          example: vol2
        type:
          type: string
          example: migration
        mode:
          type: string
          example: pull
      example:
        mode: pull
        pool: pool2
        name: vol2
        type: migration
    CreateStoragePoolsByNameVolumesByTypeRequest:
      description: Input (when copying a volume)
      type: object
      properties:
        config:
          type: object
          example: {}
        name:
          type: string
          example: vol1
        source:
          $ref: '#/components/schemas/Source13'
      example:
        name: vol1
        source:
          mode: pull
          pool: pool2
          name: vol2
          type: migration
        config: {}
    GetStoragePoolsByNameVolumesByTypeNameResponse:
      allOf:
        -
          $ref: '#/components/schemas/BackgroundOperationResponse'
        -
          $ref: '#/components/schemas/GetStoragePoolsByNameVolumesByTypeNameResponse_allOf'
    GetStoragePoolsByNameVolumesByTypeNameResponseMetadata:
      type: object
      properties:
        type:
          type: string
          example: custom
        used_by:
          type: array
          items:
            type: string
        name:
          type: string
          example: vol1
        config:
          $ref: '#/components/schemas/BlockFileSystemAndMountOptionsConfig'
    BlockFileSystemAndMountOptionsConfig:
      type: object
      properties:
        block.filesystem:
          type: string
          example: ext4
        block.mount_options:
          type: string
          example: discard
        size:
          type: string
          example: '10737418240'
    CreateStoragePoolsByNameVolumesByTypeNameRequest:
      description: Input (migration across lxd instances)
      type: object
      properties:
        name:
          type: string
          example: vol1
        pool:
          type: string
          example: pool13
        migration:
          type: boolean
          example: true
      example:
        name: vol1
        pool: pool13
        migration: true
    UpdateStoragePoolsByNameVolumesByTypeNameRequest:
      oneOf:
        -
          $ref: '#/components/schemas/UpdateStoragePoolsByNameVolumesByTypeNameRequest2'
        -
          $ref: '#/components/schemas/UpdateStoragePoolsByNameVolumesByTypeNameRequest_oneOf'
    UpdateStoragePoolsByNameVolumesByTypeNameRequest2:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/FileSystemMountOptionsAndThinPoolConfig'
      example:
        config:
          lvm.vg_name: pool1
          volume.block.filesystem: xfs
          volume.block.mount_options: discard
          size: '15032385536'
          lvm.thinpool_name: LXDThinPool
          source: pool1
          volume.size: '10737418240'
          used_by: used_by
    FileSystemMountOptionsAndThinPoolConfig:
      type: object
      properties:
        size:
          type: string
          example: '15032385536'
        source:
          type: string
          example: pool1
        used_by:
          type: string
        volume.block.filesystem:
          type: string
          example: xfs
        volume.block.mount_options:
          type: string
          example: discard
        lvm.thinpool_name:
          type: string
          example: LXDThinPool
        lvm.vg_name:
          type: string
          example: pool1
        volume.size:
          type: string
          example: '10737418240'
      example:
        lvm.vg_name: pool1
        volume.block.filesystem: xfs
        volume.block.mount_options: discard
        size: '15032385536'
        lvm.thinpool_name: LXDThinPool
        source: pool1
        volume.size: '10737418240'
        used_by: used_by
    CreateStoragePoolsByNameVolumesByTypeNameSnapshotsRequest:
      type: object
      properties:
        name:
          type: string
          example: my-snapshot
      example:
        name: my-snapshot
    GetStoragePoolsByNameVolumesByTypeNameSnapshotsNameResponse:
      type: object
      properties:
        config:
          type: object
          example: {}
        name:
          type: string
          example: snap0
        description:
          type: string
      example:
        name: snap0
        description: description
        config: {}
    UpdateStoragePoolsByNameVolumesByTypeNameSnapshotsNameRequest:
      type: object
      properties:
        description:
          type: string
          example: new-description
      example:
        description: new-description
    CreateStoragePoolsByNameVolumesByTypeNameSnapshotsNameRequest:
      type: object
      properties:
        name:
          type: string
          example: new-name
      example:
        name: new-name
    GetResourcesResponse:
      allOf:
        -
          $ref: '#/components/schemas/BackgroundOperationResponse'
        -
          $ref: '#/components/schemas/GetResourcesResponse_allOf'
    GetResourcesResponseMetadata:
      type: object
      properties:
        cpu:
          $ref: '#/components/schemas/Cpu2'
        memory:
          $ref: '#/components/schemas/Memory2'
    Cpu2:
      type: object
      properties:
        sockets:
          type: array
          items:
            $ref: '#/components/schemas/Sockets'
        total:
          type: number
          example: 2
    Sockets:
      type: object
      properties:
        cores:
          type: number
          example: 2
        frequency:
          type: number
          example: 2691
        frequency_turbo:
          type: number
          example: 3400
        name:
          type: string
          example: GenuineIntel
        vendor:
          type: string
          example: Intel(R) Core(TM) i5-3340M CPU @ 2.70GHz
        threads:
          type: number
          example: 4
    Memory2:
      type: object
      properties:
        used:
          type: number
          example: 51126272
        total:
          type: number
          example: 70246400
    GetClusterResponse:
      type: object
      properties:
        server_name:
          type: string
          example: node1
        enabled:
          type: boolean
          example: true
        member_config:
          type: array
          items:
            $ref: '#/components/schemas/MemberConfig'
      example:
        server_name: node1
        member_config:
          -
            name: local
            description: '"source" property for storage pool "local"'
            entity: storage-pool
            key: source
          -
            name: local
            description: '"source" property for storage pool "local"'
            entity: storage-pool
            key: source
        enabled: true
    MemberConfig:
      type: object
      properties:
        entity:
          type: string
          example: storage-pool
        name:
          type: string
          example: local
        key:
          type: string
          example: source
        description:
          type: string
          example: '"source" property for storage pool "local"'
      example:
        name: local
        description: '"source" property for storage pool "local"'
        entity: storage-pool
        key: source
    UpdateClusterRequest:
      description: Input (request to join an existing cluster)
      type: object
      properties:
        server_name:
          type: string
          example: node2
        server_address:
          type: string
          example: '10.1.1.102:8443'
        enabled:
          type: boolean
          example: true
        cluster_address:
          type: string
          example: '10.1.1.101:8443'
        cluster_certificate:
          type: string
          example: BEGIN CERTIFICATE-----MIFf-----END CERTIFICATE-----
        cluster_password:
          type: string
          example: sekret
        member_config:
          type: array
          items:
            $ref: '#/components/schemas/MemberConfig2'
      example:
        server_name: node2
        member_config:
          -
            name: local
            value: /dev/sdb
            entity: storage-pool
            key: source
          -
            name: local
            value: /dev/sdb
            entity: storage-pool
            key: source
        cluster_address: '10.1.1.101:8443'
        server_address: '10.1.1.102:8443'
        cluster_certificate: BEGIN CERTIFICATE-----MIFf-----END CERTIFICATE-----
        enabled: true
        cluster_password: sekret
    MemberConfig2:
      type: object
      properties:
        entity:
          type: string
          example: storage-pool
        name:
          type: string
          example: local
        key:
          type: string
          example: source
        value:
          type: string
          example: /dev/sdb
      example:
        name: local
        value: /dev/sdb
        entity: storage-pool
        key: source
    GetClusterMembersByNameResponse:
      type: object
      properties:
        server_name:
          type: string
          example: lxd1
        url:
          type: string
          example: 'https://10.1.1.101:8443'
        database:
          type: boolean
          example: true
        status:
          type: string
          example: Online
        message:
          type: string
          example: fully operational
      example:
        server_name: lxd1
        database: true
        message: fully operational
        url: 'https://10.1.1.101:8443'
        status: Online
    UpdateClusterMembersByNameRequest:
      type: object
      properties:
        server_name:
          type: string
          example: node1
      example:
        server_name: node1
    GetServerStateResponse_metadata:
      properties:
        api_extensions:
          description: List of API extensions added after the API was marked stable
          type: array
          items:
            type: string
        api_status:
          description: 'API implementation status (one of, development, stable or deprecated)'
          type: string
          example: stable
        api_version:
          description: The API version as a string
          type: string
          example: '1.0'
        auth:
          description: Authentication state.
          type: string
          example: '["guest","untrusted","trusted"]'
        config:
          $ref: '#/components/schemas/ServerConfig'
        environment:
          $ref: '#/components/schemas/Environment'
        public:
          description: Whether the server should be treated as a public (read-only) remote by the client
          type: boolean
          example: false
      example:
        environment:
          architectures:
            - x86_64
            - i686
          server_pid: 10224
          storage_version: '3.19'
          server: lxc
          addresses: '[1.2.3.4:8443,[1234::1234]:8443]'
          kernel: Linux
          certificate: PEM certificate
          storage: btrfs
          server_version: 0.8.1
          kernel_architecture: x86_64
          driver: lxc
          kernel_version: '3.16'
          driver_version: 1.0.6
        api_extensions:
          - api_extensions
          - api_extensions
        public: false
        auth: '["guest","untrusted","trusted"]'
        api_status: stable
        api_version: '1.0'
        config:
          core.https_address: '[::]:8443'
          core.trust_password: true
    GetFingerprintResponse_metadata:
      properties:
        type:
          description: 'Certificate type (keyring), currently only client'
          type: string
          example: client
        certificate:
          description: >-
            If provided, a valid x509 certificate. If not, the client certificate of the
            connection will be used
          type: string
          example: PEM certificate
        name:
          description: >-
            An optional name for the certificate. If nothing is provided, the host in the TLS
            header for the request is used.
          type: string
          example: foo
        fingerprint:
          description: dict representing a trusted certificate
          type: string
          example: SHA256 Hash of the raw certificate
      example:
        certificate: PEM certificate
        name: foo
        fingerprint: SHA256 Hash of the raw certificate
        type: client
    UpdateInstancesByNameRequest_oneOf:
      description: Input (update instance configuration)
      properties:
        architecture:
          type: string
          example: x86_64
        config:
          $ref: '#/components/schemas/HardwareSpecsConfig'
        devices:
          $ref: '#/components/schemas/DevicesRoot'
        ephemeral:
          type: boolean
          example: true
        profiles:
          type: array
          items:
            type: string
    CreateInstancesByNameRequest_oneOf:
      properties:
        name:
          type: string
          example: new-name
        migration:
          type: boolean
          example: true
        live:
          type: string
          example: 'true'
    CreateInstancesByNameConsoleRequest_oneOf:
      description: Input (attach to /dev/console)
      required:
        - type
      properties:
        width:
          description: Initial width of the terminal (optional)
          type: integer
          example: 80
        height:
          description: Initial height of the terminal (optional)
          type: integer
          example: 25
        type:
          description: Connection type ("console" or "vga").
          type: string
          example: console
    CreateInstancesByNameExecRequest_oneOf:
      description: Input (run bash)
      required:
        - command
        - interactive
        - record-output
        - wait-for-websocket
      properties:
        command:
          description: Command and arguments
          type: array
          items:
            type: string
          example:
            - /bin/bash
        environment:
          description: Optional extra environment variables to set
          type: object
        wait-for-websocket:
          description: Whether to wait for a connection before starting the process
          type: boolean
          example: false
        record-output:
          description: >-
            Whether to store stdout and stderr (only valid with wait-for-websocket=false)
            (requires API extension container_exec_recording)
          type: boolean
          example: false
        interactive:
          description: Whether to allocate a pty device instead of PIPEs
          type: boolean
          example: true
        width:
          description: Initial width of the terminal (optional)
          type: integer
          example: 80
        height:
          description: Initial height of the terminal (optional)
          type: integer
          example: 25
        user:
          description: User to run the command as (optional)
          type: integer
          example: 1000
        group:
          description: Group to run the command as (optional)
          type: integer
          example: 1000
        cwd:
          description: Current working directory (optional)
          type: string
          example: /tmp
    GetInstancesByNameStateResponse_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/GetInstancesByNameStateMetadataResponse'
    GetStoragePoolsByNameResponse_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/GetStoragePoolsByNameResponseMetadata'
        error_code:
          type: integer
          example: 0
        error:
          type: string
    GetStoragePoolsByNameResourcesResponse_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/GetStoragePoolsByNameResourcesResponseMetadata'
        error_code:
          type: integer
          example: 0
        error:
          type: string
    GetStoragePoolsByNameVolumesByTypeNameResponse_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/GetStoragePoolsByNameVolumesByTypeNameResponseMetadata'
        error_code:
          type: integer
          example: 0
        error:
          type: string
    UpdateStoragePoolsByNameVolumesByTypeNameRequest_oneOf:
      description: Input for restore
      properties:
        restore:
          type: string
          example: snapshot-name
    GetResourcesResponse_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/GetResourcesResponseMetadata'
        error_code:
          type: integer
          example: 0
        error:
          type: string
    CreateInstancesRequest:
      required:
        - architecture
        - config
        - ephemeral
        - name
        - profiles
        - source
      type: object
      properties:
        name:
          description: '64 chars max, ASCII, no slash, no colon and no comma'
          type: string
          example: my-new-instance
        architecture:
          type: string
          example: x86_64
        profiles:
          description: List of profiles
          type: array
          items:
            type: string
          example:
            - default
        ephemeral:
          description: Whether to destroy the instance on shutdown
          type: boolean
          example: true
        config:
          description: >-
            This is a map of config parameters to be used during instance creation. The keys for
            this map are the keys from instance.md file
            (https://github.com/lxc/lxd/blob/master/doc/instances.md#keyvalue-configuration) and
            values are the fields to set.
          additionalProperties:
            type: object
          example:
            limits.cpu: '2'
            limits.memory: 512MB
        type:
          description: 'Optional. Can be "virtual-machine", "container" - by default it set to "container"'
          type: string
          example: container
        devices:
          $ref: '#/components/schemas/DevicesKvm'
        instance_type:
          description: An optional instance type to use as basis for limits
          type: string
          example: c2.micro
        source:
          description: |-
            Source to be used to create this container.
            Can be: "image", "migration", "copy" or "none"
          additionalProperties:
            type: object
          example:
            type: image
            fingerprint: 6d825770a54383a01cdb78ae1c66260024629bb3b362f0ecd7b74dfcc8aa435f
      example:
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        name: my-new-instance
        profiles:
          - default
        ephemeral: true
        source:
          instance_only: true
          server: 'https://10.0.2.3:8443'
          certificate: PEM certificate
          secret: my-secret-string
          source: my-old-instance
          type: image
          secrets:
            criu: my-other-secret
            control: my-secret-string
            fs: my third secret
          mode: pull
          protocol: lxd
          base-image: <fingerprint>
          fingerprint: SHA-256
          alias: ubuntu/devel
          operation: 'https://10.0.2.3:8443/1.0/operations/<UUID>'
          properties:
            os: ubuntu
            release: '18.04'
            architecture: x86_64
          live: true
        type: container
        config:
          limits.cpu: '2'
        instance_type: c2.micro
        architecture: x86_64
  responses:
    BasicStandardReturnValueResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StandardReturnValueResponse'
          examples:
            Example:
              $ref: '#/components/examples/StandardReturnValueResponse'
      description: A standard return value response
    BasicBackgroundOperationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BasicBackgroundOperationResponse'
          examples:
            Example:
              $ref: '#/components/examples/BasicBackgroundOperationResponse'
      description: A basic background return value response
    ErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            Example:
              $ref: '#/components/examples/ErrorResponse'
      description: A standard error response
    GetApiListResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetApiListResponse'
      description: List of supported APIs
    GetServerStateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetServerStateResponse'
          examples:
            Example_1:
              $ref: '#/components/examples/GetServerStateResponse1'
            Example_2:
              $ref: '#/components/examples/GetServerStateResponse2'
      description: Server configuration and environment information
    GetCertificatesResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetCertificatesResponse'
      description: List of trusted certificates
    GetFingerprintResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetFingerprintResponse'
      description: Trusted certificate information
    GetInstancesResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetInstancesResponse'
      description: List of instances
    GetInstancesByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInstancesByNameResponse'
      description: Instance information
    CreateInstancesByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BasicBackgroundOperationResponse'
          examples:
            Example_1:
              $ref: '#/components/examples/BasicBackgroundOperationResponse'
            Example_2:
              $ref: '#/components/examples/CreateInstancesByNameResponse'
      description: Background return value responses
    CreateInstancesByNameExecResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BasicBackgroundOperationResponse'
          examples:
            Example_1:
              $ref: '#/components/examples/CreateInstancesByNameExecResponse1'
            Example_2:
              $ref: '#/components/examples/CreateInstancesByNameExecResponse2'
            Example_3:
              $ref: '#/components/examples/CreateInstancesByNameExecResponse3'
            Example_4:
              $ref: '#/components/examples/CreateInstancesByNameExecResponse4'
      description: Background operation + optional websocket information
    GetInstancesByNameFilesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RawFile'
      description: Download a file or directory listing from the instance
    GetSnapshotListResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetSnapshotListResponse'
      description: snapshots response
    GetSnapshotInformationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSnapshotInformationResponse'
      description: Snapshot information
    CreateInstancesByNameSnapshotsInformationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BasicBackgroundOperationResponse'
          examples:
            Example_1:
              $ref: '#/components/examples/StandardReturnValueResponse'
            Example_2:
              $ref: '#/components/examples/CreateInstancesByNameSnapshotsInformationResponse'
      description: Create Instances By Name Snapshots Information Response
    GetInstancesByNameStateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInstancesByNameStateResponse'
      description: Current state
    GetInstancesByNameLogsResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetInstancesByNameLogsResponse'
      description: Instances logs response
    GetInstancesByNameMetadataResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInstancesByNameMetadataResponse'
      description: Instance metadata
    GetInstancesByNameMetadataTemplatesResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetInstancesByNameMetadataTemplatesResponse'
      description: Instances metadata templates response
    GetInstancesByNameBackupsResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetInstancesByNameBackupsResponse'
      description: List of backups for the instance
    GetInstancesByNameBackupsByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInstancesByNameBackupsByNameResponse'
      description: Backup information
    GetInstancesByNameBackupsByNameExportResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInstancesByNameBackupsByNameExportResponse'
      description: Fetch the backup tarball
    GetEventsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEventsResponse'
      description: websocket upgrade
    GetImagesResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetImagesResponse'
      description: List of images (public or private)
    GetImagesFingerprintResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetImagesFingerprintResponse'
      description: Download the image tarball
    CreateImagesFingerprintSecretResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateImagesFingerprintSecretResponse'
          examples:
            Example:
              $ref: '#/components/examples/CreateImagesFingerprintSecretResponse'
      description: A basic background return value response
    GetImagesAliasesResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetImagesAliasesResponse'
      description: List of aliases (public or private based on image visibility)
    GetImagesAliasesByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetImagesAliasesByNameResponse'
      description: Snapshot information
    GetNetworksResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetNetworksResponse'
      description: List of networks
    GetNetworksByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNetworksByNameResponse'
      description: Information about a network
    Response:
      content:
        application/json:
          schema:
            type: object
          examples:
            Example:
              $ref: '#/components/examples/Response'
      description: Empty response
    GetNetworksByNameStateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNetworksByNameStateResponse'
      description: Network state
    GetOperationsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetOperationsResponse'
      description: List of operations
    GetNetworksUUIDResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNetworksUUIDResponse'
      description: Background operation
    GetProfilesResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetProfilesResponse'
      description: List of configuration profiles
    GetProfilesByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProfilesByNameResponse'
      description: Profile configuration
    GetProjectsResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetProjectsResponse'
      description: List of projects
    GetProjectsByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProjectsByNameResponse'
      description: Project configuration
    GetStoragePoolsResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetStoragePoolsResponse'
      description: List of storage pools
    GetStoragePoolsByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetStoragePoolsByNameResponse'
      description: Information about a storage pool
    GetStoragePoolsByNameResourcesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetStoragePoolsByNameResourcesResponse'
      description: Information about the resources available to the storage pool
    GetStoragePoolsByNameVolumesResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetStoragePoolsByNameVolumesResponse'
      description: list of storage volumes
    GetStoragePoolsByNameVolumesByTypeNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetStoragePoolsByNameVolumesByTypeNameResponse'
      description: Information about a storage volume of a given type on a storage pool
    CreateStoragePoolsByNameVolumesByTypeNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BasicBackgroundOperationResponse'
          examples:
            Example_1:
              $ref: '#/components/examples/StandardReturnValueResponse'
            Example_2:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeNameResponse'
      description: Create Instances By Name Exec Response
    GetStoragePoolsByNameVolumesByTypeNameSnapshotsResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetStoragePoolsByNameVolumesByTypeNameSnapshotsResponse'
      description: List of volume snapshots
    GetStoragePoolsByNameVolumesByTypeNameSnapshotsNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetStoragePoolsByNameVolumesByTypeNameSnapshotsNameResponse'
      description: Snapshot information
    GetResourcesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetResourcesResponse'
      description: Information about the resources available to the LXD server
    GetClusterResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetClusterResponse'
      description: Information about a cluster (such as networks and storage pools)
    GetClusterMembersResponse:
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
          examples:
            Example:
              $ref: '#/components/examples/GetClusterMembersResponse'
      description: List of LXD members in the cluster
    GetClusterMembersByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetClusterMembersByNameResponse'
      description: Retrieve the member's information and status
  parameters:
    Recursion:
      style: form
      explode: true
      name: recursion
      description: >-
        To optimize queries of large lists, recursion is implemented for collections. The default
        value is 0 which means that collection member URLs are returned. Setting it to 1 will have
        those URLs be replaced by the object they point to (typically a dict).
      schema:
        type: integer
      in: query
      required: false
    Filter:
      style: pipeDelimited
      explode: true
      name: filter
      description: >-
        There is no default value for filter which means that all results found will be returned. The
        language follows the OData conventions for structuring REST API filtering logic. Logical
        operators are also supported for filtering: not(not), equals(eq), not equals(ne), and(and),
        or(or). Filters are evaluated with left associativity. Values with spaces can be surrounded
        with quotes. Nesting filtering is also supported.
      schema:
        type: string
      in: query
      required: false
  examples:
    GetApiListResponse:
      description: A list of supported APIs
      value:
        - /1.0/
    GetServerStateResponse1:
      description: Server configuration and environment information for trusted
      value:
        api_extensions: []
        api_status: stable
        api_version: '1.0'
        auth: trusted
        config:
          core.trust_password: true
          core.https_address: '[::]:8443'
        environment:
          addresses:
            - '1.2.3.4:8443'
            - '[1234::1234]:8443'
          architectures:
            - x86_64
            - i686
          certificate: PEM certificate
          driver: lxc
          driver_version: 1.0.6
          kernel: Linux
          kernel_architecture: x86_64
          kernel_version: '3.16'
          server: lxd
          server_pid: 10224
          server_version: 0.8.1
          storage: btrfs
          storage_version: '3.19'
        public: false
    GetServerStateResponse2:
      description: Server configuration and environment information for guest or untrusted
      value:
        api_extensions: []
        api_status: stable
        api_version: '1.0'
        auth: guest
        public: false
    GetCertificatesResponse:
      description: Return a list of trusted certificates
      value:
        - /1.0/certificates/3ee64be3c3c7d617a7470e14f2d847081ad467c8c26e1caad841c8f67f7c7b09
    GetInstancesResponse:
      description: Return a list of URLs for instances this server hosts
      value:
        - /1.0/instances/blah
        - /1.0/instances/blah1
    CreateInstancesRequest1:
      description: Instance based on a local image with the "ubuntu/devel" alias
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
          - default
        ephemeral: true
        config:
          limits.cpu: '2'
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        instance_type: c2.micro
        source:
          type: image
          alias: ubuntu/devel
    CreateInstancesRequest2:
      description: Instance based on a local image identified by its fingerprint
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
          - default
        ephemeral: true
        config:
          limits.cpu: '2'
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: image
          fingerprint: SHA-256
    CreateInstancesRequest3:
      description: Instance based on most recent match based on image properties
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
          - default
        ephemeral: true
        config:
          limits.cpu: '2'
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: image
          properties:
            os: ubuntu
            release: '18.04'
            architecture: x86_64
    CreateInstancesRequest4:
      description: 'Instance without a pre-populated rootfs, useful when attaching to an existing one'
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
          - default
        ephemeral: true
        config:
          limits.cpu: '2'
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: none
    CreateInstancesRequest5:
      description: Using a public remote image
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
          - default
        ephemeral: true
        config:
          limits.cpu: '2'
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: image
          mode: pull
          server: 'https://10.0.2.3:8443'
          protocol: lxd
          certificate: PEM certificate
          alias: ubuntu/devel
    CreateInstancesRequest6:
      description: Using a private remote image after having obtained a secret for that image
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
          - default
        ephemeral: true
        config:
          limits.cpu: '2'
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: image
          mode: pull
          server: 'https://10.0.2.3:8443'
          secret: my-secret-string
          certificate: PEM certificate
          alias: ubuntu/devel
    CreateInstancesRequest7:
      description: 'Using a remote instance, sent over the migration websocket'
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
          - default
        ephemeral: true
        config:
          limits.cpu: '2'
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: migration
          mode: pull
          operation: 'https://10.0.2.3:8443/1.0/operations/<UUID>'
          certificate: PEM certificate
          base-image: <fingerprint>
          instance_only: true
          secrets:
            control: my-secret-string
            criu: my-other-secret
            fs: my third secret
    CreateInstancesRequest8:
      description: Using a local instance
      value:
        name: my-new-instance
        profiles:
          - default
        ephemeral: true
        config:
          limits.cpu: '2'
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: copy
          instance_only: true
          source: my-old-instance
    CreateInstancesRequest9:
      description: 'Using a remote instance, in push mode sent over the migration websocket via client proxying'
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
          - default
        ephemeral: true
        config:
          limits.cpu: '2'
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: migration
          mode: push
          base-image: <fingerprint>
          live: true
          instance_only: true
    CreateInstancesByNameResponse:
      description: >-
        -< Output in metadata section (for migration). These are the secrets that should be passed to
        the create call.
      value:
        type: async
        status: OK
        status_code: 100
        operation: /1.0/instances/<id>
        metadata:
          control: secret1
          criu: secret2
          fs: secret3
    CreateInstancesByNameRequest1:
      description: Input (simple rename)
      value:
        name: new-name
    CreateInstancesByNameRequest2:
      description: Input (migration across lxd instances or lxd cluster members)
      value:
        name: new-name
        migration: true
        live: 'true'
    CreateInstancesByNameRequest3:
      description: >-
        -< Output in metadata section (for migration). These are the secrets that should be passed to
        the create call.
      value:
        control: secret1
        criu: secret2
        fs: secret3
    CreateInstancesByNameExecResponse1:
      description: Return (with wait-for-websocket=true and interactive=false)
      value:
        fds:
          '0': f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21
          '1': 464dcf9f8fdce29d0d6478284523a9f26f4a31ae365d94cd38bac41558b797cf
          '2': 25b70415b686360e3b03131e33d6d94ee85a7f19b0f8d141d6dca5a1fc7b00eb
          control: 20c479d9532ab6d6c3060f6cdca07c1f177647c9d96f0c143ab61874160bd8a5
    CreateInstancesByNameExecResponse2:
      description: Return (with wait-for-websocket=true and interactive=true)
      value:
        fds:
          '0': f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21
          control: 20c479d9532ab6d6c3060f6cdca07c1f177647c9d96f0c143ab61874160bd8a5
    CreateInstancesByNameExecResponse3:
      description: Return (with interactive=false and record-output=true)
      value:
        output:
          '1': /1.0/instances/example/logs/exec_b0f737b4-2c8a-4edf-a7c1-4cc7e4e9e155.stdout
          '2': /1.0/instances/example/logs/exec_b0f737b4-2c8a-4edf-a7c1-4cc7e4e9e155.stderr
        return: 0
    CreateInstancesByNameExecResponse4:
      description: 'When the exec command finishes, its exit status is available from the operation''s metadata'
      value:
        return: 0
    GetSnapshotListResponse:
      description: List of snapshots
      value:
        - /1.0/instances/blah/snapshots/snap0
    CreateInstancesByNameSnapshotsInformationRequest1:
      description: Input (rename the snapshot)
      value:
        name: new-name
    CreateInstancesByNameSnapshotsInformationRequest2:
      description: Input (setup the migration source)
      value:
        name: new-name
        migration: true
        live: 'true'
    CreateInstancesByNameSnapshotsInformationResponse:
      description: Return (with migration=true)
      value:
        control: secret1
        fs: secret3
    GetInstancesByNameLogsResponse:
      description: Returns a list of the log files available for this instance
      value:
        - /1.0/instances/blah/logs/forkstart.log
        - /1.0/instances/blah/logs/lxc.conf
        - /1.0/instances/blah/logs/lxc.log
    GetInstancesByNameMetadataTemplatesResponse:
      description: List instance templates
      value:
        - template.tpl
        - hosts.tpl
    GetInstancesByNameBackupsResponse:
      description: List of backups for the instance
      value:
        - /1.0/instances/c1/backups/c1/backup0
        - /1.0/instances/c1/backups/c1/backup1
    GetImagesResponse:
      description: List of images (public or private)
      value:
        - /1.0/images/54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
        - /1.0/images/97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc
        - /1.0/images/a49d26ce5808075f5175bf31f5cb90561f5023dcd408da8ac5e834096d46b2d8
        - /1.0/images/c9b6e738fae75286d52f497415463a8ecc61bbcb046536f220d797b0e500a41f
    CreateImagesRequest1:
      description: 'In the source image case, the following dict must be used'
      value:
        filename: filename
        public: true
        auto_update: true
        properties:
          os: Ubuntu
        aliases:
          -
            name: my-alias
            description: A description
        source:
          type: image
          mode: pull
          server: 'https://10.0.2.3:8443'
          protocol: lxd
          secret: my-secret-string
          certificate: PEM certificate
          fingerprint: SHA256
          alias: ubuntu/devel
    CreateImagesRequest2:
      description: 'In the source instance case, the following dict must be used'
      value:
        compression_algorithm: xz
        filename: filename
        public: true
        properties:
          os: Ubuntu
        aliases:
          -
            name: my-alias
            description: A description
        source:
          type: instance
          name: abc
    CreateImagesRequest3:
      description: 'In the remote image URL case, the following dict must be used'
      value:
        filename: filename
        public: true
        properties:
          os: Ubuntu
        aliases:
          -
            name: my-alias
            description: A description
        source:
          type: url
          url: 'https://www.some-server.com/image'
    CreateImagesFingerprintSecretResponse:
      description: Generate a random token and tell LXD to expect it be used by a guest
      value:
        type: async
        status: OK
        status_code: 100
        operation: /1.0/instances/<id>
        metadata:
          secret: 52e9ec5885562aa24d05d7b4846ebb8b5f1f7bf5cd6e285639b569d9eaf54c9b
    GetImagesAliasesResponse:
      description: List of aliases (public or private based on image visibility)
      value:
        - /1.0/images/aliases/sl6
        - /1.0/images/aliases/bionic
        - /1.0/images/aliases/xenial
    GetNetworksResponse:
      description: List of networks
      value:
        - /1.0/networks/eth0
        - /1.0/networks/lxdbr0
    GetProfilesResponse:
      description: List of configuration profiles
      value:
        - /1.0/profiles/default
    GetProjectsResponse:
      description: List of projects
      value:
        - /1.0/projects/default
    GetStoragePoolsResponse:
      description: List of storage pools
      value:
        - /1.0/storage-pools/default
        - /1.0/storage-pools/pool1
        - /1.0/storage-pools/pool2
        - /1.0/storage-pools/pool3
        - /1.0/storage-pools/pool4
    GetStoragePoolsByNameVolumesResponse:
      description: List of storage volumes
      value:
        - /1.0/storage-pools/default/volumes/container/alp1
        - /1.0/storage-pools/default/volumes/container/alp10
        - /1.0/storage-pools/default/volumes/container/alp11
        - /1.0/storage-pools/default/volumes/container/alp12
        - /1.0/storage-pools/default/volumes/container/alp13
        - /1.0/storage-pools/default/volumes/container/alp14
        - /1.0/storage-pools/default/volumes/container/alp15
        - /1.0/storage-pools/default/volumes/container/alp16
        - /1.0/storage-pools/default/volumes/container/alp17
        - /1.0/storage-pools/default/volumes/container/alp18
        - /1.0/storage-pools/default/volumes/container/alp19
        - /1.0/storage-pools/default/volumes/container/alp2
        - /1.0/storage-pools/default/volumes/container/alp20
        - /1.0/storage-pools/default/volumes/container/alp3
        - /1.0/storage-pools/default/volumes/container/alp4
        - /1.0/storage-pools/default/volumes/container/alp5
        - /1.0/storage-pools/default/volumes/container/alp6
        - /1.0/storage-pools/default/volumes/container/alp7
        - /1.0/storage-pools/default/volumes/container/alp8
        - /1.0/storage-pools/default/volumes/container/alp9
        - >-
          /1.0/storage-pools/default/volumes/image/62e850a334bb9d99cac00b2e618e0291e5e7bb7db56c4246ecaf8e46fa0631a6
    CreateStoragePoolsByNameVolumesRequest1:
      description: Input
      value:
        config: {}
        name: vol1
        type: custom
    CreateStoragePoolsByNameVolumesRequest2:
      description: Input (when copying a volume)
      value:
        config: {}
        name: vol1
        type: custom
        source:
          pool: pool2
          name: vol2
          type: copy
    CreateStoragePoolsByNameVolumesRequest3:
      description: Input (when migrating a volume)
      value:
        config: {}
        name: vol1
        type: custom
        source:
          pool: pool2
          name: vol2
          type: migration
          mode: pull
    CreateStoragePoolsByNameVolumesByTypeRequest1:
      description: Input
      value:
        config: {}
        name: vol1
    CreateStoragePoolsByNameVolumesByTypeRequest2:
      description: Input (when copying a volume)
      value:
        config: {}
        name: vol1
        source:
          pool: pool2
          name: vol2
          type: copy
    CreateStoragePoolsByNameVolumesByTypeRequest3:
      description: Input (when migrating a volume)
      value:
        config: {}
        name: vol1
        source:
          pool: pool2
          name: vol2
          type: migration
          mode: pull
    CreateStoragePoolsByNameVolumesByTypeNameRequest1:
      description: Input (migration across lxd instances)
      value:
        name: vol1
        pool: pool3
        migration: true
    CreateStoragePoolsByNameVolumesByTypeNameRequest2:
      description: Input
      value:
        name: vol1
        pool: pool3
    CreateStoragePoolsByNameVolumesByTypeNameResponse:
      description: Output in metadata section (for migration)
      value:
        control: secret1
        fs: secret2
    GetStoragePoolsByNameVolumesByTypeNameSnapshotsResponse:
      description: List of volume snapshots
      value:
        - /1.0/storage-pools/default/volumes/custom/foo/snapshots/snap0
    UpdateClusterRequest1:
      description: Input (bootstrap a new cluster)
      value:
        server_name: lxd1
        enabled: true
    UpdateClusterRequest2:
      description: Input (request to join an existing cluster)
      value:
        server_name: node2
        server_address: '10.1.1.102:8443'
        enabled: true
        cluster_address: '10.1.1.101:8443'
        cluster_certificate: |-
          -----BEGIN CERTIFICATE-----MIFf
          -----END CERTIFICATE-----
        cluster_password: sekret
        member_config:
          -
            entity: storage-pool
            name: local
            key: source
            value: /dev/sdb
          -
            entity: network
            name: lxdbr0
            key: bridge.external_interfaces
            value: vlan0
    UpdateClusterRequest3:
      description: Input (disable clustering on the node)
      value:
        enabled: false
    GetClusterMembersResponse:
      description: List of LXD members in the cluster
      value:
        - /1.0/cluster/members/lxd1
        - /1.0/cluster/members/lxd2
    Response:
      description: Example Value
      value: {}
    BasicBackgroundOperationResponse:
      description: Example Value
      value:
        type: async
        status: OK
        status_code: 100
        operation: /1.0/instances/<id>
        metadata: {}
    StandardReturnValueResponse:
      description: Example Value
      value:
        type: sync
        status: Success
        status_code: 200
        error_code: 0
        metadata: {}
    BackgroundOperationResponse:
      description: Example Value
      value:
        type: sync
        status: Success
        status_code: 200
        error_code: 0
        metadata: {}
    ErrorResponse:
      description: Example Value
      value:
        type: error
        status: Failure
        status_code: 400
        metadata: {}
  requestBodies:
    CreateInstancesRequest:
      description: Create a new instance
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateInstancesRequest'
          examples:
            Example_1:
              $ref: '#/components/examples/CreateInstancesRequest1'
            Example_2:
              $ref: '#/components/examples/CreateInstancesRequest2'
            Example_3:
              $ref: '#/components/examples/CreateInstancesRequest3'
            Example_4:
              $ref: '#/components/examples/CreateInstancesRequest4'
            Example_5:
              $ref: '#/components/examples/CreateInstancesRequest5'
            Example_6:
              $ref: '#/components/examples/CreateInstancesRequest6'
            Example_7:
              $ref: '#/components/examples/CreateInstancesRequest7'
            Example_8:
              $ref: '#/components/examples/CreateInstancesRequest8'
            Example_9:
              $ref: '#/components/examples/CreateInstancesRequest9'
        file:
          schema:
            format: binary
            description: Raw compressed tarball as provided by a backup download
            type: string
          examples:
            sampleFile:
              summary: A sample file
              externalValue: 'https://lxd.readthedocs.io/en/latest/rest-api/#10instancesnamemetadata'
    CreateInstancesByNameRequest:
      description: Used to rename/migrate the instance
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateInstancesByNameRequest'
          examples:
            Example_1:
              $ref: '#/components/examples/CreateInstancesByNameRequest1'
            Example_2:
              $ref: '#/components/examples/CreateInstancesByNameRequest2'
            Example_3:
              $ref: '#/components/examples/CreateInstancesByNameRequest3'
    CreateInstancesByNameConsoleRequest:
      description: Attach to an instance's console devices
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateInstancesByNameConsoleRequest'
    CreateInstancesByNameExecRequest:
      description: Run a remote command
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateInstancesByNameExecRequest'
    CreateInstancesByNameSnapshotsInformationRequest:
      description: Used to rename/migrate the snapshot
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateInstancesByNameSnapshotsInformationRequest'
          examples:
            Example_1:
              $ref: '#/components/examples/CreateInstancesByNameSnapshotsInformationRequest1'
            Example_2:
              $ref: '#/components/examples/CreateInstancesByNameSnapshotsInformationRequest2'
    CreateImagesRequest:
      description: Create and publish a new image
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateImagesRequest'
          examples:
            Example_1:
              $ref: '#/components/examples/CreateImagesRequest1'
            Example_2:
              $ref: '#/components/examples/CreateImagesRequest2'
            Example_3:
              $ref: '#/components/examples/CreateImagesRequest3'
        file:
          schema:
            format: binary
            description: Standard http file upload
            type: string
    CreateStoragePoolsByNameVolumesRequest:
      description: Create a new storage volume on a given storage pool
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateStoragePoolsByNameVolumesRequest'
          examples:
            Example_1:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesRequest1'
            Example_2:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesRequest2'
            Example_3:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesRequest3'
    CreateStoragePoolsByNameVolumesByTypeRequest:
      description: Create a new storage volume of a particular type on a given storage pool
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateStoragePoolsByNameVolumesByTypeRequest'
          examples:
            Example_1:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeRequest1'
            Example_2:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeRequest2'
            Example_3:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeRequest3'
    CreateStoragePoolsByNameVolumesByTypeNameRequest:
      description: Rename a storage volume on a given storage pool
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateStoragePoolsByNameVolumesByTypeNameRequest'
          examples:
            Example_1:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeNameRequest1'
            Example_2:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeNameRequest2'
    UpdateStoragePoolsByNameVolumesByTypeNameRequest:
      description: Replace the storage volume information or restore from snapshot
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateStoragePoolsByNameVolumesByTypeNameRequest'
    UpdateClusterRequest:
      description: 'Bootstrap or join a cluster, or disable clustering on this node'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateClusterRequest'
          examples:
            Example_1:
              $ref: '#/components/examples/UpdateClusterRequest1'
            Example_2:
              $ref: '#/components/examples/UpdateClusterRequest2'
            Example_3:
              $ref: '#/components/examples/UpdateClusterRequest3'
tags:
  -
    name: lxd
    description: Perform REST operations on Lxd
  -
    name: supported-apis
    description: Perform REST operations on supported lxd apis
  -
    name: server-config
    description: Perform REST operations on server configuration information
  -
    name: certificates
    description: Perform REST operations on Certificates
  -
    name: instances
    description: Perform REST operations on Instances
  -
    name: events
    description: Perform REST operations on Events
  -
    name: images
    description: Perform REST operations on Images
  -
    name: networks
    description: Perform REST operations on Networks
  -
    name: operations
    description: Perform REST operations on Operations
  -
    name: profiles
    description: Perform REST operations on Profiles
  -
    name: projects
    description: Perform REST operations on Projects
  -
    name: storage-pools
    description: Perform REST operations on Storage Pools
  -
    name: resources
    description: Perform REST operations on Resources
  -
    name: cluster
    description: Perform REST operations on Clusters
