openapi: 3.0.1
info:
  contact:
    email: support@relxd.org
    name: Support Team
    url: https://www.relxd.org/
  description: The services listed below are referred as .....
  license:
    name: Relxd General Licence
    url: https://www.relxd.org/terms-of-service/
  title: LXD
  version: 1.0.0
servers:
- description: LXD
  url: http://localhost:2375/
tags:
- description: Perform REST operations on Lxd
  name: lxd
- description: Perform REST operations on supported lxd apis
  name: supported-apis
- description: Perform REST operations on server configuration information
  name: server-config
- description: Perform REST operations on Certificates
  name: certificates
- description: Perform REST operations on Instances
  name: instances
- description: Perform REST operations on Events
  name: events
- description: Perform REST operations on Images
  name: images
- description: Perform REST operations on Networks
  name: networks
- description: Perform REST operations on Operations
  name: operations
- description: Perform REST operations on Profiles
  name: profiles
- description: Perform REST operations on Projects
  name: projects
- description: Perform REST operations on Storage Pools
  name: storage-pools
- description: Perform REST operations on Resources
  name: resources
- description: Perform REST operations on Clusters
  name: cluster
paths:
  /:
    get:
      description: List of supported APIs
      operationId: getApiList
      parameters:
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: List of supported APIs
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - supported-apis
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0:
    get:
      description: Server configuration and environment information
      operationId: getServerState
      parameters:
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Server configuration and environment information
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - server-config
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      description: Updates the server configuration or other properties
      operationId: patchServerState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerStateRequest'
        description: "Updates only the listed keys, rest remains intact"
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - server-config
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    put:
      description: Replaces the server configuration or other properties
      operationId: putServerState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerStateRequest'
        description: Replaces any existing config with the provided one
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - server-config
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/certificates:
    get:
      description: Return a list of trusted certificates
      operationId: getCertificates
      parameters:
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: List of trusted certificates
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - certificates
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Add a new trusted certificate
      operationId: postCertificates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCertificatesRequest'
        description: Add a new trusted certificate
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - certificates
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/certificates/{fingerprint}:
    delete:
      description: Remove a trusted certificate
      operationId: deleteFingerprint
      parameters:
      - description: Unique fingerprint
        explode: false
        in: path
        name: fingerprint
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - certificates
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Return a trusted certificate information
      operationId: getCertificatesByFingerPrint
      parameters:
      - description: Unique fingerprint
        explode: false
        in: path
        name: fingerprint
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Trusted certificate information
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - certificates
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      description: Updates the certificate properties
      operationId: patchFingerprint
      parameters:
      - description: Unique fingerprint
        explode: false
        in: path
        name: fingerprint
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFingerprintRequest'
        description: Updates the certificate properties
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - certificates
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    put:
      description: Replaces the certificate properties
      operationId: putFingerprint
      parameters:
      - description: Unique fingerprint
        explode: false
        in: path
        name: fingerprint
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFingerprintRequest'
        description: Replaces the certificate properties
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - certificates
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/instances:
    get:
      description: Return a list of URLs for instances this server hosts
      operationId: getInstances
      parameters:
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: List of instances
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Create a new instance
      operationId: postInstances
      parameters:
      - description: ?target=<member>
        explode: true
        in: query
        name: target
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/CreateInstancesRequest'
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/instances/{name}:
    delete:
      description: Remove the instance
      operationId: deleteInstancesByName
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Get Instance information
      operationId: getInstancesByName
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Instance information
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      description: Update instance configuration
      operationId: patchInstancesByName
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchInstancesByNameRequest'
        description: Update instance configuration
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    post:
      description: Used to rename/migrate the instance
      operationId: postInstancesByName
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: ?target=<member>
        explode: true
        in: query
        name: target
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/CreateInstancesByNameRequest'
      responses:
        "202":
          content:
            application/json:
              examples:
                Example_1:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Background return value responses
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "409":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    put:
      description: Replaces instance configuration or restore snapshot
      operationId: putInstancesByName
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstancesByNameRequest'
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/instances/{name}/console:
    delete:
      description: Empty the instance's console log
      operationId: deleteInstancesByNameConsole
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: empty response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Returns the contents of the instance's console log
      operationId: getInstancesByNameConsole
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Instance information
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Attach to an instance's console devices
      operationId: postInstancesByNameConsole
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateInstancesByNameConsoleRequest'
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/instances/{name}/exec:
    post:
      description: Run a remote command
      operationId: postInstancesByNameExec
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateInstancesByNameExecRequest'
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Background operation + optional websocket information
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/instances/{name}/files:
    delete:
      description: Delete a file in the instance
      operationId: deleteInstancesByNameFiles
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: directory listing from the instance
        example: /path/inside/the/instance
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Download a file or directory listing from the instance
      operationId: getInstancesByNameFiles
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      - description: directory listing from the instance
        example: /path/inside/the/instance
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - example: 0
        explode: false
        in: header
        name: X-LXD-uid
        required: false
        schema:
          format: uuid
          type: integer
        style: simple
      - example: 0
        explode: false
        in: header
        name: X-LXD-gid
        required: false
        schema:
          format: uuid
          type: integer
        style: simple
      - example: 700
        explode: false
        in: header
        name: X-LXD-mode
        required: false
        schema:
          format: uuid
          type: integer
        style: simple
      - description: one of directory or file
        explode: false
        in: header
        name: X-LXD-type
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawFile'
          description: Download a file or directory listing from the instance
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Upload a file to the instance
      operationId: postInstancesByNameFiles
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: directory listing from the instance
        example: /path/inside/the/instance
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - example: 0
        explode: false
        in: header
        name: X-LXD-uid
        required: false
        schema:
          format: uuid
          type: integer
        style: simple
      - example: 0
        explode: false
        in: header
        name: X-LXD-gid
        required: false
        schema:
          format: uuid
          type: integer
        style: simple
      - example: 700
        explode: false
        in: header
        name: X-LXD-mode
        required: false
        schema:
          format: uuid
          type: integer
        style: simple
      - description: overwrite (or append)
        explode: false
        in: header
        name: X-LXD-write
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: one of directory or file or symlink
        explode: false
        in: header
        name: X-LXD-type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          image/*:
            schema:
              format: binary
              type: string
        description: Upload a file to the instance
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: image/*
      x-accepts: application/json
      x-content-type: image/*
  /1.0/instances/{name}/snapshots:
    get:
      description: List of snapshots
      operationId: getInstancesByNameSnapshots
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: snapshots response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Create a new snapshot
      operationId: postInstancesByNameSnapshot
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstancesByNameSnapshotRequest'
        description: Create a new snapshot
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/instances/{name}/snapshots/{snapshotName}:
    delete:
      description: Remove the snapshot
      operationId: deleteInstancesByNameSnapshotsInformation
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Snapshot name
        explode: false
        in: path
        name: snapshotName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Snapshot information
      operationId: getInstancesByNameSnapshotsInformation
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Snapshot name
        explode: false
        in: path
        name: snapshotName
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Snapshot information
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Used to rename/migrate the snapshot
      operationId: postInstancesByNameSnapshotsInformation
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Snapshot name
        explode: false
        in: path
        name: snapshotName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateInstancesByNameSnapshotsInformationRequest'
      responses:
        "202":
          content:
            application/json:
              examples:
                Example_1:
                  $ref: '#/components/examples/BackgroundOperationResponse'
                Example_2:
                  $ref: '#/components/examples/CreateInstancesByNameSnapshotsInformationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Create Instances By Name Snapshots Information Response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "409":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    put:
      description: Update the snapshot
      operationId: putInstancesByNameSnapshotsInformation
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Snapshot name
        explode: false
        in: path
        name: snapshotName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstancesByNameSnapshotsInformationRequest'
        description: Update the snapshot
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/instances/{name}/state:
    get:
      description: Current state
      operationId: getInstancesByNameState
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Current state
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      description: Change the instance state
      operationId: putInstancesByNameState
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstancesByNameStateRequest'
        description: Change the instance state
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/instances/{name}/logs:
    get:
      description: Returns a list of the log files available for this instance. Note
        that this works on instances that have been deleted (or were never created)
        to enable people to get logs for failed creations.
      operationId: getInstancesByNameLogs
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Instances logs response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/instances/{name}/logs/{logFile}:
    delete:
      description: Delete a particular log file.
      operationId: deleteInstancesByNameLogsFile
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Instance log file
        explode: false
        in: path
        name: logFile
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Returns the contents of a particular log file.
      operationId: getInstancesByNameLogsFile
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Instance log file
        explode: false
        in: path
        name: logFile
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Instances logs response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/instances/{name}/metadata:
    get:
      description: Instance metadata
      operationId: getInstancesByNameMetadata
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Instance metadata
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      description: Replaces instance metadata
      operationId: putInstancesByNameMetadata
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstancesByNameMetadataResponse'
        description: Replaces instance metadata
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/instances/{name}/metadata/templates:
    delete:
      description: Delete an instance template
      operationId: deleteInstancesByNameMetadataTemplates
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Template
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: List instance templates
      operationId: getInstancesByNameMetadataTemplates
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      - description: Template
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Instances metadata templates response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Add a container template
      operationId: postInstancesByNameMetadataTemplates
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Template
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          file:
            schema:
              format: binary
              type: string
        description: Add a container template
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: file
      x-accepts: application/json
      x-content-type: file
    put:
      description: Replace content of a template
      operationId: putInstancesByNameMetadataTemplates
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Template
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          file:
            schema:
              format: binary
              type: string
        description: Replace content of a template
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: file
      x-accepts: application/json
      x-content-type: file
  /1.0/instances/{name}/backups:
    get:
      description: List of backups for the instance
      operationId: getInstancesByNameBackups
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: List of backups for the instance
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Create a new backup
      operationId: postInstancesByNameBackups
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstancesByNameBackupsRequest'
        description: Create a new backup
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/instances/{name}/backups/{backupsName}:
    delete:
      description: Remove the backup
      operationId: deleteInstancesByNameBackupsByName
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Backups name
        explode: false
        in: path
        name: backupsName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Backup information
      operationId: getInstancesByNameBackupsByName
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Backups name
        explode: false
        in: path
        name: backupsName
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Backup information
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Used to rename the backup
      operationId: postInstancesByNameBackupsByName
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Backups name
        explode: false
        in: path
        name: backupsName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstancesByNameBackupsByNameRequest'
        description: Used to rename the backup
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/instances/{name}/backups/{backupsName}/export:
    get:
      description: Fetch the backup tarball
      operationId: getInstancesByNameBackupsByNameExport
      parameters:
      - description: Instance name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Backups name
        explode: false
        in: path
        name: backupsName
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Fetch the backup tarball
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - instances
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/events:
    get:
      description: Websocket upgrade
      operationId: getEvents
      parameters:
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      - description: Type
        explode: false
        in: query
        name: type
        required: true
        schema:
          enum:
          - operation
          - logging
          - lifecycle
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: websocket upgrade
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - events
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/images:
    get:
      description: List of images (public or private)
      operationId: getImages
      parameters:
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: List of images (public or private)
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Create and publish a new image
      operationId: postImages
      parameters:
      - description: "if set, uploaded file must match"
        example: SHA-256
        explode: true
        in: query
        name: X-LXD-fingerprint
        required: false
        schema:
          type: string
        style: form
      - description: used for export
        example: FILENAME
        explode: false
        in: header
        name: X-LXD-filename
        required: false
        schema:
          type: string
        style: simple
      - description: defaults to false
        example: true
        explode: false
        in: header
        name: X-LXD-public
        required: false
        schema:
          type: boolean
        style: simple
      - example: URL-encoded key value pairs without duplicate keys
        explode: false
        in: header
        name: X-LXD-properties
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateImagesRequest'
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/images/{fingerprint}:
    delete:
      description: Remove an image
      operationId: deleteImagesFingerprint
      parameters:
      - description: Unique fingerprint
        explode: false
        in: path
        name: fingerprint
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Image description and metadata
      operationId: getImagesFingerprint
      parameters:
      - description: Unique fingerprint
        explode: false
        in: path
        name: fingerprint
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      - description: secret
        explode: true
        in: query
        name: secret
        required: false
        schema:
          example: SECRET
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Download the image tarball
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      description: "Updates the image properties, update information and visibility"
      operationId: patchImagesFingerprint
      parameters:
      - description: Unique fingerprint
        explode: false
        in: path
        name: fingerprint
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchImagesFingerprintRequest'
        description: "Updates the image properties, update information and visibility"
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    put:
      description: "Replaces the image properties, update information and visibility"
      operationId: putImagesFingerprint
      parameters:
      - description: Unique fingerprint
        explode: false
        in: path
        name: fingerprint
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImagesFingerprintRequest'
        description: "Replaces the image properties, update information and visibility"
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/images/{fingerprint}/export:
    get:
      description: Download the image tarball
      operationId: getImagesByFingerprintExport
      parameters:
      - description: Unique fingerprint
        explode: false
        in: path
        name: fingerprint
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      - description: secret
        explode: true
        in: query
        name: secret
        required: false
        schema:
          example: SECRET
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Download the image tarball
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Upload the image tarball
      operationId: postImagesFingerprintExport
      parameters:
      - description: Unique fingerprint
        explode: false
        in: path
        name: fingerprint
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImagesFingerprintExportRequest'
        description: Upload the image tarball
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/images/{fingerprint}/refresh:
    get:
      description: Refresh an image from its origin
      operationId: getImagesFingerprintRefresh
      parameters:
      - description: Unique fingerprint
        explode: false
        in: path
        name: fingerprint
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/images/{fingerprint}/secret:
    post:
      description: Generate a random token and tell LXD to expect it be used by a
        guest
      operationId: postImagesFingerprintSecret
      parameters:
      - description: Unique fingerprint
        explode: false
        in: path
        name: fingerprint
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Generate a random token and tell LXD to expect it be used by
          a guest
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/images/aliases:
    get:
      description: List of aliases (public or private based on image visibility)
      operationId: getImagesAliases
      parameters:
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: List of aliases (public or private based on image visibility)
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Create a new alias
      operationId: postImagesAliases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImagesAliasesRequest'
        description: Create a new alias
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/images/aliases/{name}:
    delete:
      description: Remove an alias
      operationId: deleteImagesAliasesByName
      parameters:
      - description: Name of the alias
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Alias description and target
      operationId: getImagesAliasesByName
      parameters:
      - description: Name of the alias
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Snapshot information
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      description: Updates the alias target or description
      operationId: patchImagesAliasesByName
      parameters:
      - description: Name of the alias
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImagesAliasesByNameRequest'
        description: Updates the alias target or description
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    post:
      description: Rename an alias
      operationId: postImagesAliasesByName
      parameters:
      - description: Name of the alias
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImagesAliasesByNameRequest'
        description: Rename an alias
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "409":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    put:
      description: Replaces the alias target or description
      operationId: putImagesAliasesByName
      parameters:
      - description: Name of the alias
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImagesAliasesByNameRequest'
        description: Replaces the alias target or description
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - images
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/networks:
    get:
      description: List of networks
      operationId: getNetworks
      parameters:
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: List of networks
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - networks
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Define a new network
      operationId: postNetworks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworksRequest'
        description: Define a new network
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - networks
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/networks/{name}:
    delete:
      description: Remove a network
      operationId: deleteNetworksByName
      parameters:
      - description: Name of the network
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - networks
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Information about a network
      operationId: getNetworksByName
      parameters:
      - description: Name of the network
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Information about a network
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - networks
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      description: Update the network information
      operationId: patchNetworksByName
      parameters:
      - description: Name of the network
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchNetworksByNameRequest'
        description: Update the network information
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - networks
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    post:
      description: Rename a network
      operationId: postNetworksByName
      parameters:
      - description: Name of the network
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworksByNameRequest'
        description: Rename a network
      responses:
        "204":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/Response'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard value return response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "409":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - networks
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    put:
      description: Replace the network information
      operationId: putNetworksByName
      parameters:
      - description: Name of the network
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNetworksByNameRequest'
        description: Replace the network information
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - networks
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/networks/{name}/state:
    get:
      description: Network state
      operationId: getNetworksByNameState
      parameters:
      - description: Name of the network
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Network state
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - networks
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/operations:
    get:
      description: List of operations
      operationId: getOperations
      parameters:
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: List of operations
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - operations
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/operations/{uuid}:
    delete:
      description: Cancel an operation. Calling this will change the state to "cancelling"
        rather than actually removing the entry.
      operationId: deleteOperationsUUID
      parameters:
      - description: UUID
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - operations
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Background operation
      operationId: getOperationsUUID
      parameters:
      - description: UUID
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Background operation
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - operations
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/operations/{uuid}/wait:
    get:
      description: Wait for an operation to finish
      operationId: getOperationsUUIDWait
      parameters:
      - description: UUID
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      - description: timeout
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          example: 30
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Background operation
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - operations
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/operations/{uuid}/websocket:
    get:
      description: "-< This connection is upgraded into a websocket connection speaking\
        \ the protocol defined by the operation type. For example, in the case of\
        \ an exec operation, the websocket is the bidirectional pipe for stdin/stdout/stderr\
        \ to flow to and from the process inside the instance. In the case of migration,\
        \ it will be the primary interface over which the migration information is\
        \ communicated. The secret here is the one that was provided when the operation\
        \ was created. Guests are allowed to connect provided they have the right\
        \ secret."
      operationId: getOperationsUUIDWebsocket
      parameters:
      - description: UUID
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      - description: secret
        explode: true
        in: query
        name: secret
        required: true
        schema:
          example: SECRET
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Background operation
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - operations
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/profiles:
    get:
      description: List of configuration profiles
      operationId: getProfiles
      parameters:
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: List of configuration profiles
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - profiles
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Define a new profile
      operationId: postProfiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfilesRequest'
        description: Define a new profile
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - profiles
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/profiles/{name}:
    delete:
      description: Remove a profile
      operationId: deleteProfilesByName
      parameters:
      - description: Profiles name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - profiles
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Profile configuration
      operationId: getProfilesByName
      parameters:
      - description: Profiles name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Profile configuration
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - profiles
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      description: Update the profile information
      operationId: patchProfilesByName
      parameters:
      - description: Profiles name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfilesByNameRequest'
        description: Update the profile information
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - profiles
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    post:
      description: Rename a profile
      operationId: postProfilesByName
      parameters:
      - description: Profiles name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfilesByNameRequest'
        description: Rename a profile
      responses:
        "204":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/Response'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "409":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - profiles
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    put:
      description: Replace the profile information
      operationId: putProfilesByName
      parameters:
      - description: Profiles name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfilesByNameRequest'
        description: Replace the profile information
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - profiles
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/projects:
    get:
      description: List of projects
      operationId: getProjects
      parameters:
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/GetProjectsResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: List of projects
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - projects
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Define a new project
      operationId: postProjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectsRequest'
        description: Define a new project
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - projects
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/projects/{name}:
    delete:
      description: Remove a project
      operationId: deleteProjectsByName
      parameters:
      - description: Projects name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "403":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - projects
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Project configuration
      operationId: getProjectsByName
      parameters:
      - description: Projects name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Project configuration
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - projects
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      description: Update the project information
      operationId: patchProjectsByName
      parameters:
      - description: Projects name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectsByNameRequest'
        description: Update the project information
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - projects
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    post:
      description: Rename a project
      operationId: postProjectsByName
      parameters:
      - description: Projects name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectsByNameRequest'
        description: Rename a project
      responses:
        "204":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/Response'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "403":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "409":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - projects
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    put:
      description: Replace the project information
      operationId: putProjectsByName
      parameters:
      - description: Projects name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectsByNameRequest'
        description: Replace the project information
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - projects
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/storage-pools:
    get:
      description: List of storage pools
      operationId: getStoragePools
      parameters:
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/GetStoragePoolsResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: List of storage pools
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Define a new storage pool
      operationId: postStoragePools
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStoragePoolsRequest'
        description: Define a new storage pool
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/storage-pools/{pool}:
    delete:
      description: Remove a storage pool
      operationId: deleteStoragePoolsByName
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "403":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Information about a storage pool
      operationId: getStoragePoolsByName
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Information about a storage pool
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      description: Update the storage pool information
      operationId: patchStoragePoolsByName
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchStoragePoolsByNameRequest'
        description: Update the storage pool information
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    put:
      description: Replace the storage pool information
      operationId: putStoragePoolsByName
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStoragePoolsByNameRequest'
        description: Replace the storage pool information
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/storage-pools/{pool}/resources:
    get:
      description: Information about the resources available to the storage pool
      operationId: getStoragePoolsByNameResources
      parameters:
      - description: Profiles name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Information about the resources available to the storage pool
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/storage-pools/{pool}/volumes:
    get:
      description: List of storage volumes
      operationId: getStoragePoolsByNameVolumes
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: list of storage volumes
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Create a new storage volume on a given storage pool
      operationId: postStoragePoolsByNameVolumes
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateStoragePoolsByNameVolumesRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/storage-pools/{pool}/volumes/{type}:
    post:
      description: Create a new storage volume of a particular type on a given storage
        pool
      operationId: postStoragePoolsByNameVolumesByType
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      - description: Type of the volume
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateStoragePoolsByNameVolumesByTypeRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/storage-pools/{pool}/volumes/{type}/{name}:
    delete:
      description: Delete a storage volume of a given type on a given storage pool
      operationId: deleteStoragePoolsByNameVolumesByTypeName
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      - description: Type of the volume
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Information about a storage volume of a given type on a storage
        pool
      operationId: getStoragePoolsByNameVolumesByTypeName
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      - description: Type of the volume
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Information about a storage volume of a given type on a storage
            pool
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-accepts: application/json
    patch:
      description: Update the storage volume information
      operationId: patchStoragePoolsByNameVolumesByTypeName
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      - description: Type of the volume
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStoragePoolsByNameVolumesByTypeNameRequest2'
        description: Update the storage volume information
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    post:
      description: Rename a storage volume on a given storage pool
      operationId: postStoragePoolsByNameVolumesByTypeName
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      - description: Type of the volume
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateStoragePoolsByNameVolumesByTypeNameRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example_1:
                  $ref: '#/components/examples/BackgroundOperationResponse'
                Example_2:
                  $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeNameResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Create Instances By Name Exec Response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    put:
      description: Replace the storage volume information or restore from snapshot
      operationId: putStoragePoolsByNameVolumesByTypeName
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      - description: Type of the volume
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateStoragePoolsByNameVolumesByTypeNameRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/storage-pools/{pool}/volumes/{type}/{name}/snapshots:
    get:
      description: List of volume snapshots
      operationId: getStoragePoolsByNameVolumesByTypeNameSnapshots
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      - description: Type of the volume
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: List of volume snapshots
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Create a new volume snapshot
      operationId: postStoragePoolsByNameVolumesByTypeNameSnapshots
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      - description: Type of the volume
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStoragePoolsByNameVolumesByTypeNameSnapshotsRequest'
        description: Create a new volume snapshot
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/storage-pools/{pool}/volumes/{type}/{name}/snapshots/name:
    delete:
      description: Remove the volume snapshot
      operationId: deleteStoragePoolsByNameVolumesByTypeNameSnapshotsName
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      - description: Type of the volume
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Snapshot information
      operationId: getStoragePoolsByNameVolumesByTypeNameSnapshotsName
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      - description: Type of the volume
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Snapshot information
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Used to rename the volume snapshot
      operationId: postStoragePoolsByNameVolumesByTypeNameSnapshotsName
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      - description: Type of the volume
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStoragePoolsByNameVolumesByTypeNameSnapshotsNameRequest'
        description: Used to rename the volume snapshot
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
    put:
      description: Volume snapshot information
      operationId: putStoragePoolsByNameVolumesByTypeNameSnapshotsName
      parameters:
      - description: Storage pool name
        explode: false
        in: path
        name: pool
        required: true
        schema:
          type: string
        style: simple
      - description: Type of the volume
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStoragePoolsByNameVolumesByTypeNameSnapshotsNameRequest'
        description: Volume snapshot information
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Snapshot information
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - storage-pools
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/resources:
    get:
      description: Information about the resources available to the LXD server
      operationId: getResources
      parameters:
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Information about the resources available to the LXD server
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - resources
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/cluster:
    get:
      description: Information about a cluster (such as networks and storage pools)
      operationId: getCluster
      parameters:
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Information about a cluster (such as networks and storage pools)
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - cluster
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      description: "Bootstrap or join a cluster, or disable clustering on this node"
      operationId: putCluster
      requestBody:
        $ref: '#/components/requestBodies/UpdateClusterRequest'
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - cluster
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /1.0/cluster/members:
    get:
      description: List of LXD members in the cluster
      operationId: getClusterMembers
      parameters:
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: List of LXD members in the cluster
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - cluster
      x-codegen-request-body-name: body
      x-accepts: application/json
  /1.0/cluster/members/{name}:
    delete:
      description: Remove a member of the cluster
      operationId: deleteClusterMembersByName
      parameters:
      - description: Members name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: force
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: number
        style: form
      responses:
        "202":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A basic background return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - cluster
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Retrieve the member's information and status
      operationId: getClusterMembersByName
      parameters:
      - description: Members name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "To optimize queries of large lists, recursion is implemented\
          \ for collections. The default value is 0 which means that collection member\
          \ URLs are returned. Setting it to 1 will have those URLs be replaced by\
          \ the object they point to (typically a dict)."
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: integer
        style: form
      - description: "There is no default value for filter which means that all results\
          \ found will be returned. The language follows the OData conventions for\
          \ structuring REST API filtering logic. Logical operators are also supported\
          \ for filtering: not(not), equals(eq), not equals(ne), and(and), or(or).\
          \ Filters are evaluated with left associativity. Values with spaces can\
          \ be surrounded with quotes. Nesting filtering is also supported."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: pipeDelimited
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: Retrieve the member's information and status
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - cluster
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Rename a cluster member
      operationId: postClusterMembersByName
      parameters:
      - description: Members name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterMembersByNameRequest'
        description: Rename a cluster member
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/BackgroundOperationResponse'
              schema:
                $ref: '#/components/schemas/BackgroundOperationResponse'
          description: A standard return value response
        "400":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
        "401":
          content:
            application/json:
              examples:
                Example:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: A standard error response
      tags:
      - cluster
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
components:
  examples:
    GetApiListResponse:
      description: A list of supported APIs
      value:
      - /1.0/
    GetServerStateResponse1:
      description: Server configuration and environment information for trusted
      value:
        api_extensions: []
        api_status: stable
        api_version: "1.0"
        auth: trusted
        config:
          core.trust_password: true
          core.https_address: "[::]:8443"
        environment:
          addresses:
          - 1.2.3.4:8443
          - "[1234::1234]:8443"
          architectures:
          - x86_64
          - i686
          certificate: PEM certificate
          driver: lxc
          driver_version: 1.0.6
          kernel: Linux
          kernel_architecture: x86_64
          kernel_version: "3.16"
          server: lxd
          server_pid: 10224
          server_version: 0.8.1
          storage: btrfs
          storage_version: "3.19"
        public: false
    GetServerStateResponse2:
      description: Server configuration and environment information for guest or untrusted
      value:
        api_extensions: []
        api_status: stable
        api_version: "1.0"
        auth: guest
        public: false
    GetCertificatesResponse:
      description: Return a list of trusted certificates
      value:
      - /1.0/certificates/3ee64be3c3c7d617a7470e14f2d847081ad467c8c26e1caad841c8f67f7c7b09
    GetInstancesResponse:
      description: Return a list of URLs for instances this server hosts
      value:
      - /1.0/instances/blah
      - /1.0/instances/blah1
    CreateInstancesRequest1:
      description: Instance based on a local image with the "ubuntu/devel" alias
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
        - default
        ephemeral: true
        config:
          limits.cpu: "2"
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        instance_type: c2.micro
        source:
          type: image
          alias: ubuntu/devel
    CreateInstancesRequest2:
      description: Instance based on a local image identified by its fingerprint
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
        - default
        ephemeral: true
        config:
          limits.cpu: "2"
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: image
          fingerprint: SHA-256
    CreateInstancesRequest3:
      description: Instance based on most recent match based on image properties
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
        - default
        ephemeral: true
        config:
          limits.cpu: "2"
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: image
          properties:
            os: ubuntu
            release: "18.04"
            architecture: x86_64
    CreateInstancesRequest4:
      description: "Instance without a pre-populated rootfs, useful when attaching\
        \ to an existing one"
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
        - default
        ephemeral: true
        config:
          limits.cpu: "2"
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: none
    CreateInstancesRequest5:
      description: Using a public remote image
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
        - default
        ephemeral: true
        config:
          limits.cpu: "2"
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: image
          mode: pull
          server: https://10.0.2.3:8443
          protocol: lxd
          certificate: PEM certificate
          alias: ubuntu/devel
    CreateInstancesRequest6:
      description: Using a private remote image after having obtained a secret for
        that image
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
        - default
        ephemeral: true
        config:
          limits.cpu: "2"
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: image
          mode: pull
          server: https://10.0.2.3:8443
          secret: my-secret-string
          certificate: PEM certificate
          alias: ubuntu/devel
    CreateInstancesRequest7:
      description: "Using a remote instance, sent over the migration websocket"
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
        - default
        ephemeral: true
        config:
          limits.cpu: "2"
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: migration
          mode: pull
          operation: https://10.0.2.3:8443/1.0/operations/<UUID>
          certificate: PEM certificate
          base-image: <fingerprint>
          instance_only: true
          secrets:
            control: my-secret-string
            criu: my-other-secret
            fs: my third secret
    CreateInstancesRequest8:
      description: Using a local instance
      value:
        name: my-new-instance
        profiles:
        - default
        ephemeral: true
        config:
          limits.cpu: "2"
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: copy
          instance_only: true
          source: my-old-instance
    CreateInstancesRequest9:
      description: "Using a remote instance, in push mode sent over the migration\
        \ websocket via client proxying"
      value:
        name: my-new-instance
        architecture: x86_64
        profiles:
        - default
        ephemeral: true
        config:
          limits.cpu: "2"
        type: container
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        source:
          type: migration
          mode: push
          base-image: <fingerprint>
          live: true
          instance_only: true
    CreateInstancesByNameResponse:
      description: -< Output in metadata section (for migration). These are the secrets
        that should be passed to the create call.
      value:
        type: async
        status: OK
        status_code: 100
        operation: /1.0/instances/<id>
        metadata:
          control: secret1
          criu: secret2
          fs: secret3
    CreateInstancesByNameRequest1:
      description: Input (simple rename)
      value:
        name: new-name
    CreateInstancesByNameRequest2:
      description: Input (migration across lxd instances or lxd cluster members)
      value:
        name: new-name
        migration: true
        live: "true"
    CreateInstancesByNameRequest3:
      description: -< Output in metadata section (for migration). These are the secrets
        that should be passed to the create call.
      value:
        control: secret1
        criu: secret2
        fs: secret3
    CreateInstancesByNameExecResponse1:
      description: Return (with wait-for-websocket=true and interactive=false)
      value:
        fds:
          "0": f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21
          "1": 464dcf9f8fdce29d0d6478284523a9f26f4a31ae365d94cd38bac41558b797cf
          "2": 25b70415b686360e3b03131e33d6d94ee85a7f19b0f8d141d6dca5a1fc7b00eb
          control: 20c479d9532ab6d6c3060f6cdca07c1f177647c9d96f0c143ab61874160bd8a5
    CreateInstancesByNameExecResponse2:
      description: Return (with wait-for-websocket=true and interactive=true)
      value:
        fds:
          "0": f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21
          control: 20c479d9532ab6d6c3060f6cdca07c1f177647c9d96f0c143ab61874160bd8a5
    CreateInstancesByNameExecResponse3:
      description: Return (with interactive=false and record-output=true)
      value:
        output:
          "1": /1.0/instances/example/logs/exec_b0f737b4-2c8a-4edf-a7c1-4cc7e4e9e155.stdout
          "2": /1.0/instances/example/logs/exec_b0f737b4-2c8a-4edf-a7c1-4cc7e4e9e155.stderr
        return: 0
    CreateInstancesByNameExecResponse4:
      description: "When the exec command finishes, its exit status is available from\
        \ the operation's metadata"
      value:
        return: 0
    GetSnapshotListResponse:
      description: List of snapshots
      value:
      - /1.0/instances/blah/snapshots/snap0
    CreateInstancesByNameSnapshotsInformationRequest1:
      description: Input (rename the snapshot)
      value:
        name: new-name
    CreateInstancesByNameSnapshotsInformationRequest2:
      description: Input (setup the migration source)
      value:
        name: new-name
        migration: true
        live: "true"
    CreateInstancesByNameSnapshotsInformationResponse:
      description: Return (with migration=true)
      value:
        control: secret1
        fs: secret3
    GetInstancesByNameLogsResponse:
      description: Returns a list of the log files available for this instance
      value:
      - /1.0/instances/blah/logs/forkstart.log
      - /1.0/instances/blah/logs/lxc.conf
      - /1.0/instances/blah/logs/lxc.log
    GetInstancesByNameMetadataTemplatesResponse:
      description: List instance templates
      value:
      - template.tpl
      - hosts.tpl
    GetInstancesByNameBackupsResponse:
      description: List of backups for the instance
      value:
      - /1.0/instances/c1/backups/c1/backup0
      - /1.0/instances/c1/backups/c1/backup1
    GetImagesResponse:
      description: List of images (public or private)
      value:
      - /1.0/images/54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
      - /1.0/images/97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc
      - /1.0/images/a49d26ce5808075f5175bf31f5cb90561f5023dcd408da8ac5e834096d46b2d8
      - /1.0/images/c9b6e738fae75286d52f497415463a8ecc61bbcb046536f220d797b0e500a41f
    CreateImagesRequest1:
      description: "In the source image case, the following dict must be used"
      value:
        filename: filename
        public: true
        auto_update: true
        properties:
          os: Ubuntu
        aliases:
        - name: my-alias
          description: A description
        source:
          type: image
          mode: pull
          server: https://10.0.2.3:8443
          protocol: lxd
          secret: my-secret-string
          certificate: PEM certificate
          fingerprint: SHA256
          alias: ubuntu/devel
    CreateImagesRequest2:
      description: "In the source instance case, the following dict must be used"
      value:
        compression_algorithm: xz
        filename: filename
        public: true
        properties:
          os: Ubuntu
        aliases:
        - name: my-alias
          description: A description
        source:
          type: instance
          name: abc
    CreateImagesRequest3:
      description: "In the remote image URL case, the following dict must be used"
      value:
        filename: filename
        public: true
        properties:
          os: Ubuntu
        aliases:
        - name: my-alias
          description: A description
        source:
          type: url
          url: https://www.some-server.com/image
    CreateImagesFingerprintSecretResponse:
      description: Generate a random token and tell LXD to expect it be used by a
        guest
      value:
        type: async
        status: OK
        status_code: 100
        operation: /1.0/instances/<id>
        metadata:
          secret: 52e9ec5885562aa24d05d7b4846ebb8b5f1f7bf5cd6e285639b569d9eaf54c9b
    GetImagesAliasesResponse:
      description: List of aliases (public or private based on image visibility)
      value:
      - /1.0/images/aliases/sl6
      - /1.0/images/aliases/bionic
      - /1.0/images/aliases/xenial
    GetNetworksResponse:
      description: List of networks
      value:
      - /1.0/networks/eth0
      - /1.0/networks/lxdbr0
    GetProfilesResponse:
      description: List of configuration profiles
      value:
      - /1.0/profiles/default
    GetProjectsResponse:
      description: List of projects
      value:
      - /1.0/projects/default
    GetStoragePoolsResponse:
      description: List of storage pools
      value:
      - /1.0/storage-pools/default
      - /1.0/storage-pools/pool1
      - /1.0/storage-pools/pool2
      - /1.0/storage-pools/pool3
      - /1.0/storage-pools/pool4
    GetStoragePoolsByNameVolumesResponse:
      description: List of storage volumes
      value:
      - /1.0/storage-pools/default/volumes/container/alp1
      - /1.0/storage-pools/default/volumes/container/alp10
      - /1.0/storage-pools/default/volumes/container/alp11
      - /1.0/storage-pools/default/volumes/container/alp12
      - /1.0/storage-pools/default/volumes/container/alp13
      - /1.0/storage-pools/default/volumes/container/alp14
      - /1.0/storage-pools/default/volumes/container/alp15
      - /1.0/storage-pools/default/volumes/container/alp16
      - /1.0/storage-pools/default/volumes/container/alp17
      - /1.0/storage-pools/default/volumes/container/alp18
      - /1.0/storage-pools/default/volumes/container/alp19
      - /1.0/storage-pools/default/volumes/container/alp2
      - /1.0/storage-pools/default/volumes/container/alp20
      - /1.0/storage-pools/default/volumes/container/alp3
      - /1.0/storage-pools/default/volumes/container/alp4
      - /1.0/storage-pools/default/volumes/container/alp5
      - /1.0/storage-pools/default/volumes/container/alp6
      - /1.0/storage-pools/default/volumes/container/alp7
      - /1.0/storage-pools/default/volumes/container/alp8
      - /1.0/storage-pools/default/volumes/container/alp9
      - /1.0/storage-pools/default/volumes/image/62e850a334bb9d99cac00b2e618e0291e5e7bb7db56c4246ecaf8e46fa0631a6
    CreateStoragePoolsByNameVolumesRequest1:
      description: Input
      value:
        config: {}
        name: vol1
        type: custom
    CreateStoragePoolsByNameVolumesRequest2:
      description: Input (when copying a volume)
      value:
        config: {}
        name: vol1
        type: custom
        source:
          pool: pool2
          name: vol2
          type: copy
    CreateStoragePoolsByNameVolumesRequest3:
      description: Input (when migrating a volume)
      value:
        config: {}
        name: vol1
        type: custom
        source:
          pool: pool2
          name: vol2
          type: migration
          mode: pull
    CreateStoragePoolsByNameVolumesByTypeRequest1:
      description: Input
      value:
        config: {}
        name: vol1
    CreateStoragePoolsByNameVolumesByTypeRequest2:
      description: Input (when copying a volume)
      value:
        config: {}
        name: vol1
        source:
          pool: pool2
          name: vol2
          type: copy
    CreateStoragePoolsByNameVolumesByTypeRequest3:
      description: Input (when migrating a volume)
      value:
        config: {}
        name: vol1
        source:
          pool: pool2
          name: vol2
          type: migration
          mode: pull
    CreateStoragePoolsByNameVolumesByTypeNameRequest1:
      description: Input (migration across lxd instances)
      value:
        name: vol1
        pool: pool3
        migration: true
    CreateStoragePoolsByNameVolumesByTypeNameRequest2:
      description: Input
      value:
        name: vol1
        pool: pool3
    CreateStoragePoolsByNameVolumesByTypeNameResponse:
      description: Output in metadata section (for migration)
      value:
        control: secret1
        fs: secret2
    GetStoragePoolsByNameVolumesByTypeNameSnapshotsResponse:
      description: List of volume snapshots
      value:
      - /1.0/storage-pools/default/volumes/custom/foo/snapshots/snap0
    UpdateClusterRequest1:
      description: Input (bootstrap a new cluster)
      value:
        server_name: lxd1
        enabled: true
    UpdateClusterRequest2:
      description: Input (request to join an existing cluster)
      value:
        server_name: node2
        server_address: 10.1.1.102:8443
        enabled: true
        cluster_address: 10.1.1.101:8443
        cluster_certificate: |-
          -----BEGIN CERTIFICATE-----MIFf
          -----END CERTIFICATE-----
        cluster_password: sekret
        member_config:
        - entity: storage-pool
          name: local
          key: source
          value: /dev/sdb
        - entity: network
          name: lxdbr0
          key: bridge.external_interfaces
          value: vlan0
    UpdateClusterRequest3:
      description: Input (disable clustering on the node)
      value:
        enabled: false
    GetClusterMembersResponse:
      description: List of LXD members in the cluster
      value:
      - /1.0/cluster/members/lxd1
      - /1.0/cluster/members/lxd2
    Response:
      description: Example Value
      value: {}
    BasicBackgroundOperationResponse:
      description: Example Value
      value:
        type: async
        status: OK
        status_code: 100
        operation: /1.0/instances/<id>
        metadata: {}
    StandardReturnValueResponse:
      description: Example Value
      value:
        type: sync
        status: Success
        status_code: 200
        error_code: 0
        metadata: {}
    BackgroundOperationResponse:
      description: Example Value
      value:
        type: sync
        status: Success
        status_code: 200
        error_code: 0
        metadata: {}
    ErrorResponse:
      description: Example Value
      value:
        type: error
        status: Failure
        status_code: 400
        metadata: {}
  parameters:
    Recursion:
      description: "To optimize queries of large lists, recursion is implemented for\
        \ collections. The default value is 0 which means that collection member URLs\
        \ are returned. Setting it to 1 will have those URLs be replaced by the object\
        \ they point to (typically a dict)."
      explode: true
      in: query
      name: recursion
      required: false
      schema:
        type: integer
      style: form
    Filter:
      description: "There is no default value for filter which means that all results\
        \ found will be returned. The language follows the OData conventions for structuring\
        \ REST API filtering logic. Logical operators are also supported for filtering:\
        \ not(not), equals(eq), not equals(ne), and(and), or(or). Filters are evaluated\
        \ with left associativity. Values with spaces can be surrounded with quotes.\
        \ Nesting filtering is also supported."
      explode: true
      in: query
      name: filter
      required: false
      schema:
        type: string
      style: pipeDelimited
  requestBodies:
    CreateInstancesRequest:
      content:
        application/json:
          examples:
            Example_1:
              $ref: '#/components/examples/CreateInstancesRequest1'
            Example_2:
              $ref: '#/components/examples/CreateInstancesRequest2'
            Example_3:
              $ref: '#/components/examples/CreateInstancesRequest3'
            Example_4:
              $ref: '#/components/examples/CreateInstancesRequest4'
            Example_5:
              $ref: '#/components/examples/CreateInstancesRequest5'
            Example_6:
              $ref: '#/components/examples/CreateInstancesRequest6'
            Example_7:
              $ref: '#/components/examples/CreateInstancesRequest7'
            Example_8:
              $ref: '#/components/examples/CreateInstancesRequest8'
            Example_9:
              $ref: '#/components/examples/CreateInstancesRequest9'
          schema:
            $ref: '#/components/schemas/CreateInstancesRequest'
        file:
          examples:
            sampleFile:
              externalValue: https://lxd.readthedocs.io/en/latest/rest-api/#10instancesnamemetadata
              summary: A sample file
          schema:
            description: Raw compressed tarball as provided by a backup download
            format: binary
            type: string
      description: Create a new instance
    CreateInstancesByNameRequest:
      content:
        application/json:
          examples:
            Example_1:
              $ref: '#/components/examples/CreateInstancesByNameRequest1'
            Example_2:
              $ref: '#/components/examples/CreateInstancesByNameRequest2'
            Example_3:
              $ref: '#/components/examples/CreateInstancesByNameRequest3'
          schema:
            $ref: '#/components/schemas/CreateInstancesByNameRequest'
      description: Used to rename/migrate the instance
    CreateInstancesByNameConsoleRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateInstancesByNameConsoleRequest'
      description: Attach to an instance's console devices
    CreateInstancesByNameExecRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateInstancesByNameExecRequest'
      description: Run a remote command
    CreateInstancesByNameSnapshotsInformationRequest:
      content:
        application/json:
          examples:
            Example_1:
              $ref: '#/components/examples/CreateInstancesByNameSnapshotsInformationRequest1'
            Example_2:
              $ref: '#/components/examples/CreateInstancesByNameSnapshotsInformationRequest2'
          schema:
            $ref: '#/components/schemas/CreateInstancesByNameSnapshotsInformationRequest'
      description: Used to rename/migrate the snapshot
    CreateImagesRequest:
      content:
        application/json:
          examples:
            Example_1:
              $ref: '#/components/examples/CreateImagesRequest1'
            Example_2:
              $ref: '#/components/examples/CreateImagesRequest2'
            Example_3:
              $ref: '#/components/examples/CreateImagesRequest3'
          schema:
            $ref: '#/components/schemas/CreateImagesRequest'
        file:
          schema:
            description: Standard http file upload
            format: binary
            type: string
      description: Create and publish a new image
    CreateStoragePoolsByNameVolumesRequest:
      content:
        application/json:
          examples:
            Example_1:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesRequest1'
            Example_2:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesRequest2'
            Example_3:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesRequest3'
          schema:
            $ref: '#/components/schemas/CreateStoragePoolsByNameVolumesRequest'
      description: Create a new storage volume on a given storage pool
    CreateStoragePoolsByNameVolumesByTypeRequest:
      content:
        application/json:
          examples:
            Example_1:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeRequest1'
            Example_2:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeRequest2'
            Example_3:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeRequest3'
          schema:
            $ref: '#/components/schemas/CreateStoragePoolsByNameVolumesByTypeRequest'
      description: Create a new storage volume of a particular type on a given storage
        pool
    CreateStoragePoolsByNameVolumesByTypeNameRequest:
      content:
        application/json:
          examples:
            Example_1:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeNameRequest1'
            Example_2:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeNameRequest2'
          schema:
            $ref: '#/components/schemas/CreateStoragePoolsByNameVolumesByTypeNameRequest'
      description: Rename a storage volume on a given storage pool
    UpdateStoragePoolsByNameVolumesByTypeNameRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateStoragePoolsByNameVolumesByTypeNameRequest'
      description: Replace the storage volume information or restore from snapshot
    UpdateClusterRequest:
      content:
        application/json:
          examples:
            Example_1:
              $ref: '#/components/examples/UpdateClusterRequest1'
            Example_2:
              $ref: '#/components/examples/UpdateClusterRequest2'
            Example_3:
              $ref: '#/components/examples/UpdateClusterRequest3'
          schema:
            $ref: '#/components/schemas/UpdateClusterRequest'
      description: "Bootstrap or join a cluster, or disable clustering on this node"
  responses:
    BasicStandardReturnValueResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/StandardReturnValueResponse'
          schema:
            $ref: '#/components/schemas/StandardReturnValueResponse'
      description: A standard return value response
    BasicBackgroundOperationResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/BasicBackgroundOperationResponse'
          schema:
            $ref: '#/components/schemas/BasicBackgroundOperationResponse'
      description: A basic background return value response
    ErrorResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/ErrorResponse'
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: A standard error response
    GetApiListResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetApiListResponse'
          schema:
            items:
              type: string
            type: array
      description: List of supported APIs
    GetServerStateResponse:
      content:
        application/json:
          examples:
            Example_1:
              $ref: '#/components/examples/GetServerStateResponse1'
            Example_2:
              $ref: '#/components/examples/GetServerStateResponse2'
          schema:
            $ref: '#/components/schemas/GetServerStateResponse'
      description: Server configuration and environment information
    GetCertificatesResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetCertificatesResponse'
          schema:
            items:
              type: string
            type: array
      description: List of trusted certificates
    GetFingerprintResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetFingerprintResponse'
      description: Trusted certificate information
    GetInstancesResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetInstancesResponse'
          schema:
            items:
              type: string
            type: array
      description: List of instances
    GetInstancesByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInstancesByNameResponse'
      description: Instance information
    CreateInstancesByNameResponse:
      content:
        application/json:
          examples:
            Example_1:
              $ref: '#/components/examples/BasicBackgroundOperationResponse'
            Example_2:
              $ref: '#/components/examples/CreateInstancesByNameResponse'
          schema:
            $ref: '#/components/schemas/BasicBackgroundOperationResponse'
      description: Background return value responses
    CreateInstancesByNameExecResponse:
      content:
        application/json:
          examples:
            Example_1:
              $ref: '#/components/examples/CreateInstancesByNameExecResponse1'
            Example_2:
              $ref: '#/components/examples/CreateInstancesByNameExecResponse2'
            Example_3:
              $ref: '#/components/examples/CreateInstancesByNameExecResponse3'
            Example_4:
              $ref: '#/components/examples/CreateInstancesByNameExecResponse4'
          schema:
            $ref: '#/components/schemas/BasicBackgroundOperationResponse'
      description: Background operation + optional websocket information
    GetInstancesByNameFilesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RawFile'
      description: Download a file or directory listing from the instance
    GetSnapshotListResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetSnapshotListResponse'
          schema:
            items:
              type: string
            type: array
      description: snapshots response
    GetSnapshotInformationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSnapshotInformationResponse'
      description: Snapshot information
    CreateInstancesByNameSnapshotsInformationResponse:
      content:
        application/json:
          examples:
            Example_1:
              $ref: '#/components/examples/StandardReturnValueResponse'
            Example_2:
              $ref: '#/components/examples/CreateInstancesByNameSnapshotsInformationResponse'
          schema:
            $ref: '#/components/schemas/BasicBackgroundOperationResponse'
      description: Create Instances By Name Snapshots Information Response
    GetInstancesByNameStateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInstancesByNameStateResponse'
      description: Current state
    GetInstancesByNameLogsResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetInstancesByNameLogsResponse'
          schema:
            items:
              type: string
            type: array
      description: Instances logs response
    GetInstancesByNameMetadataResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInstancesByNameMetadataResponse'
      description: Instance metadata
    GetInstancesByNameMetadataTemplatesResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetInstancesByNameMetadataTemplatesResponse'
          schema:
            items:
              type: string
            type: array
      description: Instances metadata templates response
    GetInstancesByNameBackupsResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetInstancesByNameBackupsResponse'
          schema:
            items:
              type: string
            type: array
      description: List of backups for the instance
    GetInstancesByNameBackupsByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInstancesByNameBackupsByNameResponse'
      description: Backup information
    GetInstancesByNameBackupsByNameExportResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInstancesByNameBackupsByNameExportResponse'
      description: Fetch the backup tarball
    GetEventsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEventsResponse'
      description: websocket upgrade
    GetImagesResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetImagesResponse'
          schema:
            items:
              type: string
            type: array
      description: List of images (public or private)
    GetImagesFingerprintResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetImagesFingerprintResponse'
      description: Download the image tarball
    CreateImagesFingerprintSecretResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/CreateImagesFingerprintSecretResponse'
          schema:
            $ref: '#/components/schemas/CreateImagesFingerprintSecretResponse'
      description: A basic background return value response
    GetImagesAliasesResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetImagesAliasesResponse'
          schema:
            items:
              type: string
            type: array
      description: List of aliases (public or private based on image visibility)
    GetImagesAliasesByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetImagesAliasesByNameResponse'
      description: Snapshot information
    GetNetworksResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetNetworksResponse'
          schema:
            items:
              type: string
            type: array
      description: List of networks
    GetNetworksByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNetworksByNameResponse'
      description: Information about a network
    Response:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/Response'
          schema:
            type: object
      description: Empty response
    GetNetworksByNameStateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNetworksByNameStateResponse'
      description: Network state
    GetOperationsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetOperationsResponse'
      description: List of operations
    GetNetworksUUIDResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNetworksUUIDResponse'
      description: Background operation
    GetProfilesResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetProfilesResponse'
          schema:
            items:
              type: string
            type: array
      description: List of configuration profiles
    GetProfilesByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProfilesByNameResponse'
      description: Profile configuration
    GetProjectsResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetProjectsResponse'
          schema:
            items:
              type: string
            type: array
      description: List of projects
    GetProjectsByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProjectsByNameResponse'
      description: Project configuration
    GetStoragePoolsResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetStoragePoolsResponse'
          schema:
            items:
              type: string
            type: array
      description: List of storage pools
    GetStoragePoolsByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetStoragePoolsByNameResponse'
      description: Information about a storage pool
    GetStoragePoolsByNameResourcesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetStoragePoolsByNameResourcesResponse'
      description: Information about the resources available to the storage pool
    GetStoragePoolsByNameVolumesResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetStoragePoolsByNameVolumesResponse'
          schema:
            items:
              type: string
            type: array
      description: list of storage volumes
    GetStoragePoolsByNameVolumesByTypeNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetStoragePoolsByNameVolumesByTypeNameResponse'
      description: Information about a storage volume of a given type on a storage
        pool
    CreateStoragePoolsByNameVolumesByTypeNameResponse:
      content:
        application/json:
          examples:
            Example_1:
              $ref: '#/components/examples/StandardReturnValueResponse'
            Example_2:
              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeNameResponse'
          schema:
            $ref: '#/components/schemas/BasicBackgroundOperationResponse'
      description: Create Instances By Name Exec Response
    GetStoragePoolsByNameVolumesByTypeNameSnapshotsResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetStoragePoolsByNameVolumesByTypeNameSnapshotsResponse'
          schema:
            items:
              type: string
            type: array
      description: List of volume snapshots
    GetStoragePoolsByNameVolumesByTypeNameSnapshotsNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetStoragePoolsByNameVolumesByTypeNameSnapshotsNameResponse'
      description: Snapshot information
    GetResourcesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetResourcesResponse'
      description: Information about the resources available to the LXD server
    GetClusterResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetClusterResponse'
      description: Information about a cluster (such as networks and storage pools)
    GetClusterMembersResponse:
      content:
        application/json:
          examples:
            Example:
              $ref: '#/components/examples/GetClusterMembersResponse'
          schema:
            items:
              type: string
            type: array
      description: List of LXD members in the cluster
    GetClusterMembersByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetClusterMembersByNameResponse'
      description: Retrieve the member's information and status
  schemas:
    StandardReturnValueResponse:
      example:
        metadata: "{}"
        status_code: 200
        type: sync
        status: Success
        error: Failure
        error_code: 400
      properties:
        type:
          example: sync
          type: string
        status:
          description: String version of the operation's status
          example: Success
          type: string
        status_code:
          description: Integer version of the operation's status (use this rather
            than status)
          example: 200
          type: integer
        error:
          example: Failure
          type: string
        error_code:
          example: 400
          type: integer
        metadata:
          type: object
      required:
      - metadata
      - status
      - statusCode
      - type
      type: object
    BackgroundOperationResponse:
      example:
        metadata: "{}"
        status_code: 100
        type: async
        operation: /1.0/instances/<id>
        status: OK
        error_code: 0
      properties:
        type:
          example: async
          type: string
        status:
          description: String version of the operation's status
          example: OK
          type: string
        status_code:
          description: Integer version of the operation's status (use this rather
            than status)
          example: 100
          type: integer
        operation:
          description: URL to the background operation
          example: /1.0/instances/<id>
          type: string
        error:
          example: Failure
          type: string
        error_code:
          example: 400
          type: integer
        metadata:
          type: object
      required:
      - metadata
      - operation
      - status
      - statusCode
      - type
      type: object
    ErrorResponse:
      properties:
        type:
          example: error
          type: string
        error:
          example: Failure
          type: string
        error_code:
          example: 400
          type: integer
        metadata:
          description: More details about the error
          type: object
      type: object
    BasicBackgroundOperationResponse:
      example:
        metadata: "{}"
        status_code: 100
        type: async
        operation: /1.0/instances/<id>
        status: OK
      properties:
        type:
          example: async
          type: string
        status:
          description: String version of the operation's status
          example: OK
          type: string
        status_code:
          description: Integer version of the operation's status (use this rather
            than status)
          example: 100
          type: integer
        operation:
          description: URL to the background operation
          example: /1.0/instances/<id>
          type: string
        metadata:
          type: object
      required:
      - operation
      - status
      - statusCode
      - type
      type: object
    GetServerStateResponse:
      description: Return value (if trusted)
      example:
        metadata:
          environment:
            architectures:
            - x86_64
            - i686
            server_pid: 10224
            storage_version: "3.19"
            server: lxc
            addresses: "[1.2.3.4:8443,[1234::1234]:8443]"
            kernel: Linux
            certificate: PEM certificate
            storage: btrfs
            server_version: 0.8.1
            kernel_architecture: x86_64
            driver: lxc
            kernel_version: "3.16"
            driver_version: 1.0.6
          api_extensions:
          - api_extensions
          - api_extensions
          public: false
          auth: "[\"guest\",\"untrusted\",\"trusted\"]"
          api_status: stable
          api_version: "1.0"
          config:
            core.https_address: "[::]:8443"
            core.trust_password: true
      properties:
        metadata:
          $ref: '#/components/schemas/GetServerStateResponse_metadata'
      required:
      - api_extensions
      - api_status
      - api_version
      - auth
      - public
      type: object
    ServerConfig:
      example:
        core.https_address: "[::]:8443"
        core.trust_password: my-password
      properties:
        core.trust_password:
          example: my-password
          type: string
        core.https_address:
          example: "[::]:8443"
          type: string
      type: object
    Environment:
      example:
        architectures:
        - x86_64
        - i686
        server_pid: 10224
        storage_version: "3.19"
        server: lxc
        addresses: "[1.2.3.4:8443,[1234::1234]:8443]"
        kernel: Linux
        certificate: PEM certificate
        storage: btrfs
        server_version: 0.8.1
        kernel_architecture: x86_64
        driver: lxc
        kernel_version: "3.16"
        driver_version: 1.0.6
      properties:
        addresses:
          example: "[1.2.3.4:8443,[1234::1234]:8443]"
          items:
            type: string
          type: array
        architectures:
          example:
          - x86_64
          - i686
          items:
            type: string
          type: array
        certificate:
          example: PEM certificate
          type: string
        driver:
          example: lxc
          type: string
        driver_version:
          example: 1.0.6
          type: string
        kernel:
          example: Linux
          type: string
        kernel_architecture:
          example: x86_64
          type: string
        kernel_version:
          example: "3.16"
          type: string
        server:
          example: lxc
          type: string
        server_pid:
          example: 10224
          type: integer
        server_version:
          example: 0.8.1
          type: string
        storage:
          example: btrfs
          type: string
        storage_version:
          example: "3.19"
          type: string
      type: object
    UpdateServerStateRequest:
      $ref: '#/components/schemas/ServerConfig'
    CreateCertificatesRequest:
      example:
        password: server-trust-password
        certificate: PEM certificate
        name: foo
        type: client
      properties:
        type:
          description: "Certificate type (keyring), currently only client"
          example: client
          type: string
        certificate:
          description: "If provided, a valid x509 certificate. If not, the client\
            \ certificate of the connection will be used"
          example: PEM certificate
          type: string
        name:
          description: "An optional name for the certificate. If nothing is provided,\
            \ the host in the TLS header for the request is used."
          example: foo
          type: string
        password:
          description: The trust password for that server (only required if untrusted)
          example: server-trust-password
          type: string
      type: object
    GetFingerprintResponse:
      example:
        metadata:
          certificate: PEM certificate
          name: foo
          fingerprint: SHA256 Hash of the raw certificate
          type: client
      properties:
        metadata:
          $ref: '#/components/schemas/GetFingerprintResponse_metadata'
      type: object
    UpdateFingerprintRequest:
      example:
        name: foo
        type: client
      properties:
        type:
          description: "Certificate type (keyring), currently only client"
          example: client
          type: string
        name:
          description: "An optional name for the certificate. If nothing is provided,\
            \ the host in the TLS header for the request is used."
          example: foo
          type: string
      type: object
    Source:
      example:
        instance_only: true
        server: https://10.0.2.3:8443
        certificate: PEM certificate
        secret: my-secret-string
        source: my-old-instance
        type: image
        secrets:
          criu: my-other-secret
          control: my-secret-string
          fs: my third secret
        mode: pull
        protocol: lxd
        base-image: <fingerprint>
        fingerprint: SHA-256
        alias: ubuntu/devel
        operation: https://10.0.2.3:8443/1.0/operations/<UUID>
        properties:
          os: ubuntu
          release: "18.04"
          architecture: x86_64
        live: true
      properties:
        type:
          description: "Can be \"image\", \"migration\", \"copy\" or \"none\"."
          example: image
          type: string
        alias:
          description: Name of the alias.
          example: ubuntu/devel
          type: string
        fingerprint:
          description: Fingerprint
          example: SHA-256
          type: string
        properties:
          $ref: '#/components/schemas/Properties'
        mode:
          description: One of "local" (default) or "pull"
          example: pull
          type: string
        server:
          description: Remote server (pull mode only)
          example: https://10.0.2.3:8443
          type: string
        protocol:
          description: "Protocol (one of lxd or simplestreams, defaults to lxd)"
          example: lxd
          type: string
        certificate:
          description: "Optional PEM certificate. If not mentioned, system CA is used."
          example: PEM certificate
          type: string
        secret:
          description: Secret to use to retrieve the image (pull mode only).
          example: my-secret-string
          type: string
        operation:
          description: Full URL to the remote operation (pull mode only).
          example: https://10.0.2.3:8443/1.0/operations/<UUID>
          type: string
        base-image:
          description: "Optional, the base image the instance was created from"
          example: <fingerprint>
          type: string
        instance_only:
          description: Whether to migrate only the instance without snapshots. Can
            be "true" or "false".
          example: true
          type: boolean
        secrets:
          $ref: '#/components/schemas/Secrets'
        source:
          description: Name of the source instance
          example: my-old-instance
          type: string
        live:
          description: Whether migration is performed live
          example: true
          type: boolean
      required:
      - type
      type: object
    DevicesKvm:
      example:
        kvm:
          path: /dev/kvm
          type: unix-char
      properties:
        kvm:
          $ref: '#/components/schemas/Kvm'
      type: object
    Kvm:
      example:
        path: /dev/kvm
        type: unix-char
      properties:
        path:
          example: /dev/kvm
          type: string
        type:
          example: unix-char
          type: string
      type: object
    Secrets:
      example:
        criu: my-other-secret
        control: my-secret-string
        fs: my third secret
      properties:
        control:
          example: my-secret-string
          type: string
        criu:
          example: my-other-secret
          type: string
        fs:
          example: my third secret
          type: string
      type: object
    Properties:
      example:
        os: ubuntu
        release: "18.04"
        architecture: x86_64
      properties:
        os:
          example: ubuntu
          type: string
        release:
          example: "18.04"
          type: string
        architecture:
          example: x86_64
          type: string
      type: object
    GetInstancesByNameResponse:
      example:
        status_code: 103
        devices:
          root:
            path: /
            type: disk
        profiles:
        - profiles
        - profiles
        created_at: 2016-02-16T01:05:05.000Z
        ephemeral: false
        expanded_config:
          limits.cpu: "3"
          volatile.eth0.hwaddr: 00:16:3e:1c:94:38
          volatile.base_image: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc
        expanded_devices:
          root:
            path: /
            type: disk
          eth0:
            nictype: bridged
            parent: lxdbr0
            name: eth0
            type: nic
        last_used_at: 2016-02-16T01:05:05.000Z
        name: my-instance
        config:
          limits.cpu: "3"
          volatile.eth0.hwaddr: 00:16:3e:1c:94:38
          volatile.base_image: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc
        stateful: false
        architecture: x86_64
        status: Running
      properties:
        architecture:
          example: x86_64
          type: string
        config:
          $ref: '#/components/schemas/HardwareSpecsConfig'
        created_at:
          example: 2016-02-16T01:05:05.000Z
          type: string
        devices:
          $ref: '#/components/schemas/DevicesRoot'
        ephemeral:
          example: false
          type: boolean
        expanded_config:
          $ref: '#/components/schemas/ExpandedConfig'
        expanded_devices:
          $ref: '#/components/schemas/ExpandedDevices'
        last_used_at:
          example: 2016-02-16T01:05:05.000Z
          type: string
        name:
          example: my-instance
          type: string
        profiles:
          items:
            type: string
          type: array
        stateful:
          description: "If true, indicates that the instance has some stored state\
            \ that can be restored on startup"
          example: false
          type: boolean
        status:
          example: Running
          type: string
        status_code:
          example: 103
          type: integer
      type: object
    ExpandedConfig:
      example:
        limits.cpu: "3"
        volatile.eth0.hwaddr: 00:16:3e:1c:94:38
        volatile.base_image: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc
      properties:
        limits.cpu:
          example: "3"
          type: string
        volatile.base_image:
          example: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc
          type: string
        volatile.eth0.hwaddr:
          example: 00:16:3e:1c:94:38
          type: string
      type: object
    ExpandedDevices:
      example:
        root:
          path: /
          type: disk
        eth0:
          nictype: bridged
          parent: lxdbr0
          name: eth0
          type: nic
      properties:
        eth0:
          $ref: '#/components/schemas/Eth0'
        root:
          $ref: '#/components/schemas/Root'
      type: object
    Eth0:
      example:
        nictype: bridged
        parent: lxdbr0
        name: eth0
        type: nic
      properties:
        name:
          example: eth0
          type: string
        nictype:
          example: bridged
          type: string
        parent:
          example: lxdbr0
          type: string
        type:
          example: nic
          type: string
      type: object
    DevicesRoot:
      example:
        root:
          path: /
          type: disk
      properties:
        root:
          $ref: '#/components/schemas/Root'
      type: object
    Root:
      example:
        path: /
        type: disk
      properties:
        path:
          example: /
          type: string
        type:
          example: disk
          type: string
      type: object
    HardwareSpecsConfig:
      example:
        limits.cpu: "3"
        volatile.eth0.hwaddr: 00:16:3e:1c:94:38
        volatile.base_image: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc
      properties:
        limits.cpu:
          example: "3"
          type: string
        volatile.base_image:
          example: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc
          type: string
        volatile.eth0.hwaddr:
          example: 00:16:3e:1c:94:38
          type: string
      type: object
    UpdateInstancesByNameRequest:
      oneOf:
      - $ref: '#/components/schemas/UpdateInstancesByNameRequest2'
      - $ref: '#/components/schemas/UpdateInstancesByNameRequest_oneOf'
    UpdateInstancesByNameRequest2:
      description: Input (restore snapshot)
      properties:
        restore:
          example: snapshot-name
          type: string
      type: object
    PatchInstancesByNameRequest:
      example:
        devices:
          root:
            path: /
            size: 5GB
            pool: default
        ephemeral: true
        config:
          limits.cpu: "3"
      properties:
        config:
          $ref: '#/components/schemas/CpuConfig'
        devices:
          $ref: '#/components/schemas/Devices3'
        ephemeral:
          example: true
          type: boolean
      type: object
    CpuConfig:
      example:
        limits.cpu: "3"
      properties:
        limits.cpu:
          example: "3"
          type: string
      type: object
    Devices3:
      example:
        root:
          path: /
          size: 5GB
          pool: default
      properties:
        root:
          $ref: '#/components/schemas/Root2'
      type: object
    Root2:
      example:
        path: /
        size: 5GB
        pool: default
      properties:
        path:
          example: /
          type: string
        pool:
          example: default
          type: string
        size:
          example: 5GB
          type: string
      type: object
    CreateInstancesByNameRequest:
      oneOf:
      - $ref: '#/components/schemas/MigrateInstancesByNameRequest'
      - $ref: '#/components/schemas/CreateInstancesByNameRequest_oneOf'
    MigrateInstancesByNameRequest:
      properties:
        control:
          example: secret1
          type: string
        criu:
          example: secret2
          type: string
        fs:
          example: secret3
          type: string
      type: object
    CreateInstancesByNameConsoleRequest:
      oneOf:
      - $ref: '#/components/schemas/WindowSizeChangeRequest'
      - $ref: '#/components/schemas/CreateInstancesByNameConsoleRequest_oneOf'
    WindowSizeChangeRequest:
      description: Control (window size change)
      properties:
        command:
          example: window-resize
          type: string
        args:
          $ref: '#/components/schemas/Args'
      type: object
    Args:
      properties:
        width:
          example: "80"
          type: string
        height:
          example: "50"
          type: string
      type: object
    CreateInstancesByNameExecRequest:
      oneOf:
      - $ref: '#/components/schemas/Sigusr1SignalRequest'
      - $ref: '#/components/schemas/WindowSizeChangeRequest'
      - $ref: '#/components/schemas/CreateInstancesByNameExecRequest_oneOf'
    Sigusr1SignalRequest:
      properties:
        command:
          example: signal
          type: string
        signal:
          example: 10
          type: integer
      type: object
    CreateInstancesByNameExecResponse1:
      description: Return (with wait-for-websocket=true and interactive=false)
      properties:
        fds:
          $ref: '#/components/schemas/Fds1'
      type: object
    Fds1:
      properties:
        "0":
          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21
          type: string
        "1":
          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21
          type: string
        "2":
          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21
          type: string
        control:
          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21
          type: string
      type: object
    CreateInstancesByNameExecResponse2:
      description: Return (with wait-for-websocket=true and interactive=true)
      properties:
        fds:
          $ref: '#/components/schemas/Fds1'
      type: object
    Fds2:
      properties:
        "0":
          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c2
          type: string
        control:
          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21
          type: string
      type: object
    CreateInstancesByNameExecResponse3:
      description: Return (with interactive=false and record-output=true)
      properties:
        fds:
          $ref: '#/components/schemas/Output'
        return:
          example: 0
          type: integer
      type: object
    Output:
      properties:
        "1":
          example: /1.0/instances/example/logs/exec_b0f737b4-2c8a-4edf-a7c1-4cc7e4e9e155.stdout
          type: string
        "2":
          example: /1.0/instances/example/logs/exec_b0f737b4-2c8a-4edf-a7c1-4cc7e4e9e155.stderr
          type: string
      type: object
    RawFile:
      oneOf:
      - $ref: '#/components/schemas/StandardReturnValueResponse'
      - type: object
    CreateInstancesByNameSnapshotRequest:
      example:
        name: my-snapshot
        stateful: true
      properties:
        name:
          description: Name of the snapshot
          example: my-snapshot
          type: string
        stateful:
          description: Whether to include state too
          example: true
          type: boolean
      type: object
    GetSnapshotInformationResponse:
      example:
        size: 738476032
        devices:
          root:
            path: /
            type: disk
          eth0:
            nictype: bridged
            parent: lxdbr0
            name: eth0
            type: nic
        name: blah
        profiles: default
        created_at: 2016-03-08T23:55:08.000Z
        ephemeral: false
        expanded_config:
          volatile.last_state.idmap: "[{\"Isuid\":true,\"Isgid\":false,\"Hostid\"\
            :100000,\"Nsid\":0,\"Maprange\":65536},{\"Isuid\":false,\"Isgid\":true,\"\
            Hostid\":100000,\"Nsid\":0,\"Maprange\":65536}]"
          security.nesting: "true"
          volatile.eth0.hwaddr: 00:16:3e:ec:65:a8
          volatile.base_image: a49d26ce5808075f5175bf31f5cb90561f5023dcd408da8ac5e834096d46b2d8
        expanded_devices:
          root:
            path: /
            type: disk
          eth0:
            nictype: bridged
            parent: lxdbr0
            name: eth0
            type: nic
        config:
          volatile.last_state.idmap: "[{\"Isuid\":true,\"Isgid\":false,\"Hostid\"\
            :100000,\"Nsid\":0,\"Maprange\":65536},{\"Isuid\":false,\"Isgid\":true,\"\
            Hostid\":100000,\"Nsid\":0,\"Maprange\":65536}]"
          security.nesting: "true"
          volatile.eth0.hwaddr: 00:16:3e:ec:65:a8
          volatile.base_image: a49d26ce5808075f5175bf31f5cb90561f5023dcd408da8ac5e834096d46b2d8
        stateful: false
        architecture: x86_64
      properties:
        architecture:
          example: x86_64
          type: string
        config:
          $ref: '#/components/schemas/SecurityNestingConfig'
        created_at:
          example: 2016-03-08T23:55:08.000Z
          type: string
        devices:
          $ref: '#/components/schemas/ExpandedDevices'
        ephemeral:
          example: false
          type: boolean
        expanded_config:
          $ref: '#/components/schemas/SecurityNestingConfig'
        expanded_devices:
          $ref: '#/components/schemas/ExpandedDevices'
        name:
          example: blah
          type: string
        profiles:
          example: default
          items:
            type: string
          type: array
        size:
          example: 738476032
          type: number
        stateful:
          example: false
          type: boolean
      type: object
    SecurityNestingConfig:
      example:
        volatile.last_state.idmap: "[{\"Isuid\":true,\"Isgid\":false,\"Hostid\":100000,\"\
          Nsid\":0,\"Maprange\":65536},{\"Isuid\":false,\"Isgid\":true,\"Hostid\"\
          :100000,\"Nsid\":0,\"Maprange\":65536}]"
        security.nesting: "true"
        volatile.eth0.hwaddr: 00:16:3e:ec:65:a8
        volatile.base_image: a49d26ce5808075f5175bf31f5cb90561f5023dcd408da8ac5e834096d46b2d8
      properties:
        security.nesting:
          example: "true"
          type: string
        volatile.base_image:
          example: a49d26ce5808075f5175bf31f5cb90561f5023dcd408da8ac5e834096d46b2d8
          type: string
        volatile.eth0.hwaddr:
          example: 00:16:3e:ec:65:a8
          type: string
        volatile.last_state.idmap:
          example: "[{\"Isuid\":true,\"Isgid\":false,\"Hostid\":100000,\"Nsid\":0,\"\
            Maprange\":65536},{\"Isuid\":false,\"Isgid\":true,\"Hostid\":100000,\"\
            Nsid\":0,\"Maprange\":65536}]"
          type: string
      type: object
    CreateInstancesByNameSnapshotsInformationRequest:
      description: setup the migration source
      example:
        name: new-name
        migration: true
        live: "true"
      properties:
        name:
          example: new-name
          type: string
        migration:
          example: true
          type: boolean
        live:
          example: "true"
          type: string
      type: object
    UpdateInstancesByNameSnapshotsInformationRequest:
      example:
        expires_at: 2019-01-16T10:34:56.000Z
      properties:
        expires_at:
          example: 2019-01-16T10:34:56.000Z
          type: string
      type: object
    GetInstancesByNameStateResponse:
      allOf:
      - $ref: '#/components/schemas/StandardReturnValueResponse'
      - $ref: '#/components/schemas/GetInstancesByNameStateResponse_allOf'
    GetInstancesByNameStateMetadataResponse:
      properties:
        status:
          example: Running
          type: string
        status_code:
          example: 200
          type: number
        cpu:
          $ref: '#/components/schemas/Cpu'
        disk:
          $ref: '#/components/schemas/Disk'
        memory:
          $ref: '#/components/schemas/Memory'
        network:
          $ref: '#/components/schemas/Network'
        pid:
          example: 13663
          type: number
        processes:
          example: 32
          type: number
      type: object
    Cpu:
      properties:
        usage:
          example: 4986019722
          type: number
      type: object
    Disk:
      properties:
        root:
          $ref: '#/components/schemas/Root3'
      type: object
    Root3:
      properties:
        usage:
          example: 4986019722
          type: number
      type: object
    Memory:
      properties:
        usage:
          example: 51126272
          type: number
        usage_peak:
          example: 70246400
          type: number
        swap_usage:
          example: 0
          type: number
        swap_usage_peak:
          example: 0
          type: number
      type: object
    Network:
      properties:
        eth0:
          $ref: '#/components/schemas/Eth02'
        lo:
          $ref: '#/components/schemas/Eth02'
        lxdbr0:
          $ref: '#/components/schemas/Eth02'
        zt0:
          $ref: '#/components/schemas/Eth02'
      type: object
    Eth02:
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/Addresses'
          type: array
        counters:
          $ref: '#/components/schemas/Counters'
        hwaddr:
          example: 00:16:3e:ec:65:a8
          type: string
        host_name:
          example: vethBWTSU5
          type: string
        mtu:
          example: 1500
          type: number
        state:
          example: up
          type: string
        type:
          example: broadcast
          type: string
      type: object
    Addresses:
      example:
        address: 10.0.3.27
        netmask: "24"
        scope: "24"
        family: init
      properties:
        family:
          example: init
          type: string
        address:
          example: 10.0.3.27
          type: string
        netmask:
          example: "24"
          type: string
        scope:
          example: "24"
          type: string
      type: object
    Counters:
      example:
        packets_sent: 178
        packets_received: 402
        bytes_received: 33942
        bytes_sent: 30810
      properties:
        bytes_received:
          example: 33942
          type: number
        bytes_sent:
          example: 30810
          type: number
        packets_received:
          example: 402
          type: number
        packets_sent:
          example: 178
          type: number
      type: object
    UpdateInstancesByNameStateRequest:
      example:
        action: stop
        force: true
        timeout: 30
        stateful: true
      properties:
        action:
          description: "State change action (stop, start, restart, freeze or unfreeze)"
          example: stop
          type: string
        timeout:
          description: A timeout after which the state change is considered as failed
          example: 30
          type: number
        force:
          description: Force the state change (currently only valid for stop and restart
            where it means killing the instance)
          example: true
          type: boolean
        stateful:
          description: "Whether to store or restore runtime state before stopping\
            \ or startiong (only valid for stop and start, defaults to false)"
          example: true
          type: boolean
      type: object
    GetInstancesByNameMetadataResponse:
      example:
        expiry_date: 0
        templates:
          /template:
            template: template.tpl
            when:
            - when
            - when
            create_only: false
            properties: "{}"
        creation_date: 1477146654
        properties:
          os: BusyBox
          name: busybox-x86_64
          description: BusyBox x86_64
          architecture: x86_64
        architecture: x86_64
      properties:
        architecture:
          example: x86_64
          type: string
        creation_date:
          example: 1477146654
          type: number
        expiry_date:
          example: 0
          type: number
        properties:
          $ref: '#/components/schemas/Properties2'
        templates:
          $ref: '#/components/schemas/Templates'
      type: object
    Properties2:
      example:
        os: BusyBox
        name: busybox-x86_64
        description: BusyBox x86_64
        architecture: x86_64
      properties:
        architecture:
          example: x86_64
          type: string
        description:
          example: BusyBox x86_64
          type: string
        name:
          example: busybox-x86_64
          type: string
        os:
          example: BusyBox
          type: string
      type: object
    Templates:
      example:
        /template:
          template: template.tpl
          when:
          - when
          - when
          create_only: false
          properties: "{}"
      properties:
        /template:
          $ref: '#/components/schemas/Template'
      type: object
    Template:
      example:
        template: template.tpl
        when:
        - when
        - when
        create_only: false
        properties: "{}"
      properties:
        when:
          items:
            type: string
          type: array
        create_only:
          example: false
          type: boolean
        template:
          example: template.tpl
          type: string
        properties:
          type: object
      type: object
    CreateInstancesByNameBackupsRequest:
      example:
        instance_only: true
        optimized_storage: true
        name: backupName
        expiry: 3600
      properties:
        name:
          description: Unique identifier for the backup
          example: backupName
          type: string
        expiry:
          description: When to delete the backup automatically
          example: 3600
          type: number
        instance_only:
          description: "If True, snapshots aren't included"
          example: true
          type: boolean
        optimized_storage:
          description: "If True, btrfs send or zfs send is used for instance and snapshots"
          example: true
          type: boolean
      type: object
    GetInstancesByNameBackupsByNameResponse:
      example:
        instance_only: false
        expiry_date: 2018-04-23T10:16:09.000Z
        optimized_storage: false
        name: backupName
        creation_date: 2018-04-23T10:16:09.000Z
      properties:
        name:
          example: backupName
          type: string
        creation_date:
          example: 2018-04-23T10:16:09.000Z
          type: string
        expiry_date:
          example: 2018-04-23T10:16:09.000Z
          type: string
        instance_only:
          example: false
          type: boolean
        optimized_storage:
          example: false
          type: boolean
      type: object
    CreateInstancesByNameBackupsByNameRequest:
      example:
        name: new-name
      properties:
        name:
          example: new-name
          type: string
      type: object
    GetInstancesByNameBackupsByNameExportResponse:
      example:
        data: <byte-stream>
      properties:
        data:
          example: <byte-stream>
          type: string
      type: object
    GetEventsResponse:
      example:
        metadata:
          level: info
          context:
            method: GET
            ip: '@'
            url: /1.0/instances/xen/snapshots
          message: handling
        type: operation
        timestamp: 2015-06-10T01:07:24.379Z
      properties:
        timestamp:
          description: Current timestamp
          example: 2015-06-10T01:07:24.379Z
          type: string
        type:
          description: Notification type
          enum:
          - operation
          - logging
          - lifecycle
          example: operation
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata2'
      type: object
    Metadata2:
      example:
        level: info
        context:
          method: GET
          ip: '@'
          url: /1.0/instances/xen/snapshots
        message: handling
      properties:
        context:
          $ref: '#/components/schemas/Context'
        level:
          example: info
          type: string
        message:
          example: handling
          type: string
      type: object
    Context:
      example:
        method: GET
        ip: '@'
        url: /1.0/instances/xen/snapshots
      properties:
        ip:
          example: '@'
          type: string
        method:
          example: GET
          type: string
        url:
          example: /1.0/instances/xen/snapshots
          type: string
      type: object
    CreateImagesRequest:
      description: Source image dictionary (transfers a remote image)
      example:
        filename: filename
        aliases:
        - name: my-alias
          description: A description
        - name: my-alias
          description: A description
        public: true
        auto_update: true
        compression_algorithm: xz
        source:
          mode: pull
          server: https://10.0.2.3:8443
          protocol: lxd
          certificate: PEM certificate
          fingerprint: SHA256
          name: abc
          alias: ubuntu/devel
          secret: my-secret-string
          type: image
          url: https://www.some-server.com/image
        properties:
          os: Ubuntu
      properties:
        filename:
          description: Used for export (optional)
          example: filename
          type: string
        public:
          description: Whether the image can be downloaded by untrusted users (defaults
            to false)
          example: true
          type: boolean
        auto_update:
          description: Whether the image should be auto-updated (optional; defaults
            to false)
          example: true
          type: boolean
        properties:
          $ref: '#/components/schemas/Properties3'
        aliases:
          description: Set initial aliases ("image_create_aliases" API extension)
          items:
            $ref: '#/components/schemas/Aliases'
          type: array
        source:
          $ref: '#/components/schemas/Source10'
        compression_algorithm:
          description: Override the compression algorithm for the image (optional)
          example: xz
          type: string
      required:
      - aliases
      - source
      type: object
    Properties3:
      example:
        os: Ubuntu
      properties:
        os:
          example: Ubuntu
          type: string
      type: object
    Aliases:
      example:
        name: my-alias
        description: A description
      properties:
        name:
          example: my-alias
          type: string
        description:
          example: A description
          type: string
      type: object
    Source10:
      example:
        mode: pull
        server: https://10.0.2.3:8443
        protocol: lxd
        certificate: PEM certificate
        fingerprint: SHA256
        name: abc
        alias: ubuntu/devel
        secret: my-secret-string
        type: image
        url: https://www.some-server.com/image
      properties:
        type:
          example: image
          type: string
        mode:
          description: Only pull is supported for now
          example: pull
          type: string
        server:
          description: Remote server (pull mode only)
          example: https://10.0.2.3:8443
          type: string
        protocol:
          description: "Protocol (one of lxd or simplestreams, defaults to lxd)"
          example: lxd
          type: string
        secret:
          description: "Secret (pull mode only, private images only)"
          example: my-secret-string
          type: string
        certificate:
          description: "Optional PEM certificate. If not mentioned, system CA is used."
          example: PEM certificate
          type: string
        fingerprint:
          description: Fingerprint of the image (must be set if alias isn't)
          example: SHA256
          type: string
        alias:
          description: Name of the alias (must be set if fingerprint isn't)
          example: ubuntu/devel
          type: string
        name:
          example: abc
          type: string
        url:
          description: URL for the image
          example: https://www.some-server.com/image
          type: string
      required:
      - alias
      - fingerprint
      - mode
      - protocol
      - secret
      - server
      - type
      type: object
    GetImagesFingerprintResponse:
      example:
        aliases:
        - name: my-alias
          description: A description
        - name: my-alias
          description: A description
        created_at: 2016-02-01T21:07:41.000Z
        update_source:
          server: https://10.1.2.4:8443
          protocol: lxd
          certificate: PEM certificate
          alias: ubuntu/bionic/amd64
        last_used_at: 1970-01-01T00:00:00.000Z
        filename: ubuntu-bionic-18.04-amd64-server-20180201.tar.xz
        expires_at: 1970-01-01T00:00:00.000Z
        auto_update: true
        public: false
        size: 123792592
        uploaded_at: 2016-02-16T00:44:47.000Z
        cached: false
        fingerprint: 54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
        properties:
          os: ubuntu
          release: "18.04"
          architecture: x86_64
        architecture: x86_64
      properties:
        aliases:
          items:
            $ref: '#/components/schemas/Aliases'
          type: array
        architecture:
          example: x86_64
          type: string
        auto_update:
          example: true
          type: boolean
        cached:
          example: false
          type: boolean
        fingerprint:
          example: 54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
          type: string
        filename:
          example: ubuntu-bionic-18.04-amd64-server-20180201.tar.xz
          type: string
        properties:
          $ref: '#/components/schemas/Properties'
        update_source:
          $ref: '#/components/schemas/UpdateSource'
        public:
          example: false
          type: boolean
        size:
          example: 123792592
          type: number
        created_at:
          example: 2016-02-01T21:07:41.000Z
          type: string
        expires_at:
          example: 1970-01-01T00:00:00.000Z
          type: string
        last_used_at:
          example: 1970-01-01T00:00:00.000Z
          type: string
        uploaded_at:
          example: 2016-02-16T00:44:47.000Z
          type: string
      type: object
    Properties4:
      example:
        os: ubuntu
        release: bionic
        description: Ubuntu 18.04 LTS server (20180601)
        architecture: x86_64
      properties:
        architecture:
          example: x86_64
          type: string
        description:
          example: Ubuntu 18.04 LTS server (20180601)
          type: string
        release:
          example: bionic
          type: string
        os:
          example: ubuntu
          type: string
      type: object
    UpdateSource:
      example:
        server: https://10.1.2.4:8443
        protocol: lxd
        certificate: PEM certificate
        alias: ubuntu/bionic/amd64
      properties:
        server:
          example: https://10.1.2.4:8443
          type: string
        protocol:
          example: lxd
          type: string
        certificate:
          example: PEM certificate
          type: string
        alias:
          example: ubuntu/bionic/amd64
          type: string
      type: object
    UpdateImagesFingerprintRequest:
      example:
        auto_update: true
        public: true
        properties:
          os: ubuntu
          release: bionic
          description: Ubuntu 18.04 LTS server (20180601)
          architecture: x86_64
      properties:
        auto_update:
          example: true
          type: boolean
        properties:
          $ref: '#/components/schemas/Properties4'
        public:
          example: true
          type: boolean
      type: object
    PatchImagesFingerprintRequest:
      example:
        public: true
        properties:
          os: ubuntu
          release: bionic
      properties:
        properties:
          $ref: '#/components/schemas/Properties5'
        public:
          example: true
          type: boolean
      type: object
    Properties5:
      example:
        os: ubuntu
        release: bionic
      properties:
        os:
          example: ubuntu
          type: string
        release:
          example: bionic
          type: string
      type: object
    CreateImagesFingerprintExportRequest:
      example:
        aliases:
        - alias
        certificate: target certificate
        secret: secret
        target: target URL
      properties:
        target:
          example: target URL
          type: string
        secret:
          example: secret
          type: string
        certificate:
          example: target certificate
          type: string
        aliases:
          example:
          - alias
          items:
            type: string
          type: array
      type: object
    CreateImagesFingerprintSecretResponse:
      example:
        metadata:
          secret: 52e9ec5885562aa24d05d7b4846ebb8b5f1f7bf5cd6e285639b569d9eaf54c9b
        status_code: 200
        type: sync
        status: Success
      properties:
        type:
          example: sync
          type: string
        status:
          description: String version of the operation's status
          example: Success
          type: string
        status_code:
          description: Integer version of the operation's status (use this rather
            than status)
          example: 200
          type: integer
        metadata:
          $ref: '#/components/schemas/Metadata3'
      required:
      - status
      - statusCode
      - type
      type: object
    Metadata3:
      example:
        secret: 52e9ec5885562aa24d05d7b4846ebb8b5f1f7bf5cd6e285639b569d9eaf54c9b
      properties:
        secret:
          example: 52e9ec5885562aa24d05d7b4846ebb8b5f1f7bf5cd6e285639b569d9eaf54c9b
          type: string
      type: object
    CreateImagesAliasesRequest:
      example:
        name: alias-name
        description: The alias description
        target: SHA-256
      properties:
        description:
          example: The alias description
          type: string
        target:
          example: SHA-256
          type: string
        name:
          example: alias-name
          type: string
      type: object
    GetImagesAliasesByNameResponse:
      example:
        name: test
        description: my description
        target: c9b6e738fae75286d52f497415463a8ecc61bbcb046536f220d797b0e500a41f
      properties:
        name:
          example: test
          type: string
        description:
          example: my description
          type: string
        target:
          example: c9b6e738fae75286d52f497415463a8ecc61bbcb046536f220d797b0e500a41f
          type: string
        type:
          example: container
          type: string
      type: object
    UpdateImagesAliasesByNameRequest:
      example:
        description: New description
        target: 54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
      properties:
        description:
          example: New description
          type: string
        target:
          example: 54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
          type: string
      type: object
    CreateImagesAliasesByNameRequest:
      example:
        name: new-name
      properties:
        name:
          example: new-name
          type: string
      type: object
    CreateNetworksRequest:
      example:
        name: my-network
        description: My network
        config:
          ipv4.address: none
          ipv6.nat: "true"
          ipv6.address: 2001:470:b368:4242::1/64
      properties:
        name:
          example: my-network
          type: string
        description:
          example: My network
          type: string
        config:
          $ref: '#/components/schemas/NetworkIPConfig'
      type: object
    NetworkIPConfig:
      example:
        ipv4.address: none
        ipv6.nat: "true"
        ipv6.address: 2001:470:b368:4242::1/64
      properties:
        ipv4.address:
          example: none
          type: string
        ipv6.address:
          example: 2001:470:b368:4242::1/64
          type: string
        ipv6.nat:
          example: "true"
          type: string
      type: object
    GetNetworksByNameResponse:
      example:
        managed: false
        name: lxdbr0
        type: bridge
        config:
          ipv4.address: none
          ipv6.nat: "true"
          ipv6.address: 2001:470:b368:4242::1/64
        used_by:
        - /1.0/instances/blah
      properties:
        config:
          $ref: '#/components/schemas/NetworkIPConfig'
        name:
          example: lxdbr0
          type: string
        managed:
          example: false
          type: boolean
        type:
          example: bridge
          type: string
        used_by:
          example:
          - /1.0/instances/blah
          items:
            type: string
          type: array
      type: object
    UpdateNetworksByNameRequest:
      example:
        bridge.driver: openvswitch
        ipv4.address: 10.0.3.1/24
        ipv6.address: fd1:6997:4939:495d::1/64
      properties:
        bridge.driver:
          example: openvswitch
          type: string
        ipv4.address:
          example: 10.0.3.1/24
          type: string
        ipv6.address:
          example: fd1:6997:4939:495d::1/64
          type: string
      type: object
    PatchNetworksByNameRequest:
      example:
        config:
          dns.mode: dynamic
      properties:
        config:
          $ref: '#/components/schemas/DNSModeConfig'
      type: object
    DNSModeConfig:
      example:
        dns.mode: dynamic
      properties:
        dns.mode:
          example: dynamic
          type: string
      type: object
    CreateNetworksByNameRequest:
      example:
        name: new-name
      properties:
        name:
          example: new-name
          type: string
      type: object
    GetNetworksByNameStateResponse:
      example:
        addresses:
        - address: 10.0.3.27
          netmask: "24"
          scope: "24"
          family: init
        - address: 10.0.3.27
          netmask: "24"
          scope: "24"
          family: init
        hwaddr: 36:19:09:9b:f9:aa
        counters:
          packets_sent: 178
          packets_received: 402
          bytes_received: 33942
          bytes_sent: 30810
        state: up
        type: broadcast
        mtu: 1500
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/Addresses'
          type: array
        counters:
          $ref: '#/components/schemas/Counters'
        hwaddr:
          example: 36:19:09:9b:f9:aa
          type: string
        mtu:
          example: 1500
          type: number
        state:
          example: up
          type: string
        type:
          example: broadcast
          type: string
      type: object
    GetOperationsResponse:
      example:
        running:
        - /1.0/operations/092a8755-fd90-4ce4-bf91-9f87d03fd5bc
        success:
        - /1.0/operations/c0fc0d0d-a997-462b-842b-f8bd0df82507
      properties:
        success:
          example:
          - /1.0/operations/c0fc0d0d-a997-462b-842b-f8bd0df82507
          items:
            type: string
          type: array
        running:
          example:
          - /1.0/operations/092a8755-fd90-4ce4-bf91-9f87d03fd5bc
          items:
            type: string
          type: array
      type: object
    GetNetworksUUIDResponse:
      example:
        metadata:
          secret: c9209bee6df99315be1660dd215acde4aec89b8e5336039712fc11008d918b0d
        status_code: 103
        updated_at: 2016-02-17T21:59:27.237Z
        err: err
        created_at: 2016-02-17T21:59:27.237Z
        resources:
          images:
          - /1.0/images/54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
        id: b8d84888-1dc2-44fd-b386-7f679e171ba5
        class: token
        status: Running
        may_cancel: true
      properties:
        id:
          example: b8d84888-1dc2-44fd-b386-7f679e171ba5
          type: string
        class:
          example: token
          type: string
        created_at:
          example: 2016-02-17T21:59:27.237Z
          type: string
        updated_at:
          example: 2016-02-17T21:59:27.237Z
          type: string
        status:
          example: Running
          type: string
        status_code:
          example: 103
          type: number
        resources:
          $ref: '#/components/schemas/Resources'
        metadata:
          $ref: '#/components/schemas/Metadata'
        may_cancel:
          example: true
          type: boolean
        err:
          type: string
      type: object
    Resources:
      example:
        images:
        - /1.0/images/54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
      properties:
        images:
          example:
          - /1.0/images/54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473
          items:
            type: string
          type: array
      type: object
    Metadata:
      example:
        secret: c9209bee6df99315be1660dd215acde4aec89b8e5336039712fc11008d918b0d
      properties:
        secret:
          example: c9209bee6df99315be1660dd215acde4aec89b8e5336039712fc11008d918b0d
          type: string
      type: object
    Containers:
      properties:
        containers:
          example:
          - /1.0/instances/test
          items:
            type: string
          type: array
      type: object
    CreateProfilesRequest:
      example:
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        name: my-profilename
        description: Some description string
        config:
          limits.memory: 2GB
      properties:
        name:
          example: my-profilename
          type: string
        description:
          example: Some description string
          type: string
        config:
          $ref: '#/components/schemas/MemoryLimitsConfig'
        devices:
          $ref: '#/components/schemas/DevicesKvm'
      type: object
    MemoryLimitsConfig:
      example:
        limits.memory: 2GB
      properties:
        limits.memory:
          example: 2GB
          type: string
      type: object
    GetProfilesByNameResponse:
      example:
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        name: test
        description: Some description string
        config:
          limits.memory: 2GB
        used_by:
        - /1.0/instances/blah
      properties:
        name:
          example: test
          type: string
        description:
          example: Some description string
          type: string
        config:
          $ref: '#/components/schemas/MemoryLimitsConfig'
        devices:
          $ref: '#/components/schemas/DevicesKvm'
        used_by:
          example:
          - /1.0/instances/blah
          items:
            type: string
          type: array
      type: object
    UpdateProfilesByNameRequest:
      example:
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        description: Some description string
        config:
          limits.memory: 2GB
      properties:
        config:
          $ref: '#/components/schemas/MemoryLimitsConfig'
        description:
          example: Some description string
          type: string
        devices:
          $ref: '#/components/schemas/DevicesKvm'
      type: object
    CreateProfilesByNameRequest:
      example:
        name: new-name
      properties:
        name:
          example: new-name
          type: string
      type: object
    CreateProjectsRequest:
      example:
        name: test
        description: Some description string
        config:
          features.images: "true"
          features.profiles: "true"
      properties:
        name:
          example: test
          type: string
        config:
          $ref: '#/components/schemas/FeaturesConfig'
        description:
          example: Some description string
          type: string
      type: object
    FeaturesConfig:
      example:
        features.images: "true"
        features.profiles: "true"
      properties:
        features.images:
          example: "true"
          type: string
        features.profiles:
          example: "true"
          type: string
      type: object
    GetProjectsByNameResponse:
      example:
        name: test
        description: Some description string
        config:
          features.images: "true"
          features.profiles: "true"
        used_by:
        - /1.0/instances/blah
      properties:
        name:
          example: test
          type: string
        config:
          $ref: '#/components/schemas/FeaturesConfig'
        description:
          example: Some description string
          type: string
        used_by:
          example:
          - /1.0/instances/blah
          items:
            type: string
          type: array
      type: object
    UpdateProjectsByNameRequest:
      example:
        description: Some description string
        config:
          features.images: "true"
          features.profiles: "true"
      properties:
        config:
          $ref: '#/components/schemas/FeaturesConfig'
        description:
          example: Some description string
          type: string
      type: object
    CreateProjectsByNameRequest:
      example:
        name: new-name
      properties:
        name:
          example: new-name
          type: string
      type: object
    CreateStoragePoolsRequest:
      example:
        driver: zfs
        name: pool1
        config:
          size: 10GB
      properties:
        config:
          $ref: '#/components/schemas/SizeConfig'
        driver:
          example: zfs
          type: string
        name:
          example: pool1
          type: string
      type: object
    SizeConfig:
      example:
        size: 10GB
      properties:
        size:
          example: 10GB
          type: string
      type: object
    GetStoragePoolsByNameResponse:
      allOf:
      - $ref: '#/components/schemas/BackgroundOperationResponse'
      - $ref: '#/components/schemas/GetStoragePoolsByNameResponse_allOf'
    GetStoragePoolsByNameResponseMetadata:
      properties:
        name:
          example: default
          type: string
        driver:
          example: zfs
          type: string
        used_by:
          example:
          - /1.0/instances/alp1
          - /1.0/instances/alp10
          - /1.0/instances/alp11
          - /1.0/instances/alp12
          - /1.0/instances/alp13
          - /1.0/instances/alp14
          - /1.0/instances/alp15
          - /1.0/instances/alp16
          - /1.0/instances/alp17
          - /1.0/instances/alp18
          - /1.0/instances/alp19
          - /1.0/instances/alp2
          - /1.0/instances/alp20
          - /1.0/instances/alp3
          - /1.0/instances/alp4
          - /1.0/instances/alp5
          - /1.0/instances/alp6
          - /1.0/instances/alp7
          - /1.0/instances/alp8
          - /1.0/instances/alp9
          - /1.0/images/62e850a334bb9d99cac00b2e618e0291e5e7bb7db56c4246ecaf8e46fa0631a6
          items:
            type: string
          type: array
        config:
          $ref: '#/components/schemas/DiskConfig'
      type: object
    DiskConfig:
      properties:
        size:
          example: "61203283968"
          type: string
        source:
          example: /home/chb/mnt/l2/disks/default.img
          type: string
        volume.size:
          example: "0"
          type: string
        zfs.pool_name:
          example: default
          type: string
      type: object
    UpdateStoragePoolsByNameRequest:
      example:
        config:
          lvm.vg_name: pool1
          volume.block.filesystem: xfs
          volume.block.mount_options: discard
          size: "15032385536"
          lvm.thinpool_name: LXDThinPool
          source: pool1
          volume.size: "10737418240"
      properties:
        config:
          $ref: '#/components/schemas/DiskAndLvmConfig'
      type: object
    DiskAndLvmConfig:
      example:
        lvm.vg_name: pool1
        volume.block.filesystem: xfs
        volume.block.mount_options: discard
        size: "15032385536"
        lvm.thinpool_name: LXDThinPool
        source: pool1
        volume.size: "10737418240"
      properties:
        size:
          example: "15032385536"
          type: string
        source:
          example: pool1
          type: string
        volume.block.filesystem:
          example: xfs
          type: string
        volume.block.mount_options:
          example: discard
          type: string
        lvm.thinpool_name:
          example: LXDThinPool
          type: string
        lvm.vg_name:
          example: pool1
          type: string
        volume.size:
          example: "10737418240"
          type: string
      type: object
    PatchStoragePoolsByNameRequest:
      example:
        config:
          volume.block.filesystem: xfs
      properties:
        config:
          $ref: '#/components/schemas/VolumeBlockFileSystemConfig'
      type: object
    VolumeBlockFileSystemConfig:
      example:
        volume.block.filesystem: xfs
      properties:
        volume.block.filesystem:
          example: xfs
          type: string
      type: object
    GetStoragePoolsByNameResourcesResponse:
      allOf:
      - $ref: '#/components/schemas/BackgroundOperationResponse'
      - $ref: '#/components/schemas/GetStoragePoolsByNameResourcesResponse_allOf'
    GetStoragePoolsByNameResourcesResponseMetadata:
      properties:
        space:
          $ref: '#/components/schemas/SpaceInodes'
        inodes:
          $ref: '#/components/schemas/SpaceInodes'
      type: object
    SpaceInodes:
      properties:
        used:
          example: 3275333
          type: number
        total:
          example: 18989056
          type: number
      type: object
    CreateStoragePoolsByNameVolumesRequest:
      description: Input (when migrating a volume)
      example:
        name: vol1
        source:
          mode: pull
          pool: pool2
          name: vol2
          type: migration
        type: custom
        config: {}
      properties:
        config:
          example: {}
          type: object
        name:
          example: vol1
          type: string
        type:
          example: custom
          type: string
        source:
          $ref: '#/components/schemas/Source13'
      type: object
    Source13:
      example:
        mode: pull
        pool: pool2
        name: vol2
        type: migration
      properties:
        pool:
          example: pool2
          type: string
        name:
          example: vol2
          type: string
        type:
          example: migration
          type: string
        mode:
          example: pull
          type: string
      type: object
    CreateStoragePoolsByNameVolumesByTypeRequest:
      description: Input (when copying a volume)
      example:
        name: vol1
        source:
          mode: pull
          pool: pool2
          name: vol2
          type: migration
        config: {}
      properties:
        config:
          example: {}
          type: object
        name:
          example: vol1
          type: string
        source:
          $ref: '#/components/schemas/Source13'
      type: object
    GetStoragePoolsByNameVolumesByTypeNameResponse:
      allOf:
      - $ref: '#/components/schemas/BackgroundOperationResponse'
      - $ref: '#/components/schemas/GetStoragePoolsByNameVolumesByTypeNameResponse_allOf'
    GetStoragePoolsByNameVolumesByTypeNameResponseMetadata:
      properties:
        type:
          example: custom
          type: string
        used_by:
          items:
            type: string
          type: array
        name:
          example: vol1
          type: string
        config:
          $ref: '#/components/schemas/BlockFileSystemAndMountOptionsConfig'
      type: object
    BlockFileSystemAndMountOptionsConfig:
      properties:
        block.filesystem:
          example: ext4
          type: string
        block.mount_options:
          example: discard
          type: string
        size:
          example: "10737418240"
          type: string
      type: object
    CreateStoragePoolsByNameVolumesByTypeNameRequest:
      description: Input (migration across lxd instances)
      example:
        name: vol1
        pool: pool13
        migration: true
      properties:
        name:
          example: vol1
          type: string
        pool:
          example: pool13
          type: string
        migration:
          example: true
          type: boolean
      type: object
    UpdateStoragePoolsByNameVolumesByTypeNameRequest:
      oneOf:
      - $ref: '#/components/schemas/UpdateStoragePoolsByNameVolumesByTypeNameRequest2'
      - $ref: '#/components/schemas/UpdateStoragePoolsByNameVolumesByTypeNameRequest_oneOf'
    UpdateStoragePoolsByNameVolumesByTypeNameRequest2:
      example:
        config:
          lvm.vg_name: pool1
          volume.block.filesystem: xfs
          volume.block.mount_options: discard
          size: "15032385536"
          lvm.thinpool_name: LXDThinPool
          source: pool1
          volume.size: "10737418240"
          used_by: used_by
      properties:
        config:
          $ref: '#/components/schemas/FileSystemMountOptionsAndThinPoolConfig'
      type: object
    FileSystemMountOptionsAndThinPoolConfig:
      example:
        lvm.vg_name: pool1
        volume.block.filesystem: xfs
        volume.block.mount_options: discard
        size: "15032385536"
        lvm.thinpool_name: LXDThinPool
        source: pool1
        volume.size: "10737418240"
        used_by: used_by
      properties:
        size:
          example: "15032385536"
          type: string
        source:
          example: pool1
          type: string
        used_by:
          type: string
        volume.block.filesystem:
          example: xfs
          type: string
        volume.block.mount_options:
          example: discard
          type: string
        lvm.thinpool_name:
          example: LXDThinPool
          type: string
        lvm.vg_name:
          example: pool1
          type: string
        volume.size:
          example: "10737418240"
          type: string
      type: object
    CreateStoragePoolsByNameVolumesByTypeNameSnapshotsRequest:
      example:
        name: my-snapshot
      properties:
        name:
          example: my-snapshot
          type: string
      type: object
    GetStoragePoolsByNameVolumesByTypeNameSnapshotsNameResponse:
      example:
        name: snap0
        description: description
        config: {}
      properties:
        config:
          example: {}
          type: object
        name:
          example: snap0
          type: string
        description:
          type: string
      type: object
    UpdateStoragePoolsByNameVolumesByTypeNameSnapshotsNameRequest:
      example:
        description: new-description
      properties:
        description:
          example: new-description
          type: string
      type: object
    CreateStoragePoolsByNameVolumesByTypeNameSnapshotsNameRequest:
      example:
        name: new-name
      properties:
        name:
          example: new-name
          type: string
      type: object
    GetResourcesResponse:
      allOf:
      - $ref: '#/components/schemas/BackgroundOperationResponse'
      - $ref: '#/components/schemas/GetResourcesResponse_allOf'
    GetResourcesResponseMetadata:
      properties:
        cpu:
          $ref: '#/components/schemas/Cpu2'
        memory:
          $ref: '#/components/schemas/Memory2'
      type: object
    Cpu2:
      properties:
        sockets:
          items:
            $ref: '#/components/schemas/Sockets'
          type: array
        total:
          example: 2
          type: number
      type: object
    Sockets:
      properties:
        cores:
          example: 2
          type: number
        frequency:
          example: 2691
          type: number
        frequency_turbo:
          example: 3400
          type: number
        name:
          example: GenuineIntel
          type: string
        vendor:
          example: Intel(R) Core(TM) i5-3340M CPU @ 2.70GHz
          type: string
        threads:
          example: 4
          type: number
      type: object
    Memory2:
      properties:
        used:
          example: 51126272
          type: number
        total:
          example: 70246400
          type: number
      type: object
    GetClusterResponse:
      example:
        server_name: node1
        member_config:
        - name: local
          description: '"source" property for storage pool "local"'
          entity: storage-pool
          key: source
        - name: local
          description: '"source" property for storage pool "local"'
          entity: storage-pool
          key: source
        enabled: true
      properties:
        server_name:
          example: node1
          type: string
        enabled:
          example: true
          type: boolean
        member_config:
          items:
            $ref: '#/components/schemas/MemberConfig'
          type: array
      type: object
    MemberConfig:
      example:
        name: local
        description: '"source" property for storage pool "local"'
        entity: storage-pool
        key: source
      properties:
        entity:
          example: storage-pool
          type: string
        name:
          example: local
          type: string
        key:
          example: source
          type: string
        description:
          example: '"source" property for storage pool "local"'
          type: string
      type: object
    UpdateClusterRequest:
      description: Input (request to join an existing cluster)
      example:
        server_name: node2
        member_config:
        - name: local
          value: /dev/sdb
          entity: storage-pool
          key: source
        - name: local
          value: /dev/sdb
          entity: storage-pool
          key: source
        cluster_address: 10.1.1.101:8443
        server_address: 10.1.1.102:8443
        cluster_certificate: BEGIN CERTIFICATE-----MIFf-----END CERTIFICATE-----
        enabled: true
        cluster_password: sekret
      properties:
        server_name:
          example: node2
          type: string
        server_address:
          example: 10.1.1.102:8443
          type: string
        enabled:
          example: true
          type: boolean
        cluster_address:
          example: 10.1.1.101:8443
          type: string
        cluster_certificate:
          example: BEGIN CERTIFICATE-----MIFf-----END CERTIFICATE-----
          type: string
        cluster_password:
          example: sekret
          type: string
        member_config:
          items:
            $ref: '#/components/schemas/MemberConfig2'
          type: array
      type: object
    MemberConfig2:
      example:
        name: local
        value: /dev/sdb
        entity: storage-pool
        key: source
      properties:
        entity:
          example: storage-pool
          type: string
        name:
          example: local
          type: string
        key:
          example: source
          type: string
        value:
          example: /dev/sdb
          type: string
      type: object
    GetClusterMembersByNameResponse:
      example:
        server_name: lxd1
        database: true
        message: fully operational
        url: https://10.1.1.101:8443
        status: Online
      properties:
        server_name:
          example: lxd1
          type: string
        url:
          example: https://10.1.1.101:8443
          type: string
        database:
          example: true
          type: boolean
        status:
          example: Online
          type: string
        message:
          example: fully operational
          type: string
      type: object
    UpdateClusterMembersByNameRequest:
      example:
        server_name: node1
      properties:
        server_name:
          example: node1
          type: string
      type: object
    GetServerStateResponse_metadata:
      example:
        environment:
          architectures:
          - x86_64
          - i686
          server_pid: 10224
          storage_version: "3.19"
          server: lxc
          addresses: "[1.2.3.4:8443,[1234::1234]:8443]"
          kernel: Linux
          certificate: PEM certificate
          storage: btrfs
          server_version: 0.8.1
          kernel_architecture: x86_64
          driver: lxc
          kernel_version: "3.16"
          driver_version: 1.0.6
        api_extensions:
        - api_extensions
        - api_extensions
        public: false
        auth: "[\"guest\",\"untrusted\",\"trusted\"]"
        api_status: stable
        api_version: "1.0"
        config:
          core.https_address: "[::]:8443"
          core.trust_password: true
      properties:
        api_extensions:
          description: List of API extensions added after the API was marked stable
          items:
            type: string
          type: array
        api_status:
          description: "API implementation status (one of, development, stable or\
            \ deprecated)"
          example: stable
          type: string
        api_version:
          description: The API version as a string
          example: "1.0"
          type: string
        auth:
          description: Authentication state.
          example: "[\"guest\",\"untrusted\",\"trusted\"]"
          type: string
        config:
          $ref: '#/components/schemas/ServerConfig'
        environment:
          $ref: '#/components/schemas/Environment'
        public:
          description: Whether the server should be treated as a public (read-only)
            remote by the client
          example: false
          type: boolean
    GetFingerprintResponse_metadata:
      example:
        certificate: PEM certificate
        name: foo
        fingerprint: SHA256 Hash of the raw certificate
        type: client
      properties:
        type:
          description: "Certificate type (keyring), currently only client"
          example: client
          type: string
        certificate:
          description: "If provided, a valid x509 certificate. If not, the client\
            \ certificate of the connection will be used"
          example: PEM certificate
          type: string
        name:
          description: "An optional name for the certificate. If nothing is provided,\
            \ the host in the TLS header for the request is used."
          example: foo
          type: string
        fingerprint:
          description: dict representing a trusted certificate
          example: SHA256 Hash of the raw certificate
          type: string
    UpdateInstancesByNameRequest_oneOf:
      description: Input (update instance configuration)
      properties:
        architecture:
          example: x86_64
          type: string
        config:
          $ref: '#/components/schemas/HardwareSpecsConfig'
        devices:
          $ref: '#/components/schemas/DevicesRoot'
        ephemeral:
          example: true
          type: boolean
        profiles:
          items:
            type: string
          type: array
    CreateInstancesByNameRequest_oneOf:
      properties:
        name:
          example: new-name
          type: string
        migration:
          example: true
          type: boolean
        live:
          example: "true"
          type: string
    CreateInstancesByNameConsoleRequest_oneOf:
      description: Input (attach to /dev/console)
      properties:
        width:
          description: Initial width of the terminal (optional)
          example: 80
          type: integer
        height:
          description: Initial height of the terminal (optional)
          example: 25
          type: integer
        type:
          description: Connection type ("console" or "vga").
          example: console
          type: string
      required:
      - type
    CreateInstancesByNameExecRequest_oneOf:
      description: Input (run bash)
      properties:
        command:
          description: Command and arguments
          example:
          - /bin/bash
          items:
            type: string
          type: array
        environment:
          description: Optional extra environment variables to set
          type: object
        wait-for-websocket:
          description: Whether to wait for a connection before starting the process
          example: false
          type: boolean
        record-output:
          description: Whether to store stdout and stderr (only valid with wait-for-websocket=false)
            (requires API extension container_exec_recording)
          example: false
          type: boolean
        interactive:
          description: Whether to allocate a pty device instead of PIPEs
          example: true
          type: boolean
        width:
          description: Initial width of the terminal (optional)
          example: 80
          type: integer
        height:
          description: Initial height of the terminal (optional)
          example: 25
          type: integer
        user:
          description: User to run the command as (optional)
          example: 1000
          type: integer
        group:
          description: Group to run the command as (optional)
          example: 1000
          type: integer
        cwd:
          description: Current working directory (optional)
          example: /tmp
          type: string
      required:
      - command
      - interactive
      - record-output
      - wait-for-websocket
    GetInstancesByNameStateResponse_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/GetInstancesByNameStateMetadataResponse'
    GetStoragePoolsByNameResponse_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/GetStoragePoolsByNameResponseMetadata'
        error_code:
          example: 0
          type: integer
        error:
          type: string
    GetStoragePoolsByNameResourcesResponse_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/GetStoragePoolsByNameResourcesResponseMetadata'
        error_code:
          example: 0
          type: integer
        error:
          type: string
    GetStoragePoolsByNameVolumesByTypeNameResponse_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/GetStoragePoolsByNameVolumesByTypeNameResponseMetadata'
        error_code:
          example: 0
          type: integer
        error:
          type: string
    UpdateStoragePoolsByNameVolumesByTypeNameRequest_oneOf:
      description: Input for restore
      properties:
        restore:
          example: snapshot-name
          type: string
    GetResourcesResponse_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/GetResourcesResponseMetadata'
        error_code:
          example: 0
          type: integer
        error:
          type: string
    CreateInstancesRequest:
      example:
        devices:
          kvm:
            path: /dev/kvm
            type: unix-char
        name: my-new-instance
        profiles:
        - default
        ephemeral: true
        source:
          instance_only: true
          server: https://10.0.2.3:8443
          certificate: PEM certificate
          secret: my-secret-string
          source: my-old-instance
          type: image
          secrets:
            criu: my-other-secret
            control: my-secret-string
            fs: my third secret
          mode: pull
          protocol: lxd
          base-image: <fingerprint>
          fingerprint: SHA-256
          alias: ubuntu/devel
          operation: https://10.0.2.3:8443/1.0/operations/<UUID>
          properties:
            os: ubuntu
            release: "18.04"
            architecture: x86_64
          live: true
        type: container
        config:
          limits.cpu: "2"
        instance_type: c2.micro
        architecture: x86_64
      properties:
        name:
          description: "64 chars max, ASCII, no slash, no colon and no comma"
          example: my-new-instance
          type: string
        architecture:
          example: x86_64
          type: string
        profiles:
          description: List of profiles
          example:
          - default
          items:
            type: string
          type: array
        ephemeral:
          description: Whether to destroy the instance on shutdown
          example: true
          type: boolean
        config:
          additionalProperties:
            type: object
          description: This is a map of config parameters to be used during instance
            creation. The keys for this map are the keys from instance.md file (https://github.com/lxc/lxd/blob/master/doc/instances.md#keyvalue-configuration)
            and values are the fields to set.
          example:
            limits.cpu: "2"
            limits.memory: 512MB
          type: object
        type:
          description: "Optional. Can be \"virtual-machine\", \"container\" - by default\
            \ it set to \"container\""
          example: container
          type: string
        devices:
          $ref: '#/components/schemas/DevicesKvm'
        instance_type:
          description: An optional instance type to use as basis for limits
          example: c2.micro
          type: string
        source:
          additionalProperties:
            type: object
          description: |-
            Source to be used to create this container.
            Can be: "image", "migration", "copy" or "none"
          example:
            type: image
            fingerprint: 6d825770a54383a01cdb78ae1c66260024629bb3b362f0ecd7b74dfcc8aa435f
          type: object
      required:
      - architecture
      - config
      - ephemeral
      - name
      - profiles
      - source
      type: object

