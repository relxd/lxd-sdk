/*
 * LXD
 * The services listed below are referred as .....
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@relxd.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.relxd.lxd.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * GetInstancesByNameBackupsByNameResponse
 */
@JsonPropertyOrder({
  GetInstancesByNameBackupsByNameResponse.JSON_PROPERTY_NAME,
  GetInstancesByNameBackupsByNameResponse.JSON_PROPERTY_CREATION_DATE,
  GetInstancesByNameBackupsByNameResponse.JSON_PROPERTY_EXPIRY_DATE,
  GetInstancesByNameBackupsByNameResponse.JSON_PROPERTY_INSTANCE_ONLY,
  GetInstancesByNameBackupsByNameResponse.JSON_PROPERTY_OPTIMIZED_STORAGE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GetInstancesByNameBackupsByNameResponse {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CREATION_DATE = "creation_date";
  private String creationDate;

  public static final String JSON_PROPERTY_EXPIRY_DATE = "expiry_date";
  private String expiryDate;

  public static final String JSON_PROPERTY_INSTANCE_ONLY = "instance_only";
  private Boolean instanceOnly;

  public static final String JSON_PROPERTY_OPTIMIZED_STORAGE = "optimized_storage";
  private Boolean optimizedStorage;


  public GetInstancesByNameBackupsByNameResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "backupName", value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public GetInstancesByNameBackupsByNameResponse creationDate(String creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-04-23T10:16:09.000Z", value = "")
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreationDate() {
    return creationDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }


  public GetInstancesByNameBackupsByNameResponse expiryDate(String expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Get expiryDate
   * @return expiryDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-04-23T10:16:09.000Z", value = "")
  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpiryDate() {
    return expiryDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiryDate(String expiryDate) {
    this.expiryDate = expiryDate;
  }


  public GetInstancesByNameBackupsByNameResponse instanceOnly(Boolean instanceOnly) {
    this.instanceOnly = instanceOnly;
    return this;
  }

   /**
   * Get instanceOnly
   * @return instanceOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")
  @JsonProperty(JSON_PROPERTY_INSTANCE_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getInstanceOnly() {
    return instanceOnly;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstanceOnly(Boolean instanceOnly) {
    this.instanceOnly = instanceOnly;
  }


  public GetInstancesByNameBackupsByNameResponse optimizedStorage(Boolean optimizedStorage) {
    this.optimizedStorage = optimizedStorage;
    return this;
  }

   /**
   * Get optimizedStorage
   * @return optimizedStorage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")
  @JsonProperty(JSON_PROPERTY_OPTIMIZED_STORAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOptimizedStorage() {
    return optimizedStorage;
  }


  @JsonProperty(JSON_PROPERTY_OPTIMIZED_STORAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptimizedStorage(Boolean optimizedStorage) {
    this.optimizedStorage = optimizedStorage;
  }


  /**
   * Return true if this GetInstancesByNameBackupsByNameResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetInstancesByNameBackupsByNameResponse getInstancesByNameBackupsByNameResponse = (GetInstancesByNameBackupsByNameResponse) o;
    return Objects.equals(this.name, getInstancesByNameBackupsByNameResponse.name) &&
        Objects.equals(this.creationDate, getInstancesByNameBackupsByNameResponse.creationDate) &&
        Objects.equals(this.expiryDate, getInstancesByNameBackupsByNameResponse.expiryDate) &&
        Objects.equals(this.instanceOnly, getInstancesByNameBackupsByNameResponse.instanceOnly) &&
        Objects.equals(this.optimizedStorage, getInstancesByNameBackupsByNameResponse.optimizedStorage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, creationDate, expiryDate, instanceOnly, optimizedStorage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetInstancesByNameBackupsByNameResponse {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    instanceOnly: ").append(toIndentedString(instanceOnly)).append("\n");
    sb.append("    optimizedStorage: ").append(toIndentedString(optimizedStorage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

