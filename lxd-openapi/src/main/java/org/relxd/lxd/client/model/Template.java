/*
 * LXD
 * The services listed below are referred as .....
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@relxd.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.relxd.lxd.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Template
 */
@JsonPropertyOrder({
  Template.JSON_PROPERTY_WHEN,
  Template.JSON_PROPERTY_CREATE_ONLY,
  Template.JSON_PROPERTY_TEMPLATE,
  Template.JSON_PROPERTY_PROPERTIES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Template {
  public static final String JSON_PROPERTY_WHEN = "when";
  private List<String> when = null;

  public static final String JSON_PROPERTY_CREATE_ONLY = "create_only";
  private Boolean createOnly;

  public static final String JSON_PROPERTY_TEMPLATE = "template";
  private String template;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private Object properties;


  public Template when(List<String> when) {
    this.when = when;
    return this;
  }

  public Template addWhenItem(String whenItem) {
    if (this.when == null) {
      this.when = new ArrayList<>();
    }
    this.when.add(whenItem);
    return this;
  }

   /**
   * Get when
   * @return when
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WHEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getWhen() {
    return when;
  }


  @JsonProperty(JSON_PROPERTY_WHEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWhen(List<String> when) {
    this.when = when;
  }


  public Template createOnly(Boolean createOnly) {
    this.createOnly = createOnly;
    return this;
  }

   /**
   * Get createOnly
   * @return createOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")
  @JsonProperty(JSON_PROPERTY_CREATE_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCreateOnly() {
    return createOnly;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateOnly(Boolean createOnly) {
    this.createOnly = createOnly;
  }


  public Template template(String template) {
    this.template = template;
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "template.tpl", value = "")
  @JsonProperty(JSON_PROPERTY_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTemplate() {
    return template;
  }


  @JsonProperty(JSON_PROPERTY_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemplate(String template) {
    this.template = template;
  }


  public Template properties(Object properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(Object properties) {
    this.properties = properties;
  }


  /**
   * Return true if this Template object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Template template = (Template) o;
    return Objects.equals(this.when, template.when) &&
        Objects.equals(this.createOnly, template.createOnly) &&
        Objects.equals(this.template, template.template) &&
        Objects.equals(this.properties, template.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(when, createOnly, template, properties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Template {\n");
    sb.append("    when: ").append(toIndentedString(when)).append("\n");
    sb.append("    createOnly: ").append(toIndentedString(createOnly)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

