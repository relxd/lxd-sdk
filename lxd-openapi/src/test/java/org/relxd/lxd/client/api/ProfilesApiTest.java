/*
 * LXD
 * The services listed below are referred as .....
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@relxd.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.relxd.lxd.client.api;

import org.relxd.lxd.client.ApiException;
import org.relxd.lxd.client.model.BackgroundOperationResponse;
import org.relxd.lxd.client.model.CreateProfilesByNameRequest;
import org.relxd.lxd.client.model.CreateProfilesRequest;
import org.relxd.lxd.client.model.ErrorResponse;
import org.relxd.lxd.client.model.UpdateProfilesByNameRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import java.util.concurrent.CompletableFuture;

/**
 * API tests for ProfilesApi
 */
@Ignore
public class ProfilesApiTest {

    private final ProfilesApi api = new ProfilesApi();

    
    /**
     * 
     *
     * Remove a profile
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteProfilesByNameTest() throws ApiException {
        String name = null;
        CompletableFuture<BackgroundOperationResponse> response = 
        api.deleteProfilesByName(name);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * List of configuration profiles
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProfilesTest() throws ApiException {
        Integer recursion = null;
        String filter = null;
        CompletableFuture<BackgroundOperationResponse> response = 
        api.getProfiles(recursion, filter);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Profile configuration
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProfilesByNameTest() throws ApiException {
        String name = null;
        Integer recursion = null;
        String filter = null;
        CompletableFuture<BackgroundOperationResponse> response = 
        api.getProfilesByName(name, recursion, filter);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Update the profile information
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchProfilesByNameTest() throws ApiException {
        String name = null;
        UpdateProfilesByNameRequest body = null;
        CompletableFuture<BackgroundOperationResponse> response = 
        api.patchProfilesByName(name, body);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Define a new profile
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postProfilesTest() throws ApiException {
        CreateProfilesRequest body = null;
        CompletableFuture<BackgroundOperationResponse> response = 
        api.postProfiles(body);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Rename a profile
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postProfilesByNameTest() throws ApiException {
        String name = null;
        CreateProfilesByNameRequest body = null;
        CompletableFuture<BackgroundOperationResponse> response = 
        api.postProfilesByName(name, body);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Replace the profile information
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putProfilesByNameTest() throws ApiException {
        String name = null;
        UpdateProfilesByNameRequest body = null;
        CompletableFuture<BackgroundOperationResponse> response = 
        api.putProfilesByName(name, body);
        
        // TODO: test validations
    }
    
}
